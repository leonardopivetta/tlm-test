// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primary.proto

#include "primary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_primary_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BMS_HV_CHIMERA;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BMS_HV_JMP_TO_BLT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BMS_LV_JMP_TO_BLT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ACT_I;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ACT_II;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ERR;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_NLG5_CTL;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ST;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_TEMP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CAR_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_COOLING_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DAS_ERRORS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DAS_VERSION;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ECU_CHIMERA;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_HV_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_HV_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_LV_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_LV_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_RX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_TX;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HANDCART_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CAN_FORWARD;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CAN_FORWARD_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELLS_TEMP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELLS_VOLTAGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELL_BALANCING_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_CURRENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_ERRORS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_FANS_OVERRIDE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_FANS_OVERRIDE_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_FEEDBACKS_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_IMD_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_TEMP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_VERSION;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HV_VOLTAGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_INVERTER_CONNECTION_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_INV_L_REQUEST;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_INV_L_RESPONSE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_INV_R_REQUEST;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_INV_R_RESPONSE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_CURRENT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_ERRORS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_TEMPERATURE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_TOTAL_VOLTAGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_VERSION;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LV_VOLTAGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MARKER;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_CAR_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_CELL_BALANCING_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_INVERTER_CONNECTION_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_PEDALS_RANGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_PUMPS_SPEED;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_RADIATOR_SPEED;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_STEERING_ANGLE_RANGE;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_TLM_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_TS_STATUS_DAS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SET_TS_STATUS_HANDCART;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SHUTDOWN_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SPEED;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STEER_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STEER_SYSTEM_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_STEER_VERSION;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TIMESTAMP;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TLM_STATUS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TLM_VERSION;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_primary_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TS_STATUS;
}  // namespace protobuf_primary_2eproto
namespace primary {
class BMS_HV_JMP_TO_BLTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BMS_HV_JMP_TO_BLT>
      _instance;
} _BMS_HV_JMP_TO_BLT_default_instance_;
class BMS_LV_JMP_TO_BLTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BMS_LV_JMP_TO_BLT>
      _instance;
} _BMS_LV_JMP_TO_BLT_default_instance_;
class STEER_VERSIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STEER_VERSION>
      _instance;
} _STEER_VERSION_default_instance_;
class DAS_VERSIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DAS_VERSION>
      _instance;
} _DAS_VERSION_default_instance_;
class HV_VERSIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_VERSION>
      _instance;
} _HV_VERSION_default_instance_;
class LV_VERSIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_VERSION>
      _instance;
} _LV_VERSION_default_instance_;
class TLM_VERSIONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TLM_VERSION>
      _instance;
} _TLM_VERSION_default_instance_;
class TIMESTAMPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TIMESTAMP>
      _instance;
} _TIMESTAMP_default_instance_;
class SET_TLM_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_TLM_STATUS>
      _instance;
} _SET_TLM_STATUS_default_instance_;
class TLM_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TLM_STATUS>
      _instance;
} _TLM_STATUS_default_instance_;
class STEER_SYSTEM_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STEER_SYSTEM_STATUS>
      _instance;
} _STEER_SYSTEM_STATUS_default_instance_;
class HV_VOLTAGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_VOLTAGE>
      _instance;
} _HV_VOLTAGE_default_instance_;
class HV_CURRENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CURRENT>
      _instance;
} _HV_CURRENT_default_instance_;
class HV_TEMPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_TEMP>
      _instance;
} _HV_TEMP_default_instance_;
class HV_ERRORSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_ERRORS>
      _instance;
} _HV_ERRORS_default_instance_;
class HV_CAN_FORWARDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CAN_FORWARD>
      _instance;
} _HV_CAN_FORWARD_default_instance_;
class HV_FANS_OVERRIDEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_FANS_OVERRIDE>
      _instance;
} _HV_FANS_OVERRIDE_default_instance_;
class HV_CAN_FORWARD_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CAN_FORWARD_STATUS>
      _instance;
} _HV_CAN_FORWARD_STATUS_default_instance_;
class HV_FANS_OVERRIDE_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_FANS_OVERRIDE_STATUS>
      _instance;
} _HV_FANS_OVERRIDE_STATUS_default_instance_;
class HV_FEEDBACKS_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_FEEDBACKS_STATUS>
      _instance;
} _HV_FEEDBACKS_STATUS_default_instance_;
class HV_IMD_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_IMD_STATUS>
      _instance;
} _HV_IMD_STATUS_default_instance_;
class TS_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TS_STATUS>
      _instance;
} _TS_STATUS_default_instance_;
class SET_TS_STATUS_DASDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_TS_STATUS_DAS>
      _instance;
} _SET_TS_STATUS_DAS_default_instance_;
class SET_TS_STATUS_HANDCARTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_TS_STATUS_HANDCART>
      _instance;
} _SET_TS_STATUS_HANDCART_default_instance_;
class STEER_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STEER_STATUS>
      _instance;
} _STEER_STATUS_default_instance_;
class SET_CAR_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_CAR_STATUS>
      _instance;
} _SET_CAR_STATUS_default_instance_;
class SET_PEDALS_RANGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_PEDALS_RANGE>
      _instance;
} _SET_PEDALS_RANGE_default_instance_;
class SET_STEERING_ANGLE_RANGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_STEERING_ANGLE_RANGE>
      _instance;
} _SET_STEERING_ANGLE_RANGE_default_instance_;
class CAR_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CAR_STATUS>
      _instance;
} _CAR_STATUS_default_instance_;
class DAS_ERRORSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DAS_ERRORS>
      _instance;
} _DAS_ERRORS_default_instance_;
class LV_CURRENTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_CURRENT>
      _instance;
} _LV_CURRENT_default_instance_;
class LV_VOLTAGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_VOLTAGE>
      _instance;
} _LV_VOLTAGE_default_instance_;
class LV_TOTAL_VOLTAGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_TOTAL_VOLTAGE>
      _instance;
} _LV_TOTAL_VOLTAGE_default_instance_;
class LV_TEMPERATUREDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_TEMPERATURE>
      _instance;
} _LV_TEMPERATURE_default_instance_;
class COOLING_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<COOLING_STATUS>
      _instance;
} _COOLING_STATUS_default_instance_;
class SET_RADIATOR_SPEEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_RADIATOR_SPEED>
      _instance;
} _SET_RADIATOR_SPEED_default_instance_;
class SET_PUMPS_SPEEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_PUMPS_SPEED>
      _instance;
} _SET_PUMPS_SPEED_default_instance_;
class SET_INVERTER_CONNECTION_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_INVERTER_CONNECTION_STATUS>
      _instance;
} _SET_INVERTER_CONNECTION_STATUS_default_instance_;
class INVERTER_CONNECTION_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<INVERTER_CONNECTION_STATUS>
      _instance;
} _INVERTER_CONNECTION_STATUS_default_instance_;
class LV_ERRORSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LV_ERRORS>
      _instance;
} _LV_ERRORS_default_instance_;
class SHUTDOWN_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SHUTDOWN_STATUS>
      _instance;
} _SHUTDOWN_STATUS_default_instance_;
class MARKERDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MARKER>
      _instance;
} _MARKER_default_instance_;
class HV_CELLS_VOLTAGEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CELLS_VOLTAGE>
      _instance;
} _HV_CELLS_VOLTAGE_default_instance_;
class HV_CELLS_TEMPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CELLS_TEMP>
      _instance;
} _HV_CELLS_TEMP_default_instance_;
class HV_CELL_BALANCING_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HV_CELL_BALANCING_STATUS>
      _instance;
} _HV_CELL_BALANCING_STATUS_default_instance_;
class SET_CELL_BALANCING_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SET_CELL_BALANCING_STATUS>
      _instance;
} _SET_CELL_BALANCING_STATUS_default_instance_;
class HANDCART_STATUSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HANDCART_STATUS>
      _instance;
} _HANDCART_STATUS_default_instance_;
class SPEEDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SPEED>
      _instance;
} _SPEED_default_instance_;
class INV_L_REQUESTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<INV_L_REQUEST>
      _instance;
} _INV_L_REQUEST_default_instance_;
class INV_R_REQUESTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<INV_R_REQUEST>
      _instance;
} _INV_R_REQUEST_default_instance_;
class INV_L_RESPONSEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<INV_L_RESPONSE>
      _instance;
} _INV_L_RESPONSE_default_instance_;
class INV_R_RESPONSEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<INV_R_RESPONSE>
      _instance;
} _INV_R_RESPONSE_default_instance_;
class FLASH_CELLBOARD_0_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_0_TX>
      _instance;
} _FLASH_CELLBOARD_0_TX_default_instance_;
class FLASH_CELLBOARD_0_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_0_RX>
      _instance;
} _FLASH_CELLBOARD_0_RX_default_instance_;
class FLASH_CELLBOARD_1_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_1_TX>
      _instance;
} _FLASH_CELLBOARD_1_TX_default_instance_;
class FLASH_CELLBOARD_1_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_1_RX>
      _instance;
} _FLASH_CELLBOARD_1_RX_default_instance_;
class FLASH_CELLBOARD_2_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_2_TX>
      _instance;
} _FLASH_CELLBOARD_2_TX_default_instance_;
class FLASH_CELLBOARD_2_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_2_RX>
      _instance;
} _FLASH_CELLBOARD_2_RX_default_instance_;
class FLASH_CELLBOARD_3_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_3_TX>
      _instance;
} _FLASH_CELLBOARD_3_TX_default_instance_;
class FLASH_CELLBOARD_3_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_3_RX>
      _instance;
} _FLASH_CELLBOARD_3_RX_default_instance_;
class FLASH_CELLBOARD_4_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_4_TX>
      _instance;
} _FLASH_CELLBOARD_4_TX_default_instance_;
class FLASH_CELLBOARD_4_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_4_RX>
      _instance;
} _FLASH_CELLBOARD_4_RX_default_instance_;
class FLASH_CELLBOARD_5_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_5_TX>
      _instance;
} _FLASH_CELLBOARD_5_TX_default_instance_;
class FLASH_CELLBOARD_5_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_CELLBOARD_5_RX>
      _instance;
} _FLASH_CELLBOARD_5_RX_default_instance_;
class FLASH_BMS_HV_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_BMS_HV_TX>
      _instance;
} _FLASH_BMS_HV_TX_default_instance_;
class FLASH_BMS_HV_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_BMS_HV_RX>
      _instance;
} _FLASH_BMS_HV_RX_default_instance_;
class FLASH_BMS_LV_TXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_BMS_LV_TX>
      _instance;
} _FLASH_BMS_LV_TX_default_instance_;
class FLASH_BMS_LV_RXDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FLASH_BMS_LV_RX>
      _instance;
} _FLASH_BMS_LV_RX_default_instance_;
class BRUSA_NLG5_CTLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_NLG5_CTL>
      _instance;
} _BRUSA_NLG5_CTL_default_instance_;
class BRUSA_STDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_ST>
      _instance;
} _BRUSA_ST_default_instance_;
class BRUSA_ACT_IDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_ACT_I>
      _instance;
} _BRUSA_ACT_I_default_instance_;
class BRUSA_ACT_IIDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_ACT_II>
      _instance;
} _BRUSA_ACT_II_default_instance_;
class BRUSA_TEMPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_TEMP>
      _instance;
} _BRUSA_TEMP_default_instance_;
class BRUSA_ERRDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BRUSA_ERR>
      _instance;
} _BRUSA_ERR_default_instance_;
class BMS_HV_CHIMERADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BMS_HV_CHIMERA>
      _instance;
} _BMS_HV_CHIMERA_default_instance_;
class ECU_CHIMERADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ECU_CHIMERA>
      _instance;
} _ECU_CHIMERA_default_instance_;
class PackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pack>
      _instance;
} _Pack_default_instance_;
}  // namespace primary
namespace protobuf_primary_2eproto {
static void InitDefaultsBMS_HV_JMP_TO_BLT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BMS_HV_JMP_TO_BLT_default_instance_;
    new (ptr) ::primary::BMS_HV_JMP_TO_BLT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BMS_HV_JMP_TO_BLT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BMS_HV_JMP_TO_BLT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBMS_HV_JMP_TO_BLT}, {}};

static void InitDefaultsBMS_LV_JMP_TO_BLT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BMS_LV_JMP_TO_BLT_default_instance_;
    new (ptr) ::primary::BMS_LV_JMP_TO_BLT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BMS_LV_JMP_TO_BLT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BMS_LV_JMP_TO_BLT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBMS_LV_JMP_TO_BLT}, {}};

static void InitDefaultsSTEER_VERSION() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_STEER_VERSION_default_instance_;
    new (ptr) ::primary::STEER_VERSION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::STEER_VERSION::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STEER_VERSION =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTEER_VERSION}, {}};

static void InitDefaultsDAS_VERSION() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_DAS_VERSION_default_instance_;
    new (ptr) ::primary::DAS_VERSION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::DAS_VERSION::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DAS_VERSION =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDAS_VERSION}, {}};

static void InitDefaultsHV_VERSION() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_VERSION_default_instance_;
    new (ptr) ::primary::HV_VERSION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_VERSION::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_VERSION =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_VERSION}, {}};

static void InitDefaultsLV_VERSION() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_VERSION_default_instance_;
    new (ptr) ::primary::LV_VERSION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_VERSION::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_VERSION =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_VERSION}, {}};

static void InitDefaultsTLM_VERSION() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_TLM_VERSION_default_instance_;
    new (ptr) ::primary::TLM_VERSION();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::TLM_VERSION::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TLM_VERSION =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTLM_VERSION}, {}};

static void InitDefaultsTIMESTAMP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_TIMESTAMP_default_instance_;
    new (ptr) ::primary::TIMESTAMP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::TIMESTAMP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TIMESTAMP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTIMESTAMP}, {}};

static void InitDefaultsSET_TLM_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_TLM_STATUS_default_instance_;
    new (ptr) ::primary::SET_TLM_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_TLM_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_TLM_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_TLM_STATUS}, {}};

static void InitDefaultsTLM_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_TLM_STATUS_default_instance_;
    new (ptr) ::primary::TLM_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::TLM_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TLM_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTLM_STATUS}, {}};

static void InitDefaultsSTEER_SYSTEM_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_STEER_SYSTEM_STATUS_default_instance_;
    new (ptr) ::primary::STEER_SYSTEM_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::STEER_SYSTEM_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STEER_SYSTEM_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTEER_SYSTEM_STATUS}, {}};

static void InitDefaultsHV_VOLTAGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_VOLTAGE_default_instance_;
    new (ptr) ::primary::HV_VOLTAGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_VOLTAGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_VOLTAGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_VOLTAGE}, {}};

static void InitDefaultsHV_CURRENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CURRENT_default_instance_;
    new (ptr) ::primary::HV_CURRENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CURRENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CURRENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CURRENT}, {}};

static void InitDefaultsHV_TEMP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_TEMP_default_instance_;
    new (ptr) ::primary::HV_TEMP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_TEMP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_TEMP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_TEMP}, {}};

static void InitDefaultsHV_ERRORS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_ERRORS_default_instance_;
    new (ptr) ::primary::HV_ERRORS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_ERRORS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_ERRORS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_ERRORS}, {}};

static void InitDefaultsHV_CAN_FORWARD() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CAN_FORWARD_default_instance_;
    new (ptr) ::primary::HV_CAN_FORWARD();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CAN_FORWARD::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CAN_FORWARD =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CAN_FORWARD}, {}};

static void InitDefaultsHV_FANS_OVERRIDE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_FANS_OVERRIDE_default_instance_;
    new (ptr) ::primary::HV_FANS_OVERRIDE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_FANS_OVERRIDE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_FANS_OVERRIDE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_FANS_OVERRIDE}, {}};

static void InitDefaultsHV_CAN_FORWARD_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CAN_FORWARD_STATUS_default_instance_;
    new (ptr) ::primary::HV_CAN_FORWARD_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CAN_FORWARD_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CAN_FORWARD_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CAN_FORWARD_STATUS}, {}};

static void InitDefaultsHV_FANS_OVERRIDE_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_FANS_OVERRIDE_STATUS_default_instance_;
    new (ptr) ::primary::HV_FANS_OVERRIDE_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_FANS_OVERRIDE_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_FANS_OVERRIDE_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_FANS_OVERRIDE_STATUS}, {}};

static void InitDefaultsHV_FEEDBACKS_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_FEEDBACKS_STATUS_default_instance_;
    new (ptr) ::primary::HV_FEEDBACKS_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_FEEDBACKS_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_FEEDBACKS_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_FEEDBACKS_STATUS}, {}};

static void InitDefaultsHV_IMD_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_IMD_STATUS_default_instance_;
    new (ptr) ::primary::HV_IMD_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_IMD_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_IMD_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_IMD_STATUS}, {}};

static void InitDefaultsTS_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_TS_STATUS_default_instance_;
    new (ptr) ::primary::TS_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::TS_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TS_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTS_STATUS}, {}};

static void InitDefaultsSET_TS_STATUS_DAS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_TS_STATUS_DAS_default_instance_;
    new (ptr) ::primary::SET_TS_STATUS_DAS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_TS_STATUS_DAS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_TS_STATUS_DAS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_TS_STATUS_DAS}, {}};

static void InitDefaultsSET_TS_STATUS_HANDCART() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_TS_STATUS_HANDCART_default_instance_;
    new (ptr) ::primary::SET_TS_STATUS_HANDCART();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_TS_STATUS_HANDCART::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_TS_STATUS_HANDCART =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_TS_STATUS_HANDCART}, {}};

static void InitDefaultsSTEER_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_STEER_STATUS_default_instance_;
    new (ptr) ::primary::STEER_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::STEER_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_STEER_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSTEER_STATUS}, {}};

static void InitDefaultsSET_CAR_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_CAR_STATUS_default_instance_;
    new (ptr) ::primary::SET_CAR_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_CAR_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_CAR_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_CAR_STATUS}, {}};

static void InitDefaultsSET_PEDALS_RANGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_PEDALS_RANGE_default_instance_;
    new (ptr) ::primary::SET_PEDALS_RANGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_PEDALS_RANGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_PEDALS_RANGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_PEDALS_RANGE}, {}};

static void InitDefaultsSET_STEERING_ANGLE_RANGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_STEERING_ANGLE_RANGE_default_instance_;
    new (ptr) ::primary::SET_STEERING_ANGLE_RANGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_STEERING_ANGLE_RANGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_STEERING_ANGLE_RANGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_STEERING_ANGLE_RANGE}, {}};

static void InitDefaultsCAR_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_CAR_STATUS_default_instance_;
    new (ptr) ::primary::CAR_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::CAR_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CAR_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCAR_STATUS}, {}};

static void InitDefaultsDAS_ERRORS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_DAS_ERRORS_default_instance_;
    new (ptr) ::primary::DAS_ERRORS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::DAS_ERRORS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DAS_ERRORS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDAS_ERRORS}, {}};

static void InitDefaultsLV_CURRENT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_CURRENT_default_instance_;
    new (ptr) ::primary::LV_CURRENT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_CURRENT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_CURRENT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_CURRENT}, {}};

static void InitDefaultsLV_VOLTAGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_VOLTAGE_default_instance_;
    new (ptr) ::primary::LV_VOLTAGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_VOLTAGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_VOLTAGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_VOLTAGE}, {}};

static void InitDefaultsLV_TOTAL_VOLTAGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_TOTAL_VOLTAGE_default_instance_;
    new (ptr) ::primary::LV_TOTAL_VOLTAGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_TOTAL_VOLTAGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_TOTAL_VOLTAGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_TOTAL_VOLTAGE}, {}};

static void InitDefaultsLV_TEMPERATURE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_TEMPERATURE_default_instance_;
    new (ptr) ::primary::LV_TEMPERATURE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_TEMPERATURE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_TEMPERATURE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_TEMPERATURE}, {}};

static void InitDefaultsCOOLING_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_COOLING_STATUS_default_instance_;
    new (ptr) ::primary::COOLING_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::COOLING_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_COOLING_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCOOLING_STATUS}, {}};

static void InitDefaultsSET_RADIATOR_SPEED() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_RADIATOR_SPEED_default_instance_;
    new (ptr) ::primary::SET_RADIATOR_SPEED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_RADIATOR_SPEED::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_RADIATOR_SPEED =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_RADIATOR_SPEED}, {}};

static void InitDefaultsSET_PUMPS_SPEED() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_PUMPS_SPEED_default_instance_;
    new (ptr) ::primary::SET_PUMPS_SPEED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_PUMPS_SPEED::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_PUMPS_SPEED =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_PUMPS_SPEED}, {}};

static void InitDefaultsSET_INVERTER_CONNECTION_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_INVERTER_CONNECTION_STATUS_default_instance_;
    new (ptr) ::primary::SET_INVERTER_CONNECTION_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_INVERTER_CONNECTION_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_INVERTER_CONNECTION_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_INVERTER_CONNECTION_STATUS}, {}};

static void InitDefaultsINVERTER_CONNECTION_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_INVERTER_CONNECTION_STATUS_default_instance_;
    new (ptr) ::primary::INVERTER_CONNECTION_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::INVERTER_CONNECTION_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_INVERTER_CONNECTION_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsINVERTER_CONNECTION_STATUS}, {}};

static void InitDefaultsLV_ERRORS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_LV_ERRORS_default_instance_;
    new (ptr) ::primary::LV_ERRORS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::LV_ERRORS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LV_ERRORS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLV_ERRORS}, {}};

static void InitDefaultsSHUTDOWN_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SHUTDOWN_STATUS_default_instance_;
    new (ptr) ::primary::SHUTDOWN_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SHUTDOWN_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SHUTDOWN_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSHUTDOWN_STATUS}, {}};

static void InitDefaultsMARKER() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_MARKER_default_instance_;
    new (ptr) ::primary::MARKER();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::MARKER::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MARKER =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMARKER}, {}};

static void InitDefaultsHV_CELLS_VOLTAGE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CELLS_VOLTAGE_default_instance_;
    new (ptr) ::primary::HV_CELLS_VOLTAGE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CELLS_VOLTAGE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELLS_VOLTAGE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CELLS_VOLTAGE}, {}};

static void InitDefaultsHV_CELLS_TEMP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CELLS_TEMP_default_instance_;
    new (ptr) ::primary::HV_CELLS_TEMP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CELLS_TEMP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELLS_TEMP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CELLS_TEMP}, {}};

static void InitDefaultsHV_CELL_BALANCING_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HV_CELL_BALANCING_STATUS_default_instance_;
    new (ptr) ::primary::HV_CELL_BALANCING_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HV_CELL_BALANCING_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HV_CELL_BALANCING_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHV_CELL_BALANCING_STATUS}, {}};

static void InitDefaultsSET_CELL_BALANCING_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SET_CELL_BALANCING_STATUS_default_instance_;
    new (ptr) ::primary::SET_CELL_BALANCING_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SET_CELL_BALANCING_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SET_CELL_BALANCING_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSET_CELL_BALANCING_STATUS}, {}};

static void InitDefaultsHANDCART_STATUS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_HANDCART_STATUS_default_instance_;
    new (ptr) ::primary::HANDCART_STATUS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::HANDCART_STATUS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HANDCART_STATUS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHANDCART_STATUS}, {}};

static void InitDefaultsSPEED() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_SPEED_default_instance_;
    new (ptr) ::primary::SPEED();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::SPEED::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SPEED =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSPEED}, {}};

static void InitDefaultsINV_L_REQUEST() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_INV_L_REQUEST_default_instance_;
    new (ptr) ::primary::INV_L_REQUEST();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::INV_L_REQUEST::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_INV_L_REQUEST =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsINV_L_REQUEST}, {}};

static void InitDefaultsINV_R_REQUEST() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_INV_R_REQUEST_default_instance_;
    new (ptr) ::primary::INV_R_REQUEST();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::INV_R_REQUEST::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_INV_R_REQUEST =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsINV_R_REQUEST}, {}};

static void InitDefaultsINV_L_RESPONSE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_INV_L_RESPONSE_default_instance_;
    new (ptr) ::primary::INV_L_RESPONSE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::INV_L_RESPONSE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_INV_L_RESPONSE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsINV_L_RESPONSE}, {}};

static void InitDefaultsINV_R_RESPONSE() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_INV_R_RESPONSE_default_instance_;
    new (ptr) ::primary::INV_R_RESPONSE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::INV_R_RESPONSE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_INV_R_RESPONSE =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsINV_R_RESPONSE}, {}};

static void InitDefaultsFLASH_CELLBOARD_0_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_0_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_0_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_0_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_0_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_0_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_0_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_0_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_0_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_0_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_0_RX}, {}};

static void InitDefaultsFLASH_CELLBOARD_1_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_1_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_1_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_1_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_1_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_1_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_1_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_1_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_1_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_1_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_1_RX}, {}};

static void InitDefaultsFLASH_CELLBOARD_2_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_2_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_2_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_2_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_2_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_2_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_2_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_2_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_2_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_2_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_2_RX}, {}};

static void InitDefaultsFLASH_CELLBOARD_3_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_3_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_3_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_3_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_3_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_3_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_3_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_3_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_3_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_3_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_3_RX}, {}};

static void InitDefaultsFLASH_CELLBOARD_4_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_4_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_4_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_4_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_4_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_4_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_4_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_4_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_4_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_4_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_4_RX}, {}};

static void InitDefaultsFLASH_CELLBOARD_5_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_5_TX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_5_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_5_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_5_TX}, {}};

static void InitDefaultsFLASH_CELLBOARD_5_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_CELLBOARD_5_RX_default_instance_;
    new (ptr) ::primary::FLASH_CELLBOARD_5_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_CELLBOARD_5_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_CELLBOARD_5_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_CELLBOARD_5_RX}, {}};

static void InitDefaultsFLASH_BMS_HV_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_BMS_HV_TX_default_instance_;
    new (ptr) ::primary::FLASH_BMS_HV_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_BMS_HV_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_HV_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_BMS_HV_TX}, {}};

static void InitDefaultsFLASH_BMS_HV_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_BMS_HV_RX_default_instance_;
    new (ptr) ::primary::FLASH_BMS_HV_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_BMS_HV_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_HV_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_BMS_HV_RX}, {}};

static void InitDefaultsFLASH_BMS_LV_TX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_BMS_LV_TX_default_instance_;
    new (ptr) ::primary::FLASH_BMS_LV_TX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_BMS_LV_TX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_LV_TX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_BMS_LV_TX}, {}};

static void InitDefaultsFLASH_BMS_LV_RX() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_FLASH_BMS_LV_RX_default_instance_;
    new (ptr) ::primary::FLASH_BMS_LV_RX();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::FLASH_BMS_LV_RX::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FLASH_BMS_LV_RX =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFLASH_BMS_LV_RX}, {}};

static void InitDefaultsBRUSA_NLG5_CTL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_NLG5_CTL_default_instance_;
    new (ptr) ::primary::BRUSA_NLG5_CTL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_NLG5_CTL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_NLG5_CTL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_NLG5_CTL}, {}};

static void InitDefaultsBRUSA_ST() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_ST_default_instance_;
    new (ptr) ::primary::BRUSA_ST();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_ST::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ST =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_ST}, {}};

static void InitDefaultsBRUSA_ACT_I() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_ACT_I_default_instance_;
    new (ptr) ::primary::BRUSA_ACT_I();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_ACT_I::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ACT_I =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_ACT_I}, {}};

static void InitDefaultsBRUSA_ACT_II() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_ACT_II_default_instance_;
    new (ptr) ::primary::BRUSA_ACT_II();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_ACT_II::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ACT_II =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_ACT_II}, {}};

static void InitDefaultsBRUSA_TEMP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_TEMP_default_instance_;
    new (ptr) ::primary::BRUSA_TEMP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_TEMP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_TEMP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_TEMP}, {}};

static void InitDefaultsBRUSA_ERR() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BRUSA_ERR_default_instance_;
    new (ptr) ::primary::BRUSA_ERR();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BRUSA_ERR::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BRUSA_ERR =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBRUSA_ERR}, {}};

static void InitDefaultsBMS_HV_CHIMERA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_BMS_HV_CHIMERA_default_instance_;
    new (ptr) ::primary::BMS_HV_CHIMERA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::BMS_HV_CHIMERA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BMS_HV_CHIMERA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBMS_HV_CHIMERA}, {}};

static void InitDefaultsECU_CHIMERA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_ECU_CHIMERA_default_instance_;
    new (ptr) ::primary::ECU_CHIMERA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::ECU_CHIMERA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ECU_CHIMERA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsECU_CHIMERA}, {}};

static void InitDefaultsPack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::primary::_Pack_default_instance_;
    new (ptr) ::primary::Pack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::primary::Pack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<76> scc_info_Pack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 76, InitDefaultsPack}, {
      &protobuf_primary_2eproto::scc_info_BMS_HV_JMP_TO_BLT.base,
      &protobuf_primary_2eproto::scc_info_BMS_LV_JMP_TO_BLT.base,
      &protobuf_primary_2eproto::scc_info_STEER_VERSION.base,
      &protobuf_primary_2eproto::scc_info_DAS_VERSION.base,
      &protobuf_primary_2eproto::scc_info_HV_VERSION.base,
      &protobuf_primary_2eproto::scc_info_LV_VERSION.base,
      &protobuf_primary_2eproto::scc_info_TLM_VERSION.base,
      &protobuf_primary_2eproto::scc_info_TIMESTAMP.base,
      &protobuf_primary_2eproto::scc_info_SET_TLM_STATUS.base,
      &protobuf_primary_2eproto::scc_info_TLM_STATUS.base,
      &protobuf_primary_2eproto::scc_info_STEER_SYSTEM_STATUS.base,
      &protobuf_primary_2eproto::scc_info_HV_VOLTAGE.base,
      &protobuf_primary_2eproto::scc_info_HV_CURRENT.base,
      &protobuf_primary_2eproto::scc_info_HV_TEMP.base,
      &protobuf_primary_2eproto::scc_info_HV_ERRORS.base,
      &protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD.base,
      &protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE.base,
      &protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD_STATUS.base,
      &protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE_STATUS.base,
      &protobuf_primary_2eproto::scc_info_HV_FEEDBACKS_STATUS.base,
      &protobuf_primary_2eproto::scc_info_HV_IMD_STATUS.base,
      &protobuf_primary_2eproto::scc_info_TS_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SET_TS_STATUS_DAS.base,
      &protobuf_primary_2eproto::scc_info_SET_TS_STATUS_HANDCART.base,
      &protobuf_primary_2eproto::scc_info_STEER_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SET_CAR_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SET_PEDALS_RANGE.base,
      &protobuf_primary_2eproto::scc_info_SET_STEERING_ANGLE_RANGE.base,
      &protobuf_primary_2eproto::scc_info_CAR_STATUS.base,
      &protobuf_primary_2eproto::scc_info_DAS_ERRORS.base,
      &protobuf_primary_2eproto::scc_info_LV_CURRENT.base,
      &protobuf_primary_2eproto::scc_info_LV_VOLTAGE.base,
      &protobuf_primary_2eproto::scc_info_LV_TOTAL_VOLTAGE.base,
      &protobuf_primary_2eproto::scc_info_LV_TEMPERATURE.base,
      &protobuf_primary_2eproto::scc_info_COOLING_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SET_RADIATOR_SPEED.base,
      &protobuf_primary_2eproto::scc_info_SET_PUMPS_SPEED.base,
      &protobuf_primary_2eproto::scc_info_SET_INVERTER_CONNECTION_STATUS.base,
      &protobuf_primary_2eproto::scc_info_INVERTER_CONNECTION_STATUS.base,
      &protobuf_primary_2eproto::scc_info_LV_ERRORS.base,
      &protobuf_primary_2eproto::scc_info_SHUTDOWN_STATUS.base,
      &protobuf_primary_2eproto::scc_info_MARKER.base,
      &protobuf_primary_2eproto::scc_info_HV_CELLS_VOLTAGE.base,
      &protobuf_primary_2eproto::scc_info_HV_CELLS_TEMP.base,
      &protobuf_primary_2eproto::scc_info_HV_CELL_BALANCING_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SET_CELL_BALANCING_STATUS.base,
      &protobuf_primary_2eproto::scc_info_HANDCART_STATUS.base,
      &protobuf_primary_2eproto::scc_info_SPEED.base,
      &protobuf_primary_2eproto::scc_info_INV_L_REQUEST.base,
      &protobuf_primary_2eproto::scc_info_INV_R_REQUEST.base,
      &protobuf_primary_2eproto::scc_info_INV_L_RESPONSE.base,
      &protobuf_primary_2eproto::scc_info_INV_R_RESPONSE.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_RX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_TX.base,
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_RX.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_NLG5_CTL.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_ST.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_ACT_I.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_ACT_II.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_TEMP.base,
      &protobuf_primary_2eproto::scc_info_BRUSA_ERR.base,
      &protobuf_primary_2eproto::scc_info_BMS_HV_CHIMERA.base,
      &protobuf_primary_2eproto::scc_info_ECU_CHIMERA.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BMS_HV_JMP_TO_BLT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BMS_LV_JMP_TO_BLT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STEER_VERSION.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DAS_VERSION.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_VERSION.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_VERSION.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TLM_VERSION.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TIMESTAMP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_TLM_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TLM_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STEER_SYSTEM_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_VOLTAGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CURRENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_TEMP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_ERRORS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CAN_FORWARD.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_FANS_OVERRIDE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CAN_FORWARD_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_FANS_OVERRIDE_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_FEEDBACKS_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_IMD_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TS_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_TS_STATUS_DAS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_TS_STATUS_HANDCART.base);
  ::google::protobuf::internal::InitSCC(&scc_info_STEER_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_CAR_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_PEDALS_RANGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_STEERING_ANGLE_RANGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CAR_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DAS_ERRORS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_CURRENT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_VOLTAGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_TOTAL_VOLTAGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_TEMPERATURE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_COOLING_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_RADIATOR_SPEED.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_PUMPS_SPEED.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_INVERTER_CONNECTION_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_INVERTER_CONNECTION_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LV_ERRORS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SHUTDOWN_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MARKER.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CELLS_VOLTAGE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CELLS_TEMP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HV_CELL_BALANCING_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SET_CELL_BALANCING_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HANDCART_STATUS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SPEED.base);
  ::google::protobuf::internal::InitSCC(&scc_info_INV_L_REQUEST.base);
  ::google::protobuf::internal::InitSCC(&scc_info_INV_R_REQUEST.base);
  ::google::protobuf::internal::InitSCC(&scc_info_INV_L_RESPONSE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_INV_R_RESPONSE.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_0_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_0_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_1_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_1_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_2_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_2_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_3_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_3_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_4_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_4_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_5_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_CELLBOARD_5_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_BMS_HV_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_BMS_HV_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_BMS_LV_TX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FLASH_BMS_LV_RX.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_NLG5_CTL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_ST.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_ACT_I.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_ACT_II.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_TEMP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BRUSA_ERR.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BMS_HV_CHIMERA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ECU_CHIMERA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pack.base);
}

::google::protobuf::Metadata file_level_metadata[77];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_HV_JMP_TO_BLT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_HV_JMP_TO_BLT, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_LV_JMP_TO_BLT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_LV_JMP_TO_BLT, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_VERSION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_VERSION, component_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_VERSION, cancicd_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_VERSION, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_VERSION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_VERSION, component_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_VERSION, cancicd_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_VERSION, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VERSION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VERSION, component_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VERSION, cancicd_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VERSION, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VERSION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VERSION, component_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VERSION, cancicd_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VERSION, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_VERSION, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_VERSION, component_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_VERSION, cancicd_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_VERSION, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TIMESTAMP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TIMESTAMP, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TIMESTAMP, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TLM_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TLM_STATUS, tlm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TLM_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_STATUS, tlm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TLM_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_SYSTEM_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_SYSTEM_STATUS, soc_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_SYSTEM_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, pack_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, bus_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, max_cell_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, min_cell_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_VOLTAGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, energy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, soc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CURRENT, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_TEMP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_TEMP, average_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_TEMP, max_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_TEMP, min_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_TEMP, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_ERRORS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_ERRORS, warnings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_ERRORS, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_ERRORS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD, can_forward_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE, fans_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE, fans_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD_STATUS, can_forward_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CAN_FORWARD_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE_STATUS, fans_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE_STATUS, fans_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FANS_OVERRIDE_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FEEDBACKS_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FEEDBACKS_STATUS, feedbacks_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FEEDBACKS_STATUS, is_circuitry_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_FEEDBACKS_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_IMD_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_IMD_STATUS, imd_fault_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_IMD_STATUS, imd_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_IMD_STATUS, imd_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_IMD_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TS_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TS_STATUS, ts_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::TS_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_DAS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_DAS, ts_status_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_DAS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_HANDCART, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_HANDCART, ts_status_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_TS_STATUS_HANDCART, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_STATUS, traction_control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_STATUS, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::STEER_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CAR_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CAR_STATUS, car_status_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CAR_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PEDALS_RANGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PEDALS_RANGE, bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PEDALS_RANGE, pedal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PEDALS_RANGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_STEERING_ANGLE_RANGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_STEERING_ANGLE_RANGE, bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_STEERING_ANGLE_RANGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::CAR_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::CAR_STATUS, inverter_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::CAR_STATUS, inverter_r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::CAR_STATUS, car_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::CAR_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_ERRORS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_ERRORS, das_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::DAS_ERRORS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_CURRENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_CURRENT, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_CURRENT, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, voltage_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, voltage_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, voltage_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, voltage_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_VOLTAGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TOTAL_VOLTAGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TOTAL_VOLTAGE, total_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TOTAL_VOLTAGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, bp_temperature_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, bp_temperature_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, dcdc12_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, dcdc24_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_TEMPERATURE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::COOLING_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::COOLING_STATUS, radiators_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::COOLING_STATUS, pumps_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::COOLING_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_RADIATOR_SPEED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_RADIATOR_SPEED, radiators_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_RADIATOR_SPEED, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PUMPS_SPEED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PUMPS_SPEED, pumps_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_PUMPS_SPEED, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_INVERTER_CONNECTION_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_INVERTER_CONNECTION_STATUS, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_INVERTER_CONNECTION_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INVERTER_CONNECTION_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INVERTER_CONNECTION_STATUS, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INVERTER_CONNECTION_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_ERRORS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_ERRORS, warnings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_ERRORS, errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::LV_ERRORS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SHUTDOWN_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SHUTDOWN_STATUS, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SHUTDOWN_STATUS, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SHUTDOWN_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::MARKER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::MARKER, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, voltage_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, voltage_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, voltage_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_VOLTAGE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, temp_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELLS_TEMP, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELL_BALANCING_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELL_BALANCING_STATUS, balancing_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HV_CELL_BALANCING_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CELL_BALANCING_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CELL_BALANCING_STATUS, set_balancing_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SET_CELL_BALANCING_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HANDCART_STATUS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HANDCART_STATUS, connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::HANDCART_STATUS, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, encoder_r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, encoder_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, inverter_r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, inverter_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::SPEED, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, data_7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_REQUEST, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, data_7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_REQUEST, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, reg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, data_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_L_RESPONSE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, reg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, data_6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::INV_R_RESPONSE, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_0_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_0_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_0_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_0_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_1_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_1_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_1_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_1_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_2_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_2_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_2_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_2_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_3_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_3_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_3_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_3_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_4_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_4_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_4_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_4_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_5_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_5_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_5_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_CELLBOARD_5_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_HV_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_HV_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_HV_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_HV_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_LV_TX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_LV_TX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_LV_RX, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::FLASH_BMS_LV_RX, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_NLG5_CTL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_NLG5_CTL, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ST, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ACT_I, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ACT_I, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ACT_II, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ACT_II, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_TEMP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_TEMP, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ERR, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BRUSA_ERR, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_HV_CHIMERA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::BMS_HV_CHIMERA, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::ECU_CHIMERA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::ECU_CHIMERA, _inner_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, bms_hv_jmp_to_blt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, bms_lv_jmp_to_blt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, steer_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, das_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, tlm_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_tlm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, tlm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, steer_system_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_can_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_fans_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_can_forward_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_fans_override_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_feedbacks_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_imd_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, ts_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_ts_status_das_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_ts_status_handcart_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, steer_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_car_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_pedals_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_steering_angle_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, car_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, das_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_total_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, cooling_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_radiator_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_pumps_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_inverter_connection_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, inverter_connection_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, lv_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, shutdown_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, marker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_cells_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_cells_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, hv_cell_balancing_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, set_cell_balancing_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, handcart_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, inv_l_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, inv_r_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, inv_l_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, inv_r_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_0_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_0_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_1_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_1_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_2_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_2_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_3_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_3_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_4_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_4_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_5_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_cellboard_5_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_bms_hv_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_bms_hv_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_bms_lv_tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, flash_bms_lv_rx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_nlg5_ctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_act_i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_act_ii_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, brusa_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, bms_hv_chimera_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::primary::Pack, ecu_chimera_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::primary::BMS_HV_JMP_TO_BLT)},
  { 6, -1, sizeof(::primary::BMS_LV_JMP_TO_BLT)},
  { 12, -1, sizeof(::primary::STEER_VERSION)},
  { 20, -1, sizeof(::primary::DAS_VERSION)},
  { 28, -1, sizeof(::primary::HV_VERSION)},
  { 36, -1, sizeof(::primary::LV_VERSION)},
  { 44, -1, sizeof(::primary::TLM_VERSION)},
  { 52, -1, sizeof(::primary::TIMESTAMP)},
  { 59, -1, sizeof(::primary::SET_TLM_STATUS)},
  { 66, -1, sizeof(::primary::TLM_STATUS)},
  { 73, -1, sizeof(::primary::STEER_SYSTEM_STATUS)},
  { 80, -1, sizeof(::primary::HV_VOLTAGE)},
  { 90, -1, sizeof(::primary::HV_CURRENT)},
  { 100, -1, sizeof(::primary::HV_TEMP)},
  { 109, -1, sizeof(::primary::HV_ERRORS)},
  { 117, -1, sizeof(::primary::HV_CAN_FORWARD)},
  { 124, -1, sizeof(::primary::HV_FANS_OVERRIDE)},
  { 132, -1, sizeof(::primary::HV_CAN_FORWARD_STATUS)},
  { 139, -1, sizeof(::primary::HV_FANS_OVERRIDE_STATUS)},
  { 147, -1, sizeof(::primary::HV_FEEDBACKS_STATUS)},
  { 155, -1, sizeof(::primary::HV_IMD_STATUS)},
  { 164, -1, sizeof(::primary::TS_STATUS)},
  { 171, -1, sizeof(::primary::SET_TS_STATUS_DAS)},
  { 178, -1, sizeof(::primary::SET_TS_STATUS_HANDCART)},
  { 185, -1, sizeof(::primary::STEER_STATUS)},
  { 193, -1, sizeof(::primary::SET_CAR_STATUS)},
  { 200, -1, sizeof(::primary::SET_PEDALS_RANGE)},
  { 208, -1, sizeof(::primary::SET_STEERING_ANGLE_RANGE)},
  { 215, -1, sizeof(::primary::CAR_STATUS)},
  { 224, -1, sizeof(::primary::DAS_ERRORS)},
  { 231, -1, sizeof(::primary::LV_CURRENT)},
  { 238, -1, sizeof(::primary::LV_VOLTAGE)},
  { 248, -1, sizeof(::primary::LV_TOTAL_VOLTAGE)},
  { 255, -1, sizeof(::primary::LV_TEMPERATURE)},
  { 265, -1, sizeof(::primary::COOLING_STATUS)},
  { 273, -1, sizeof(::primary::SET_RADIATOR_SPEED)},
  { 280, -1, sizeof(::primary::SET_PUMPS_SPEED)},
  { 287, -1, sizeof(::primary::SET_INVERTER_CONNECTION_STATUS)},
  { 294, -1, sizeof(::primary::INVERTER_CONNECTION_STATUS)},
  { 301, -1, sizeof(::primary::LV_ERRORS)},
  { 309, -1, sizeof(::primary::SHUTDOWN_STATUS)},
  { 317, -1, sizeof(::primary::MARKER)},
  { 323, -1, sizeof(::primary::HV_CELLS_VOLTAGE)},
  { 333, -1, sizeof(::primary::HV_CELLS_TEMP)},
  { 346, -1, sizeof(::primary::HV_CELL_BALANCING_STATUS)},
  { 353, -1, sizeof(::primary::SET_CELL_BALANCING_STATUS)},
  { 360, -1, sizeof(::primary::HANDCART_STATUS)},
  { 367, -1, sizeof(::primary::SPEED)},
  { 377, -1, sizeof(::primary::INV_L_REQUEST)},
  { 391, -1, sizeof(::primary::INV_R_REQUEST)},
  { 405, -1, sizeof(::primary::INV_L_RESPONSE)},
  { 419, -1, sizeof(::primary::INV_R_RESPONSE)},
  { 433, -1, sizeof(::primary::FLASH_CELLBOARD_0_TX)},
  { 439, -1, sizeof(::primary::FLASH_CELLBOARD_0_RX)},
  { 445, -1, sizeof(::primary::FLASH_CELLBOARD_1_TX)},
  { 451, -1, sizeof(::primary::FLASH_CELLBOARD_1_RX)},
  { 457, -1, sizeof(::primary::FLASH_CELLBOARD_2_TX)},
  { 463, -1, sizeof(::primary::FLASH_CELLBOARD_2_RX)},
  { 469, -1, sizeof(::primary::FLASH_CELLBOARD_3_TX)},
  { 475, -1, sizeof(::primary::FLASH_CELLBOARD_3_RX)},
  { 481, -1, sizeof(::primary::FLASH_CELLBOARD_4_TX)},
  { 487, -1, sizeof(::primary::FLASH_CELLBOARD_4_RX)},
  { 493, -1, sizeof(::primary::FLASH_CELLBOARD_5_TX)},
  { 499, -1, sizeof(::primary::FLASH_CELLBOARD_5_RX)},
  { 505, -1, sizeof(::primary::FLASH_BMS_HV_TX)},
  { 511, -1, sizeof(::primary::FLASH_BMS_HV_RX)},
  { 517, -1, sizeof(::primary::FLASH_BMS_LV_TX)},
  { 523, -1, sizeof(::primary::FLASH_BMS_LV_RX)},
  { 529, -1, sizeof(::primary::BRUSA_NLG5_CTL)},
  { 535, -1, sizeof(::primary::BRUSA_ST)},
  { 541, -1, sizeof(::primary::BRUSA_ACT_I)},
  { 547, -1, sizeof(::primary::BRUSA_ACT_II)},
  { 553, -1, sizeof(::primary::BRUSA_TEMP)},
  { 559, -1, sizeof(::primary::BRUSA_ERR)},
  { 565, -1, sizeof(::primary::BMS_HV_CHIMERA)},
  { 571, -1, sizeof(::primary::ECU_CHIMERA)},
  { 577, -1, sizeof(::primary::Pack)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BMS_HV_JMP_TO_BLT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BMS_LV_JMP_TO_BLT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_STEER_VERSION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_DAS_VERSION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_VERSION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_VERSION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_TLM_VERSION_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_TIMESTAMP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_TLM_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_TLM_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_STEER_SYSTEM_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_VOLTAGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CURRENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_TEMP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_ERRORS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CAN_FORWARD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_FANS_OVERRIDE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CAN_FORWARD_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_FANS_OVERRIDE_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_FEEDBACKS_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_IMD_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_TS_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_TS_STATUS_DAS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_TS_STATUS_HANDCART_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_STEER_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_CAR_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_PEDALS_RANGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_STEERING_ANGLE_RANGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_CAR_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_DAS_ERRORS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_CURRENT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_VOLTAGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_TOTAL_VOLTAGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_TEMPERATURE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_COOLING_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_RADIATOR_SPEED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_PUMPS_SPEED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_INVERTER_CONNECTION_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_INVERTER_CONNECTION_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_LV_ERRORS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SHUTDOWN_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_MARKER_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CELLS_VOLTAGE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CELLS_TEMP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HV_CELL_BALANCING_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SET_CELL_BALANCING_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_HANDCART_STATUS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_SPEED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_INV_L_REQUEST_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_INV_R_REQUEST_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_INV_L_RESPONSE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_INV_R_RESPONSE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_0_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_0_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_1_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_1_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_2_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_2_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_3_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_3_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_4_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_4_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_5_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_CELLBOARD_5_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_BMS_HV_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_BMS_HV_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_BMS_LV_TX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_FLASH_BMS_LV_RX_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_NLG5_CTL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_ST_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_ACT_I_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_ACT_II_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_TEMP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BRUSA_ERR_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_BMS_HV_CHIMERA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_ECU_CHIMERA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::primary::_Pack_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "primary.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 77);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rprimary.proto\022\007primary\"-\n\021BMS_HV_JMP_T"
      "O_BLT\022\030\n\020_inner_timestamp\030\001 \001(\004\"-\n\021BMS_L"
      "V_JMP_TO_BLT\022\030\n\020_inner_timestamp\030\001 \001(\004\"]"
      "\n\rSTEER_VERSION\022\031\n\021component_version\030\001 \001"
      "(\r\022\027\n\017cancicd_version\030\002 \001(\r\022\030\n\020_inner_ti"
      "mestamp\030\003 \001(\004\"[\n\013DAS_VERSION\022\031\n\021componen"
      "t_version\030\001 \001(\r\022\027\n\017cancicd_version\030\002 \001(\r"
      "\022\030\n\020_inner_timestamp\030\003 \001(\004\"Z\n\nHV_VERSION"
      "\022\031\n\021component_version\030\001 \001(\r\022\027\n\017cancicd_v"
      "ersion\030\002 \001(\r\022\030\n\020_inner_timestamp\030\003 \001(\004\"Z"
      "\n\nLV_VERSION\022\031\n\021component_version\030\001 \001(\r\022"
      "\027\n\017cancicd_version\030\002 \001(\r\022\030\n\020_inner_times"
      "tamp\030\003 \001(\004\"[\n\013TLM_VERSION\022\031\n\021component_v"
      "ersion\030\001 \001(\r\022\027\n\017cancicd_version\030\002 \001(\r\022\030\n"
      "\020_inner_timestamp\030\003 \001(\004\"8\n\tTIMESTAMP\022\021\n\t"
      "timestamp\030\001 \001(\r\022\030\n\020_inner_timestamp\030\002 \001("
      "\004\"O\n\016SET_TLM_STATUS\022#\n\ntlm_status\030\001 \001(\0162"
      "\017.primary.Toggle\022\030\n\020_inner_timestamp\030\002 \001"
      "(\004\"K\n\nTLM_STATUS\022#\n\ntlm_status\030\001 \001(\0162\017.p"
      "rimary.Toggle\022\030\n\020_inner_timestamp\030\002 \001(\004\""
      "A\n\023STEER_SYSTEM_STATUS\022\020\n\010soc_temp\030\001 \001(\r"
      "\022\030\n\020_inner_timestamp\030\002 \001(\004\"\205\001\n\nHV_VOLTAG"
      "E\022\024\n\014pack_voltage\030\001 \001(\002\022\023\n\013bus_voltage\030\002"
      " \001(\002\022\030\n\020max_cell_voltage\030\003 \001(\002\022\030\n\020min_ce"
      "ll_voltage\030\004 \001(\002\022\030\n\020_inner_timestamp\030\005 \001"
      "(\004\"c\n\nHV_CURRENT\022\017\n\007current\030\001 \001(\002\022\r\n\005pow"
      "er\030\002 \001(\002\022\016\n\006energy\030\003 \001(\002\022\013\n\003soc\030\004 \001(\002\022\030\n"
      "\020_inner_timestamp\030\005 \001(\004\"]\n\007HV_TEMP\022\024\n\014av"
      "erage_temp\030\001 \001(\002\022\020\n\010max_temp\030\002 \001(\002\022\020\n\010mi"
      "n_temp\030\003 \001(\002\022\030\n\020_inner_timestamp\030\004 \001(\004\"G"
      "\n\tHV_ERRORS\022\020\n\010warnings\030\001 \001(\r\022\016\n\006errors\030"
      "\002 \001(\r\022\030\n\020_inner_timestamp\030\003 \001(\004\"T\n\016HV_CA"
      "N_FORWARD\022(\n\017can_forward_set\030\001 \001(\0162\017.pri"
      "mary.Toggle\022\030\n\020_inner_timestamp\030\002 \001(\004\"h\n"
      "\020HV_FANS_OVERRIDE\022&\n\rfans_override\030\001 \001(\016"
      "2\017.primary.Toggle\022\022\n\nfans_speed\030\002 \001(\002\022\030\n"
      "\020_inner_timestamp\030\003 \001(\004\"^\n\025HV_CAN_FORWAR"
      "D_STATUS\022+\n\022can_forward_status\030\001 \001(\0162\017.p"
      "rimary.Toggle\022\030\n\020_inner_timestamp\030\002 \001(\004\""
      "o\n\027HV_FANS_OVERRIDE_STATUS\022&\n\rfans_overr"
      "ide\030\001 \001(\0162\017.primary.Toggle\022\022\n\nfans_speed"
      "\030\002 \001(\002\022\030\n\020_inner_timestamp\030\003 \001(\004\"e\n\023HV_F"
      "EEDBACKS_STATUS\022\030\n\020feedbacks_status\030\001 \001("
      "\r\022\032\n\022is_circuitry_error\030\002 \001(\r\022\030\n\020_inner_"
      "timestamp\030\003 \001(\004\"v\n\rHV_IMD_STATUS\022\021\n\timd_"
      "fault\030\001 \001(\010\022&\n\nimd_status\030\002 \001(\0162\022.primar"
      "y.ImdStatus\022\020\n\010imd_info\030\003 \001(\021\022\030\n\020_inner_"
      "timestamp\030\004 \001(\004\"K\n\tTS_STATUS\022$\n\tts_statu"
      "s\030\001 \001(\0162\021.primary.TsStatus\022\030\n\020_inner_tim"
      "estamp\030\002 \001(\004\"U\n\021SET_TS_STATUS_DAS\022&\n\rts_"
      "status_set\030\001 \001(\0162\017.primary.Toggle\022\030\n\020_in"
      "ner_timestamp\030\002 \001(\004\"Z\n\026SET_TS_STATUS_HAN"
      "DCART\022&\n\rts_status_set\030\001 \001(\0162\017.primary.T"
      "oggle\022\030\n\020_inner_timestamp\030\002 \001(\004\"w\n\014STEER"
      "_STATUS\0222\n\020traction_control\030\001 \001(\0162\030.prim"
      "ary.TractionControl\022\031\n\003map\030\002 \001(\0162\014.prima"
      "ry.Map\022\030\n\020_inner_timestamp\030\003 \001(\004\"Y\n\016SET_"
      "CAR_STATUS\022-\n\016car_status_set\030\001 \001(\0162\025.pri"
      "mary.SetCarStatus\022\030\n\020_inner_timestamp\030\002 "
      "\001(\004\"j\n\020SET_PEDALS_RANGE\022\035\n\005bound\030\001 \001(\0162\016"
      ".primary.Bound\022\035\n\005pedal\030\002 \001(\0162\016.primary."
      "Pedal\022\030\n\020_inner_timestamp\030\003 \001(\004\"S\n\030SET_S"
      "TEERING_ANGLE_RANGE\022\035\n\005bound\030\001 \001(\0162\016.pri"
      "mary.Bound\022\030\n\020_inner_timestamp\030\002 \001(\004\"\250\001\n"
      "\nCAR_STATUS\022+\n\ninverter_l\030\001 \001(\0162\027.primar"
      "y.InverterStatus\022+\n\ninverter_r\030\002 \001(\0162\027.p"
      "rimary.InverterStatus\022&\n\ncar_status\030\003 \001("
      "\0162\022.primary.CarStatus\022\030\n\020_inner_timestam"
      "p\030\004 \001(\004\"9\n\nDAS_ERRORS\022\021\n\tdas_error\030\001 \001(\r"
      "\022\030\n\020_inner_timestamp\030\002 \001(\004\"7\n\nLV_CURRENT"
      "\022\017\n\007current\030\001 \001(\002\022\030\n\020_inner_timestamp\030\002 "
      "\001(\004\"r\n\nLV_VOLTAGE\022\021\n\tvoltage_1\030\001 \001(\002\022\021\n\t"
      "voltage_2\030\002 \001(\002\022\021\n\tvoltage_3\030\003 \001(\002\022\021\n\tvo"
      "ltage_4\030\004 \001(\002\022\030\n\020_inner_timestamp\030\005 \001(\004\""
      "C\n\020LV_TOTAL_VOLTAGE\022\025\n\rtotal_voltage\030\001 \001"
      "(\002\022\030\n\020_inner_timestamp\030\002 \001(\004\"\226\001\n\016LV_TEMP"
      "ERATURE\022\030\n\020bp_temperature_1\030\001 \001(\002\022\030\n\020bp_"
      "temperature_2\030\002 \001(\002\022\032\n\022dcdc12_temperatur"
      "e\030\003 \001(\002\022\032\n\022dcdc24_temperature\030\004 \001(\002\022\030\n\020_"
      "inner_timestamp\030\005 \001(\004\"X\n\016COOLING_STATUS\022"
      "\027\n\017radiators_speed\030\001 \001(\002\022\023\n\013pumps_speed\030"
      "\002 \001(\002\022\030\n\020_inner_timestamp\030\003 \001(\004\"G\n\022SET_R"
      "ADIATOR_SPEED\022\027\n\017radiators_speed\030\001 \001(\002\022\030"
      "\n\020_inner_timestamp\030\002 \001(\004\"@\n\017SET_PUMPS_SP"
      "EED\022\023\n\013pumps_speed\030\001 \001(\002\022\030\n\020_inner_times"
      "tamp\030\002 \001(\004\"[\n\036SET_INVERTER_CONNECTION_ST"
      "ATUS\022\037\n\006status\030\001 \001(\0162\017.primary.Toggle\022\030\n"
      "\020_inner_timestamp\030\002 \001(\004\"W\n\032INVERTER_CONN"
      "ECTION_STATUS\022\037\n\006status\030\001 \001(\0162\017.primary."
      "Toggle\022\030\n\020_inner_timestamp\030\002 \001(\004\"G\n\tLV_E"
      "RRORS\022\020\n\010warnings\030\001 \001(\r\022\016\n\006errors\030\002 \001(\r\022"
      "\030\n\020_inner_timestamp\030\003 \001(\004\"J\n\017SHUTDOWN_ST"
      "ATUS\022\r\n\005input\030\001 \001(\010\022\016\n\006output\030\002 \001(\010\022\030\n\020_"
      "inner_timestamp\030\003 \001(\004\"\"\n\006MARKER\022\030\n\020_inne"
      "r_timestamp\030\001 \001(\004\"z\n\020HV_CELLS_VOLTAGE\022\023\n"
      "\013start_index\030\001 \001(\r\022\021\n\tvoltage_0\030\002 \001(\002\022\021\n"
      "\tvoltage_1\030\003 \001(\002\022\021\n\tvoltage_2\030\004 \001(\002\022\030\n\020_"
      "inner_timestamp\030\005 \001(\004\"\236\001\n\rHV_CELLS_TEMP\022"
      "\023\n\013start_index\030\001 \001(\r\022\016\n\006temp_0\030\002 \001(\002\022\016\n\006"
      "temp_1\030\003 \001(\002\022\016\n\006temp_2\030\004 \001(\002\022\016\n\006temp_3\030\005"
      " \001(\002\022\016\n\006temp_4\030\006 \001(\002\022\016\n\006temp_5\030\007 \001(\002\022\030\n\020"
      "_inner_timestamp\030\010 \001(\004\"_\n\030HV_CELL_BALANC"
      "ING_STATUS\022)\n\020balancing_status\030\001 \001(\0162\017.p"
      "rimary.Toggle\022\030\n\020_inner_timestamp\030\002 \001(\004\""
      "d\n\031SET_CELL_BALANCING_STATUS\022-\n\024set_bala"
      "ncing_status\030\001 \001(\0162\017.primary.Toggle\022\030\n\020_"
      "inner_timestamp\030\002 \001(\004\">\n\017HANDCART_STATUS"
      "\022\021\n\tconnected\030\001 \001(\010\022\030\n\020_inner_timestamp\030"
      "\002 \001(\004\"o\n\005SPEED\022\021\n\tencoder_r\030\001 \001(\002\022\021\n\tenc"
      "oder_l\030\002 \001(\002\022\022\n\ninverter_r\030\003 \001(\002\022\022\n\ninve"
      "rter_l\030\004 \001(\002\022\030\n\020_inner_timestamp\030\005 \001(\004\"\251"
      "\001\n\rINV_L_REQUEST\022\016\n\006data_0\030\001 \001(\r\022\016\n\006data"
      "_1\030\002 \001(\r\022\016\n\006data_2\030\003 \001(\r\022\016\n\006data_3\030\004 \001(\r"
      "\022\016\n\006data_4\030\005 \001(\r\022\016\n\006data_5\030\006 \001(\r\022\016\n\006data"
      "_6\030\007 \001(\r\022\016\n\006data_7\030\010 \001(\r\022\030\n\020_inner_times"
      "tamp\030\t \001(\004\"\251\001\n\rINV_R_REQUEST\022\016\n\006data_0\030\001"
      " \001(\r\022\016\n\006data_1\030\002 \001(\r\022\016\n\006data_2\030\003 \001(\r\022\016\n\006"
      "data_3\030\004 \001(\r\022\016\n\006data_4\030\005 \001(\r\022\016\n\006data_5\030\006"
      " \001(\r\022\016\n\006data_6\030\007 \001(\r\022\016\n\006data_7\030\010 \001(\r\022\030\n\020"
      "_inner_timestamp\030\t \001(\004\"\252\001\n\016INV_L_RESPONS"
      "E\022\016\n\006reg_id\030\001 \001(\r\022\016\n\006data_0\030\002 \001(\r\022\016\n\006dat"
      "a_1\030\003 \001(\r\022\016\n\006data_2\030\004 \001(\r\022\016\n\006data_3\030\005 \001("
      "\r\022\016\n\006data_4\030\006 \001(\r\022\016\n\006data_5\030\007 \001(\r\022\016\n\006dat"
      "a_6\030\010 \001(\r\022\030\n\020_inner_timestamp\030\t \001(\004\"\252\001\n\016"
      "INV_R_RESPONSE\022\016\n\006reg_id\030\001 \001(\r\022\016\n\006data_0"
      "\030\002 \001(\r\022\016\n\006data_1\030\003 \001(\r\022\016\n\006data_2\030\004 \001(\r\022\016"
      "\n\006data_3\030\005 \001(\r\022\016\n\006data_4\030\006 \001(\r\022\016\n\006data_5"
      "\030\007 \001(\r\022\016\n\006data_6\030\010 \001(\r\022\030\n\020_inner_timesta"
      "mp\030\t \001(\004\"0\n\024FLASH_CELLBOARD_0_TX\022\030\n\020_inn"
      "er_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_0_"
      "RX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CE"
      "LLBOARD_1_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0"
      "\n\024FLASH_CELLBOARD_1_RX\022\030\n\020_inner_timesta"
      "mp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_2_TX\022\030\n\020_inn"
      "er_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_2_"
      "RX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CE"
      "LLBOARD_3_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0"
      "\n\024FLASH_CELLBOARD_3_RX\022\030\n\020_inner_timesta"
      "mp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_4_TX\022\030\n\020_inn"
      "er_timestamp\030\001 \001(\004\"0\n\024FLASH_CELLBOARD_4_"
      "RX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0\n\024FLASH_CE"
      "LLBOARD_5_TX\022\030\n\020_inner_timestamp\030\001 \001(\004\"0"
      "\n\024FLASH_CELLBOARD_5_RX\022\030\n\020_inner_timesta"
      "mp\030\001 \001(\004\"+\n\017FLASH_BMS_HV_TX\022\030\n\020_inner_ti"
      "mestamp\030\001 \001(\004\"+\n\017FLASH_BMS_HV_RX\022\030\n\020_inn"
      "er_timestamp\030\001 \001(\004\"+\n\017FLASH_BMS_LV_TX\022\030\n"
      "\020_inner_timestamp\030\001 \001(\004\"+\n\017FLASH_BMS_LV_"
      "RX\022\030\n\020_inner_timestamp\030\001 \001(\004\"*\n\016BRUSA_NL"
      "G5_CTL\022\030\n\020_inner_timestamp\030\001 \001(\004\"$\n\010BRUS"
      "A_ST\022\030\n\020_inner_timestamp\030\001 \001(\004\"\'\n\013BRUSA_"
      "ACT_I\022\030\n\020_inner_timestamp\030\001 \001(\004\"(\n\014BRUSA"
      "_ACT_II\022\030\n\020_inner_timestamp\030\001 \001(\004\"&\n\nBRU"
      "SA_TEMP\022\030\n\020_inner_timestamp\030\001 \001(\004\"%\n\tBRU"
      "SA_ERR\022\030\n\020_inner_timestamp\030\001 \001(\004\"*\n\016BMS_"
      "HV_CHIMERA\022\030\n\020_inner_timestamp\030\001 \001(\004\"\'\n\013"
      "ECU_CHIMERA\022\030\n\020_inner_timestamp\030\001 \001(\004\"\254\036"
      "\n\004Pack\0225\n\021BMS_HV_JMP_TO_BLT\030\001 \003(\0132\032.prim"
      "ary.BMS_HV_JMP_TO_BLT\0225\n\021BMS_LV_JMP_TO_B"
      "LT\030\002 \003(\0132\032.primary.BMS_LV_JMP_TO_BLT\022-\n\r"
      "STEER_VERSION\030\003 \003(\0132\026.primary.STEER_VERS"
      "ION\022)\n\013DAS_VERSION\030\004 \003(\0132\024.primary.DAS_V"
      "ERSION\022\'\n\nHV_VERSION\030\005 \003(\0132\023.primary.HV_"
      "VERSION\022\'\n\nLV_VERSION\030\006 \003(\0132\023.primary.LV"
      "_VERSION\022)\n\013TLM_VERSION\030\007 \003(\0132\024.primary."
      "TLM_VERSION\022%\n\tTIMESTAMP\030\010 \003(\0132\022.primary"
      ".TIMESTAMP\022/\n\016SET_TLM_STATUS\030\t \003(\0132\027.pri"
      "mary.SET_TLM_STATUS\022\'\n\nTLM_STATUS\030\n \003(\0132"
      "\023.primary.TLM_STATUS\0229\n\023STEER_SYSTEM_STA"
      "TUS\030\013 \003(\0132\034.primary.STEER_SYSTEM_STATUS\022"
      "\'\n\nHV_VOLTAGE\030\014 \003(\0132\023.primary.HV_VOLTAGE"
      "\022\'\n\nHV_CURRENT\030\r \003(\0132\023.primary.HV_CURREN"
      "T\022!\n\007HV_TEMP\030\016 \003(\0132\020.primary.HV_TEMP\022%\n\t"
      "HV_ERRORS\030\017 \003(\0132\022.primary.HV_ERRORS\022/\n\016H"
      "V_CAN_FORWARD\030\020 \003(\0132\027.primary.HV_CAN_FOR"
      "WARD\0223\n\020HV_FANS_OVERRIDE\030\021 \003(\0132\031.primary"
      ".HV_FANS_OVERRIDE\022=\n\025HV_CAN_FORWARD_STAT"
      "US\030\022 \003(\0132\036.primary.HV_CAN_FORWARD_STATUS"
      "\022A\n\027HV_FANS_OVERRIDE_STATUS\030\023 \003(\0132 .prim"
      "ary.HV_FANS_OVERRIDE_STATUS\0229\n\023HV_FEEDBA"
      "CKS_STATUS\030\024 \003(\0132\034.primary.HV_FEEDBACKS_"
      "STATUS\022-\n\rHV_IMD_STATUS\030\025 \003(\0132\026.primary."
      "HV_IMD_STATUS\022%\n\tTS_STATUS\030\026 \003(\0132\022.prima"
      "ry.TS_STATUS\0225\n\021SET_TS_STATUS_DAS\030\027 \003(\0132"
      "\032.primary.SET_TS_STATUS_DAS\022\?\n\026SET_TS_ST"
      "ATUS_HANDCART\030\030 \003(\0132\037.primary.SET_TS_STA"
      "TUS_HANDCART\022+\n\014STEER_STATUS\030\031 \003(\0132\025.pri"
      "mary.STEER_STATUS\022/\n\016SET_CAR_STATUS\030\032 \003("
      "\0132\027.primary.SET_CAR_STATUS\0223\n\020SET_PEDALS"
      "_RANGE\030\033 \003(\0132\031.primary.SET_PEDALS_RANGE\022"
      "C\n\030SET_STEERING_ANGLE_RANGE\030\034 \003(\0132!.prim"
      "ary.SET_STEERING_ANGLE_RANGE\022\'\n\nCAR_STAT"
      "US\030\035 \003(\0132\023.primary.CAR_STATUS\022\'\n\nDAS_ERR"
      "ORS\030\036 \003(\0132\023.primary.DAS_ERRORS\022\'\n\nLV_CUR"
      "RENT\030\037 \003(\0132\023.primary.LV_CURRENT\022\'\n\nLV_VO"
      "LTAGE\030  \003(\0132\023.primary.LV_VOLTAGE\0223\n\020LV_T"
      "OTAL_VOLTAGE\030! \003(\0132\031.primary.LV_TOTAL_VO"
      "LTAGE\022/\n\016LV_TEMPERATURE\030\" \003(\0132\027.primary."
      "LV_TEMPERATURE\022/\n\016COOLING_STATUS\030# \003(\0132\027"
      ".primary.COOLING_STATUS\0227\n\022SET_RADIATOR_"
      "SPEED\030$ \003(\0132\033.primary.SET_RADIATOR_SPEED"
      "\0221\n\017SET_PUMPS_SPEED\030% \003(\0132\030.primary.SET_"
      "PUMPS_SPEED\022O\n\036SET_INVERTER_CONNECTION_S"
      "TATUS\030& \003(\0132\'.primary.SET_INVERTER_CONNE"
      "CTION_STATUS\022G\n\032INVERTER_CONNECTION_STAT"
      "US\030\' \003(\0132#.primary.INVERTER_CONNECTION_S"
      "TATUS\022%\n\tLV_ERRORS\030( \003(\0132\022.primary.LV_ER"
      "RORS\0221\n\017SHUTDOWN_STATUS\030) \003(\0132\030.primary."
      "SHUTDOWN_STATUS\022\037\n\006MARKER\030* \003(\0132\017.primar"
      "y.MARKER\0223\n\020HV_CELLS_VOLTAGE\030+ \003(\0132\031.pri"
      "mary.HV_CELLS_VOLTAGE\022-\n\rHV_CELLS_TEMP\030,"
      " \003(\0132\026.primary.HV_CELLS_TEMP\022C\n\030HV_CELL_"
      "BALANCING_STATUS\030- \003(\0132!.primary.HV_CELL"
      "_BALANCING_STATUS\022E\n\031SET_CELL_BALANCING_"
      "STATUS\030. \003(\0132\".primary.SET_CELL_BALANCIN"
      "G_STATUS\0221\n\017HANDCART_STATUS\030/ \003(\0132\030.prim"
      "ary.HANDCART_STATUS\022\035\n\005SPEED\0300 \003(\0132\016.pri"
      "mary.SPEED\022-\n\rINV_L_REQUEST\0301 \003(\0132\026.prim"
      "ary.INV_L_REQUEST\022-\n\rINV_R_REQUEST\0302 \003(\013"
      "2\026.primary.INV_R_REQUEST\022/\n\016INV_L_RESPON"
      "SE\0303 \003(\0132\027.primary.INV_L_RESPONSE\022/\n\016INV"
      "_R_RESPONSE\0304 \003(\0132\027.primary.INV_R_RESPON"
      "SE\022;\n\024FLASH_CELLBOARD_0_TX\0305 \003(\0132\035.prima"
      "ry.FLASH_CELLBOARD_0_TX\022;\n\024FLASH_CELLBOA"
      "RD_0_RX\0306 \003(\0132\035.primary.FLASH_CELLBOARD_"
      "0_RX\022;\n\024FLASH_CELLBOARD_1_TX\0307 \003(\0132\035.pri"
      "mary.FLASH_CELLBOARD_1_TX\022;\n\024FLASH_CELLB"
      "OARD_1_RX\0308 \003(\0132\035.primary.FLASH_CELLBOAR"
      "D_1_RX\022;\n\024FLASH_CELLBOARD_2_TX\0309 \003(\0132\035.p"
      "rimary.FLASH_CELLBOARD_2_TX\022;\n\024FLASH_CEL"
      "LBOARD_2_RX\030: \003(\0132\035.primary.FLASH_CELLBO"
      "ARD_2_RX\022;\n\024FLASH_CELLBOARD_3_TX\030; \003(\0132\035"
      ".primary.FLASH_CELLBOARD_3_TX\022;\n\024FLASH_C"
      "ELLBOARD_3_RX\030< \003(\0132\035.primary.FLASH_CELL"
      "BOARD_3_RX\022;\n\024FLASH_CELLBOARD_4_TX\030= \003(\013"
      "2\035.primary.FLASH_CELLBOARD_4_TX\022;\n\024FLASH"
      "_CELLBOARD_4_RX\030> \003(\0132\035.primary.FLASH_CE"
      "LLBOARD_4_RX\022;\n\024FLASH_CELLBOARD_5_TX\030\? \003"
      "(\0132\035.primary.FLASH_CELLBOARD_5_TX\022;\n\024FLA"
      "SH_CELLBOARD_5_RX\030@ \003(\0132\035.primary.FLASH_"
      "CELLBOARD_5_RX\0221\n\017FLASH_BMS_HV_TX\030A \003(\0132"
      "\030.primary.FLASH_BMS_HV_TX\0221\n\017FLASH_BMS_H"
      "V_RX\030B \003(\0132\030.primary.FLASH_BMS_HV_RX\0221\n\017"
      "FLASH_BMS_LV_TX\030C \003(\0132\030.primary.FLASH_BM"
      "S_LV_TX\0221\n\017FLASH_BMS_LV_RX\030D \003(\0132\030.prima"
      "ry.FLASH_BMS_LV_RX\022/\n\016BRUSA_NLG5_CTL\030E \003"
      "(\0132\027.primary.BRUSA_NLG5_CTL\022#\n\010BRUSA_ST\030"
      "F \003(\0132\021.primary.BRUSA_ST\022)\n\013BRUSA_ACT_I\030"
      "G \003(\0132\024.primary.BRUSA_ACT_I\022+\n\014BRUSA_ACT"
      "_II\030H \003(\0132\025.primary.BRUSA_ACT_II\022\'\n\nBRUS"
      "A_TEMP\030I \003(\0132\023.primary.BRUSA_TEMP\022%\n\tBRU"
      "SA_ERR\030J \003(\0132\022.primary.BRUSA_ERR\022/\n\016BMS_"
      "HV_CHIMERA\030K \003(\0132\027.primary.BMS_HV_CHIMER"
      "A\022)\n\013ECU_CHIMERA\030L \003(\0132\024.primary.ECU_CHI"
      "MERA*k\n\010RaceType\022\031\n\025RaceType_ACCELERATIO"
      "N\020\000\022\024\n\020RaceType_SKIDPAD\020\001\022\026\n\022RaceType_AU"
      "TOCROSS\020\002\022\026\n\022RaceType_ENDURANCE\020\003*X\n\016Inv"
      "erterStatus\022\026\n\022InverterStatus_OFF\020\000\022\027\n\023I"
      "nverterStatus_IDLE\020\001\022\025\n\021InverterStatus_O"
      "N\020\002*\224\001\n\tCarStatus\022\022\n\016CarStatus_IDLE\020\000\022\027\n"
      "\023CarStatus_PRE_SETUP\020\001\022\023\n\017CarStatus_TS_O"
      "N\020\002\022\030\n\024CarStatus_POST_SETUP\020\003\022\023\n\017CarStat"
      "us_DRIVE\020\004\022\026\n\022CarStatus_TEARDOWN\020\005*\'\n\006To"
      "ggle\022\r\n\tToggle_ON\020\000\022\016\n\nToggle_OFF\020\001*\220\001\n\017"
      "TractionControl\022\027\n\023TractionControl_OFF\020\000"
      "\022 \n\034TractionControl_SLIP_CONTROL\020\001\022$\n Tr"
      "actionControl_TORQUE_VECTORING\020\002\022\034\n\030Trac"
      "tionControl_COMPLETE\020\003*Y\n\010TsStatus\022\020\n\014Ts"
      "Status_OFF\020\000\022\026\n\022TsStatus_PRECHARGE\020\001\022\017\n\013"
      "TsStatus_ON\020\002\022\022\n\016TsStatus_FATAL\020\003*R\n\003Map"
      "\022\t\n\005Map_R\020\000\022\013\n\007Map_D20\020\001\022\013\n\007Map_D40\020\002\022\013\n"
      "\007Map_D60\020\003\022\013\n\007Map_D80\020\004\022\014\n\010Map_D100\020\005*U\n"
      "\014SetCarStatus\022\025\n\021SetCarStatus_IDLE\020\000\022\026\n\022"
      "SetCarStatus_READY\020\001\022\026\n\022SetCarStatus_DRI"
      "VE\020\002*-\n\005Bound\022\021\n\rBound_SET_MAX\020\000\022\021\n\rBoun"
      "d_SET_MIN\020\001*/\n\005Pedal\022\025\n\021Pedal_ACCELERATO"
      "R\020\000\022\017\n\013Pedal_BRAKE\020\001*\274\001\n\tImdStatus\022\024\n\020Im"
      "dStatus_IMD_SC\020\000\022\030\n\024ImdStatus_IMD_NORMAL"
      "\020\001\022\037\n\033ImdStatus_IMD_UNDER_VOLTAGE\020\002\022\037\n\033I"
      "mdStatus_IMD_START_MEASURE\020\003\022\036\n\032ImdStatu"
      "s_IMD_DEVICE_ERROR\020\004\022\035\n\031ImdStatus_IMD_EA"
      "RTH_FAULT\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 11219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "primary.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_primary_2eproto
namespace primary {
const ::google::protobuf::EnumDescriptor* RaceType_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[0];
}
bool RaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InverterStatus_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[1];
}
bool InverterStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CarStatus_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[2];
}
bool CarStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Toggle_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[3];
}
bool Toggle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TractionControl_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[4];
}
bool TractionControl_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TsStatus_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[5];
}
bool TsStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Map_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[6];
}
bool Map_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SetCarStatus_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[7];
}
bool SetCarStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Bound_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[8];
}
bool Bound_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Pedal_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[9];
}
bool Pedal_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ImdStatus_descriptor() {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_primary_2eproto::file_level_enum_descriptors[10];
}
bool ImdStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void BMS_HV_JMP_TO_BLT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BMS_HV_JMP_TO_BLT::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BMS_HV_JMP_TO_BLT::BMS_HV_JMP_TO_BLT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BMS_HV_JMP_TO_BLT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BMS_HV_JMP_TO_BLT)
}
BMS_HV_JMP_TO_BLT::BMS_HV_JMP_TO_BLT(const BMS_HV_JMP_TO_BLT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BMS_HV_JMP_TO_BLT)
}

void BMS_HV_JMP_TO_BLT::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BMS_HV_JMP_TO_BLT::~BMS_HV_JMP_TO_BLT() {
  // @@protoc_insertion_point(destructor:primary.BMS_HV_JMP_TO_BLT)
  SharedDtor();
}

void BMS_HV_JMP_TO_BLT::SharedDtor() {
}

void BMS_HV_JMP_TO_BLT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BMS_HV_JMP_TO_BLT::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BMS_HV_JMP_TO_BLT& BMS_HV_JMP_TO_BLT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BMS_HV_JMP_TO_BLT.base);
  return *internal_default_instance();
}


void BMS_HV_JMP_TO_BLT::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BMS_HV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BMS_HV_JMP_TO_BLT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BMS_HV_JMP_TO_BLT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BMS_HV_JMP_TO_BLT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BMS_HV_JMP_TO_BLT)
  return false;
#undef DO_
}

void BMS_HV_JMP_TO_BLT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BMS_HV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BMS_HV_JMP_TO_BLT)
}

::google::protobuf::uint8* BMS_HV_JMP_TO_BLT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BMS_HV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BMS_HV_JMP_TO_BLT)
  return target;
}

size_t BMS_HV_JMP_TO_BLT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BMS_HV_JMP_TO_BLT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BMS_HV_JMP_TO_BLT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BMS_HV_JMP_TO_BLT)
  GOOGLE_DCHECK_NE(&from, this);
  const BMS_HV_JMP_TO_BLT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BMS_HV_JMP_TO_BLT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BMS_HV_JMP_TO_BLT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BMS_HV_JMP_TO_BLT)
    MergeFrom(*source);
  }
}

void BMS_HV_JMP_TO_BLT::MergeFrom(const BMS_HV_JMP_TO_BLT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BMS_HV_JMP_TO_BLT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BMS_HV_JMP_TO_BLT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BMS_HV_JMP_TO_BLT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BMS_HV_JMP_TO_BLT::CopyFrom(const BMS_HV_JMP_TO_BLT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BMS_HV_JMP_TO_BLT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BMS_HV_JMP_TO_BLT::IsInitialized() const {
  return true;
}

void BMS_HV_JMP_TO_BLT::Swap(BMS_HV_JMP_TO_BLT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BMS_HV_JMP_TO_BLT::InternalSwap(BMS_HV_JMP_TO_BLT* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BMS_HV_JMP_TO_BLT::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BMS_LV_JMP_TO_BLT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BMS_LV_JMP_TO_BLT::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BMS_LV_JMP_TO_BLT::BMS_LV_JMP_TO_BLT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BMS_LV_JMP_TO_BLT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BMS_LV_JMP_TO_BLT)
}
BMS_LV_JMP_TO_BLT::BMS_LV_JMP_TO_BLT(const BMS_LV_JMP_TO_BLT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BMS_LV_JMP_TO_BLT)
}

void BMS_LV_JMP_TO_BLT::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BMS_LV_JMP_TO_BLT::~BMS_LV_JMP_TO_BLT() {
  // @@protoc_insertion_point(destructor:primary.BMS_LV_JMP_TO_BLT)
  SharedDtor();
}

void BMS_LV_JMP_TO_BLT::SharedDtor() {
}

void BMS_LV_JMP_TO_BLT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BMS_LV_JMP_TO_BLT::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BMS_LV_JMP_TO_BLT& BMS_LV_JMP_TO_BLT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BMS_LV_JMP_TO_BLT.base);
  return *internal_default_instance();
}


void BMS_LV_JMP_TO_BLT::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BMS_LV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BMS_LV_JMP_TO_BLT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BMS_LV_JMP_TO_BLT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BMS_LV_JMP_TO_BLT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BMS_LV_JMP_TO_BLT)
  return false;
#undef DO_
}

void BMS_LV_JMP_TO_BLT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BMS_LV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BMS_LV_JMP_TO_BLT)
}

::google::protobuf::uint8* BMS_LV_JMP_TO_BLT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BMS_LV_JMP_TO_BLT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BMS_LV_JMP_TO_BLT)
  return target;
}

size_t BMS_LV_JMP_TO_BLT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BMS_LV_JMP_TO_BLT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BMS_LV_JMP_TO_BLT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BMS_LV_JMP_TO_BLT)
  GOOGLE_DCHECK_NE(&from, this);
  const BMS_LV_JMP_TO_BLT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BMS_LV_JMP_TO_BLT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BMS_LV_JMP_TO_BLT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BMS_LV_JMP_TO_BLT)
    MergeFrom(*source);
  }
}

void BMS_LV_JMP_TO_BLT::MergeFrom(const BMS_LV_JMP_TO_BLT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BMS_LV_JMP_TO_BLT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BMS_LV_JMP_TO_BLT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BMS_LV_JMP_TO_BLT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BMS_LV_JMP_TO_BLT::CopyFrom(const BMS_LV_JMP_TO_BLT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BMS_LV_JMP_TO_BLT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BMS_LV_JMP_TO_BLT::IsInitialized() const {
  return true;
}

void BMS_LV_JMP_TO_BLT::Swap(BMS_LV_JMP_TO_BLT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BMS_LV_JMP_TO_BLT::InternalSwap(BMS_LV_JMP_TO_BLT* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BMS_LV_JMP_TO_BLT::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STEER_VERSION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STEER_VERSION::kComponentVersionFieldNumber;
const int STEER_VERSION::kCancicdVersionFieldNumber;
const int STEER_VERSION::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STEER_VERSION::STEER_VERSION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_STEER_VERSION.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.STEER_VERSION)
}
STEER_VERSION::STEER_VERSION(const STEER_VERSION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&component_version_, &from.component_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.STEER_VERSION)
}

void STEER_VERSION::SharedCtor() {
  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
}

STEER_VERSION::~STEER_VERSION() {
  // @@protoc_insertion_point(destructor:primary.STEER_VERSION)
  SharedDtor();
}

void STEER_VERSION::SharedDtor() {
}

void STEER_VERSION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STEER_VERSION::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STEER_VERSION& STEER_VERSION::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_STEER_VERSION.base);
  return *internal_default_instance();
}


void STEER_VERSION::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.STEER_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool STEER_VERSION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.STEER_VERSION)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 component_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cancicd_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cancicd_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.STEER_VERSION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.STEER_VERSION)
  return false;
#undef DO_
}

void STEER_VERSION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.STEER_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->component_version(), output);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cancicd_version(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.STEER_VERSION)
}

::google::protobuf::uint8* STEER_VERSION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.STEER_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->component_version(), target);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cancicd_version(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.STEER_VERSION)
  return target;
}

size_t STEER_VERSION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.STEER_VERSION)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_version());
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cancicd_version());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STEER_VERSION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.STEER_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  const STEER_VERSION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STEER_VERSION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.STEER_VERSION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.STEER_VERSION)
    MergeFrom(*source);
  }
}

void STEER_VERSION::MergeFrom(const STEER_VERSION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.STEER_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_version() != 0) {
    set_component_version(from.component_version());
  }
  if (from.cancicd_version() != 0) {
    set_cancicd_version(from.cancicd_version());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void STEER_VERSION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.STEER_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STEER_VERSION::CopyFrom(const STEER_VERSION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.STEER_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STEER_VERSION::IsInitialized() const {
  return true;
}

void STEER_VERSION::Swap(STEER_VERSION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STEER_VERSION::InternalSwap(STEER_VERSION* other) {
  using std::swap;
  swap(component_version_, other->component_version_);
  swap(cancicd_version_, other->cancicd_version_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STEER_VERSION::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DAS_VERSION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAS_VERSION::kComponentVersionFieldNumber;
const int DAS_VERSION::kCancicdVersionFieldNumber;
const int DAS_VERSION::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAS_VERSION::DAS_VERSION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_DAS_VERSION.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.DAS_VERSION)
}
DAS_VERSION::DAS_VERSION(const DAS_VERSION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&component_version_, &from.component_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.DAS_VERSION)
}

void DAS_VERSION::SharedCtor() {
  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
}

DAS_VERSION::~DAS_VERSION() {
  // @@protoc_insertion_point(destructor:primary.DAS_VERSION)
  SharedDtor();
}

void DAS_VERSION::SharedDtor() {
}

void DAS_VERSION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DAS_VERSION::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DAS_VERSION& DAS_VERSION::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_DAS_VERSION.base);
  return *internal_default_instance();
}


void DAS_VERSION::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.DAS_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool DAS_VERSION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.DAS_VERSION)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 component_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cancicd_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cancicd_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.DAS_VERSION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.DAS_VERSION)
  return false;
#undef DO_
}

void DAS_VERSION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.DAS_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->component_version(), output);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cancicd_version(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.DAS_VERSION)
}

::google::protobuf::uint8* DAS_VERSION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.DAS_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->component_version(), target);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cancicd_version(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.DAS_VERSION)
  return target;
}

size_t DAS_VERSION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.DAS_VERSION)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_version());
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cancicd_version());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DAS_VERSION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.DAS_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  const DAS_VERSION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DAS_VERSION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.DAS_VERSION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.DAS_VERSION)
    MergeFrom(*source);
  }
}

void DAS_VERSION::MergeFrom(const DAS_VERSION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.DAS_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_version() != 0) {
    set_component_version(from.component_version());
  }
  if (from.cancicd_version() != 0) {
    set_cancicd_version(from.cancicd_version());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void DAS_VERSION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.DAS_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAS_VERSION::CopyFrom(const DAS_VERSION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.DAS_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAS_VERSION::IsInitialized() const {
  return true;
}

void DAS_VERSION::Swap(DAS_VERSION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAS_VERSION::InternalSwap(DAS_VERSION* other) {
  using std::swap;
  swap(component_version_, other->component_version_);
  swap(cancicd_version_, other->cancicd_version_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DAS_VERSION::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_VERSION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_VERSION::kComponentVersionFieldNumber;
const int HV_VERSION::kCancicdVersionFieldNumber;
const int HV_VERSION::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_VERSION::HV_VERSION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_VERSION.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_VERSION)
}
HV_VERSION::HV_VERSION(const HV_VERSION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&component_version_, &from.component_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_VERSION)
}

void HV_VERSION::SharedCtor() {
  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
}

HV_VERSION::~HV_VERSION() {
  // @@protoc_insertion_point(destructor:primary.HV_VERSION)
  SharedDtor();
}

void HV_VERSION::SharedDtor() {
}

void HV_VERSION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_VERSION::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_VERSION& HV_VERSION::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_VERSION.base);
  return *internal_default_instance();
}


void HV_VERSION::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_VERSION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_VERSION)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 component_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cancicd_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cancicd_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_VERSION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_VERSION)
  return false;
#undef DO_
}

void HV_VERSION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->component_version(), output);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cancicd_version(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_VERSION)
}

::google::protobuf::uint8* HV_VERSION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->component_version(), target);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cancicd_version(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_VERSION)
  return target;
}

size_t HV_VERSION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_VERSION)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_version());
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cancicd_version());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_VERSION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_VERSION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_VERSION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_VERSION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_VERSION)
    MergeFrom(*source);
  }
}

void HV_VERSION::MergeFrom(const HV_VERSION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_version() != 0) {
    set_component_version(from.component_version());
  }
  if (from.cancicd_version() != 0) {
    set_cancicd_version(from.cancicd_version());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_VERSION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_VERSION::CopyFrom(const HV_VERSION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_VERSION::IsInitialized() const {
  return true;
}

void HV_VERSION::Swap(HV_VERSION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_VERSION::InternalSwap(HV_VERSION* other) {
  using std::swap;
  swap(component_version_, other->component_version_);
  swap(cancicd_version_, other->cancicd_version_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_VERSION::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_VERSION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_VERSION::kComponentVersionFieldNumber;
const int LV_VERSION::kCancicdVersionFieldNumber;
const int LV_VERSION::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_VERSION::LV_VERSION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_VERSION.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_VERSION)
}
LV_VERSION::LV_VERSION(const LV_VERSION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&component_version_, &from.component_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_VERSION)
}

void LV_VERSION::SharedCtor() {
  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
}

LV_VERSION::~LV_VERSION() {
  // @@protoc_insertion_point(destructor:primary.LV_VERSION)
  SharedDtor();
}

void LV_VERSION::SharedDtor() {
}

void LV_VERSION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_VERSION::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_VERSION& LV_VERSION::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_VERSION.base);
  return *internal_default_instance();
}


void LV_VERSION::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool LV_VERSION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_VERSION)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 component_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cancicd_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cancicd_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_VERSION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_VERSION)
  return false;
#undef DO_
}

void LV_VERSION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->component_version(), output);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cancicd_version(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_VERSION)
}

::google::protobuf::uint8* LV_VERSION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->component_version(), target);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cancicd_version(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_VERSION)
  return target;
}

size_t LV_VERSION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_VERSION)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_version());
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cancicd_version());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_VERSION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_VERSION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_VERSION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_VERSION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_VERSION)
    MergeFrom(*source);
  }
}

void LV_VERSION::MergeFrom(const LV_VERSION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_version() != 0) {
    set_component_version(from.component_version());
  }
  if (from.cancicd_version() != 0) {
    set_cancicd_version(from.cancicd_version());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void LV_VERSION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_VERSION::CopyFrom(const LV_VERSION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_VERSION::IsInitialized() const {
  return true;
}

void LV_VERSION::Swap(LV_VERSION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_VERSION::InternalSwap(LV_VERSION* other) {
  using std::swap;
  swap(component_version_, other->component_version_);
  swap(cancicd_version_, other->cancicd_version_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_VERSION::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TLM_VERSION::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TLM_VERSION::kComponentVersionFieldNumber;
const int TLM_VERSION::kCancicdVersionFieldNumber;
const int TLM_VERSION::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TLM_VERSION::TLM_VERSION()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_TLM_VERSION.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.TLM_VERSION)
}
TLM_VERSION::TLM_VERSION(const TLM_VERSION& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&component_version_, &from.component_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.TLM_VERSION)
}

void TLM_VERSION::SharedCtor() {
  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
}

TLM_VERSION::~TLM_VERSION() {
  // @@protoc_insertion_point(destructor:primary.TLM_VERSION)
  SharedDtor();
}

void TLM_VERSION::SharedDtor() {
}

void TLM_VERSION::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TLM_VERSION::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TLM_VERSION& TLM_VERSION::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_TLM_VERSION.base);
  return *internal_default_instance();
}


void TLM_VERSION::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.TLM_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&component_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&component_version_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool TLM_VERSION::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.TLM_VERSION)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 component_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &component_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cancicd_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cancicd_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.TLM_VERSION)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.TLM_VERSION)
  return false;
#undef DO_
}

void TLM_VERSION::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.TLM_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->component_version(), output);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cancicd_version(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.TLM_VERSION)
}

::google::protobuf::uint8* TLM_VERSION::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.TLM_VERSION)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->component_version(), target);
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cancicd_version(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.TLM_VERSION)
  return target;
}

size_t TLM_VERSION::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.TLM_VERSION)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 component_version = 1;
  if (this->component_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->component_version());
  }

  // uint32 cancicd_version = 2;
  if (this->cancicd_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cancicd_version());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TLM_VERSION::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.TLM_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  const TLM_VERSION* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TLM_VERSION>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.TLM_VERSION)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.TLM_VERSION)
    MergeFrom(*source);
  }
}

void TLM_VERSION::MergeFrom(const TLM_VERSION& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.TLM_VERSION)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.component_version() != 0) {
    set_component_version(from.component_version());
  }
  if (from.cancicd_version() != 0) {
    set_cancicd_version(from.cancicd_version());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void TLM_VERSION::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.TLM_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLM_VERSION::CopyFrom(const TLM_VERSION& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.TLM_VERSION)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLM_VERSION::IsInitialized() const {
  return true;
}

void TLM_VERSION::Swap(TLM_VERSION* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TLM_VERSION::InternalSwap(TLM_VERSION* other) {
  using std::swap;
  swap(component_version_, other->component_version_);
  swap(cancicd_version_, other->cancicd_version_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TLM_VERSION::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TIMESTAMP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TIMESTAMP::kTimestampFieldNumber;
const int TIMESTAMP::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TIMESTAMP::TIMESTAMP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_TIMESTAMP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.TIMESTAMP)
}
TIMESTAMP::TIMESTAMP(const TIMESTAMP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.TIMESTAMP)
}

void TIMESTAMP::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(timestamp_));
}

TIMESTAMP::~TIMESTAMP() {
  // @@protoc_insertion_point(destructor:primary.TIMESTAMP)
  SharedDtor();
}

void TIMESTAMP::SharedDtor() {
}

void TIMESTAMP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TIMESTAMP::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TIMESTAMP& TIMESTAMP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_TIMESTAMP.base);
  return *internal_default_instance();
}


void TIMESTAMP::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.TIMESTAMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool TIMESTAMP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.TIMESTAMP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.TIMESTAMP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.TIMESTAMP)
  return false;
#undef DO_
}

void TIMESTAMP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.TIMESTAMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.TIMESTAMP)
}

::google::protobuf::uint8* TIMESTAMP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.TIMESTAMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.TIMESTAMP)
  return target;
}

size_t TIMESTAMP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.TIMESTAMP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TIMESTAMP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.TIMESTAMP)
  GOOGLE_DCHECK_NE(&from, this);
  const TIMESTAMP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TIMESTAMP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.TIMESTAMP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.TIMESTAMP)
    MergeFrom(*source);
  }
}

void TIMESTAMP::MergeFrom(const TIMESTAMP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.TIMESTAMP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void TIMESTAMP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.TIMESTAMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TIMESTAMP::CopyFrom(const TIMESTAMP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.TIMESTAMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TIMESTAMP::IsInitialized() const {
  return true;
}

void TIMESTAMP::Swap(TIMESTAMP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TIMESTAMP::InternalSwap(TIMESTAMP* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TIMESTAMP::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_TLM_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_TLM_STATUS::kTlmStatusFieldNumber;
const int SET_TLM_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_TLM_STATUS::SET_TLM_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_TLM_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_TLM_STATUS)
}
SET_TLM_STATUS::SET_TLM_STATUS(const SET_TLM_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&tlm_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_TLM_STATUS)
}

void SET_TLM_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tlm_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
}

SET_TLM_STATUS::~SET_TLM_STATUS() {
  // @@protoc_insertion_point(destructor:primary.SET_TLM_STATUS)
  SharedDtor();
}

void SET_TLM_STATUS::SharedDtor() {
}

void SET_TLM_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_TLM_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_TLM_STATUS& SET_TLM_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_TLM_STATUS.base);
  return *internal_default_instance();
}


void SET_TLM_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tlm_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
  _internal_metadata_.Clear();
}

bool SET_TLM_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_TLM_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle tlm_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tlm_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_TLM_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_TLM_STATUS)
  return false;
#undef DO_
}

void SET_TLM_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tlm_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_TLM_STATUS)
}

::google::protobuf::uint8* SET_TLM_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tlm_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_TLM_STATUS)
  return target;
}

size_t SET_TLM_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_TLM_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tlm_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_TLM_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_TLM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_TLM_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_TLM_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_TLM_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_TLM_STATUS)
    MergeFrom(*source);
  }
}

void SET_TLM_STATUS::MergeFrom(const SET_TLM_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_TLM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.tlm_status() != 0) {
    set_tlm_status(from.tlm_status());
  }
}

void SET_TLM_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_TLM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_TLM_STATUS::CopyFrom(const SET_TLM_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_TLM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_TLM_STATUS::IsInitialized() const {
  return true;
}

void SET_TLM_STATUS::Swap(SET_TLM_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_TLM_STATUS::InternalSwap(SET_TLM_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(tlm_status_, other->tlm_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_TLM_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TLM_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TLM_STATUS::kTlmStatusFieldNumber;
const int TLM_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TLM_STATUS::TLM_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_TLM_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.TLM_STATUS)
}
TLM_STATUS::TLM_STATUS(const TLM_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&tlm_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
  // @@protoc_insertion_point(copy_constructor:primary.TLM_STATUS)
}

void TLM_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tlm_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
}

TLM_STATUS::~TLM_STATUS() {
  // @@protoc_insertion_point(destructor:primary.TLM_STATUS)
  SharedDtor();
}

void TLM_STATUS::SharedDtor() {
}

void TLM_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TLM_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TLM_STATUS& TLM_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_TLM_STATUS.base);
  return *internal_default_instance();
}


void TLM_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tlm_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(tlm_status_));
  _internal_metadata_.Clear();
}

bool TLM_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.TLM_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle tlm_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tlm_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.TLM_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.TLM_STATUS)
  return false;
#undef DO_
}

void TLM_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tlm_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.TLM_STATUS)
}

::google::protobuf::uint8* TLM_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.TLM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tlm_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.TLM_STATUS)
  return target;
}

size_t TLM_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.TLM_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle tlm_status = 1;
  if (this->tlm_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tlm_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TLM_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.TLM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const TLM_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TLM_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.TLM_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.TLM_STATUS)
    MergeFrom(*source);
  }
}

void TLM_STATUS::MergeFrom(const TLM_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.TLM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.tlm_status() != 0) {
    set_tlm_status(from.tlm_status());
  }
}

void TLM_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.TLM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TLM_STATUS::CopyFrom(const TLM_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.TLM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLM_STATUS::IsInitialized() const {
  return true;
}

void TLM_STATUS::Swap(TLM_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TLM_STATUS::InternalSwap(TLM_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(tlm_status_, other->tlm_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TLM_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STEER_SYSTEM_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STEER_SYSTEM_STATUS::kSocTempFieldNumber;
const int STEER_SYSTEM_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STEER_SYSTEM_STATUS::STEER_SYSTEM_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_STEER_SYSTEM_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.STEER_SYSTEM_STATUS)
}
STEER_SYSTEM_STATUS::STEER_SYSTEM_STATUS(const STEER_SYSTEM_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&soc_temp_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(soc_temp_));
  // @@protoc_insertion_point(copy_constructor:primary.STEER_SYSTEM_STATUS)
}

void STEER_SYSTEM_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&soc_temp_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(soc_temp_));
}

STEER_SYSTEM_STATUS::~STEER_SYSTEM_STATUS() {
  // @@protoc_insertion_point(destructor:primary.STEER_SYSTEM_STATUS)
  SharedDtor();
}

void STEER_SYSTEM_STATUS::SharedDtor() {
}

void STEER_SYSTEM_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STEER_SYSTEM_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STEER_SYSTEM_STATUS& STEER_SYSTEM_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_STEER_SYSTEM_STATUS.base);
  return *internal_default_instance();
}


void STEER_SYSTEM_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.STEER_SYSTEM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&soc_temp_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(soc_temp_));
  _internal_metadata_.Clear();
}

bool STEER_SYSTEM_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.STEER_SYSTEM_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 soc_temp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &soc_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.STEER_SYSTEM_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.STEER_SYSTEM_STATUS)
  return false;
#undef DO_
}

void STEER_SYSTEM_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.STEER_SYSTEM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 soc_temp = 1;
  if (this->soc_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->soc_temp(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.STEER_SYSTEM_STATUS)
}

::google::protobuf::uint8* STEER_SYSTEM_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.STEER_SYSTEM_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 soc_temp = 1;
  if (this->soc_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->soc_temp(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.STEER_SYSTEM_STATUS)
  return target;
}

size_t STEER_SYSTEM_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.STEER_SYSTEM_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // uint32 soc_temp = 1;
  if (this->soc_temp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->soc_temp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STEER_SYSTEM_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.STEER_SYSTEM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const STEER_SYSTEM_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STEER_SYSTEM_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.STEER_SYSTEM_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.STEER_SYSTEM_STATUS)
    MergeFrom(*source);
  }
}

void STEER_SYSTEM_STATUS::MergeFrom(const STEER_SYSTEM_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.STEER_SYSTEM_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.soc_temp() != 0) {
    set_soc_temp(from.soc_temp());
  }
}

void STEER_SYSTEM_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.STEER_SYSTEM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STEER_SYSTEM_STATUS::CopyFrom(const STEER_SYSTEM_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.STEER_SYSTEM_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STEER_SYSTEM_STATUS::IsInitialized() const {
  return true;
}

void STEER_SYSTEM_STATUS::Swap(STEER_SYSTEM_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STEER_SYSTEM_STATUS::InternalSwap(STEER_SYSTEM_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(soc_temp_, other->soc_temp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STEER_SYSTEM_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_VOLTAGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_VOLTAGE::kPackVoltageFieldNumber;
const int HV_VOLTAGE::kBusVoltageFieldNumber;
const int HV_VOLTAGE::kMaxCellVoltageFieldNumber;
const int HV_VOLTAGE::kMinCellVoltageFieldNumber;
const int HV_VOLTAGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_VOLTAGE::HV_VOLTAGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_VOLTAGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_VOLTAGE)
}
HV_VOLTAGE::HV_VOLTAGE(const HV_VOLTAGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pack_voltage_, &from.pack_voltage_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&pack_voltage_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_VOLTAGE)
}

void HV_VOLTAGE::SharedCtor() {
  ::memset(&pack_voltage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&pack_voltage_)) + sizeof(_inner_timestamp_));
}

HV_VOLTAGE::~HV_VOLTAGE() {
  // @@protoc_insertion_point(destructor:primary.HV_VOLTAGE)
  SharedDtor();
}

void HV_VOLTAGE::SharedDtor() {
}

void HV_VOLTAGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_VOLTAGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_VOLTAGE& HV_VOLTAGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_VOLTAGE.base);
  return *internal_default_instance();
}


void HV_VOLTAGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pack_voltage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&pack_voltage_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_VOLTAGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_VOLTAGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pack_voltage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pack_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bus_voltage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bus_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_cell_voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_cell_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float min_cell_voltage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_cell_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_VOLTAGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_VOLTAGE)
  return false;
#undef DO_
}

void HV_VOLTAGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pack_voltage = 1;
  if (this->pack_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pack_voltage(), output);
  }

  // float bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->bus_voltage(), output);
  }

  // float max_cell_voltage = 3;
  if (this->max_cell_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->max_cell_voltage(), output);
  }

  // float min_cell_voltage = 4;
  if (this->min_cell_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->min_cell_voltage(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_VOLTAGE)
}

::google::protobuf::uint8* HV_VOLTAGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pack_voltage = 1;
  if (this->pack_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pack_voltage(), target);
  }

  // float bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->bus_voltage(), target);
  }

  // float max_cell_voltage = 3;
  if (this->max_cell_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->max_cell_voltage(), target);
  }

  // float min_cell_voltage = 4;
  if (this->min_cell_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->min_cell_voltage(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_VOLTAGE)
  return target;
}

size_t HV_VOLTAGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_VOLTAGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float pack_voltage = 1;
  if (this->pack_voltage() != 0) {
    total_size += 1 + 4;
  }

  // float bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    total_size += 1 + 4;
  }

  // float max_cell_voltage = 3;
  if (this->max_cell_voltage() != 0) {
    total_size += 1 + 4;
  }

  // float min_cell_voltage = 4;
  if (this->min_cell_voltage() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_VOLTAGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_VOLTAGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_VOLTAGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_VOLTAGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_VOLTAGE)
    MergeFrom(*source);
  }
}

void HV_VOLTAGE::MergeFrom(const HV_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pack_voltage() != 0) {
    set_pack_voltage(from.pack_voltage());
  }
  if (from.bus_voltage() != 0) {
    set_bus_voltage(from.bus_voltage());
  }
  if (from.max_cell_voltage() != 0) {
    set_max_cell_voltage(from.max_cell_voltage());
  }
  if (from.min_cell_voltage() != 0) {
    set_min_cell_voltage(from.min_cell_voltage());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_VOLTAGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_VOLTAGE::CopyFrom(const HV_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_VOLTAGE::IsInitialized() const {
  return true;
}

void HV_VOLTAGE::Swap(HV_VOLTAGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_VOLTAGE::InternalSwap(HV_VOLTAGE* other) {
  using std::swap;
  swap(pack_voltage_, other->pack_voltage_);
  swap(bus_voltage_, other->bus_voltage_);
  swap(max_cell_voltage_, other->max_cell_voltage_);
  swap(min_cell_voltage_, other->min_cell_voltage_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_VOLTAGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CURRENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CURRENT::kCurrentFieldNumber;
const int HV_CURRENT::kPowerFieldNumber;
const int HV_CURRENT::kEnergyFieldNumber;
const int HV_CURRENT::kSocFieldNumber;
const int HV_CURRENT::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CURRENT::HV_CURRENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CURRENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CURRENT)
}
HV_CURRENT::HV_CURRENT(const HV_CURRENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&current_, &from.current_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&current_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CURRENT)
}

void HV_CURRENT::SharedCtor() {
  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&current_)) + sizeof(_inner_timestamp_));
}

HV_CURRENT::~HV_CURRENT() {
  // @@protoc_insertion_point(destructor:primary.HV_CURRENT)
  SharedDtor();
}

void HV_CURRENT::SharedDtor() {
}

void HV_CURRENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CURRENT::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CURRENT& HV_CURRENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CURRENT.base);
  return *internal_default_instance();
}


void HV_CURRENT::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&current_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_CURRENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CURRENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float current = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float power = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float energy = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &energy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float soc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &soc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CURRENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CURRENT)
  return false;
#undef DO_
}

void HV_CURRENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float current = 1;
  if (this->current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->current(), output);
  }

  // float power = 2;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->power(), output);
  }

  // float energy = 3;
  if (this->energy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->energy(), output);
  }

  // float soc = 4;
  if (this->soc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->soc(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CURRENT)
}

::google::protobuf::uint8* HV_CURRENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float current = 1;
  if (this->current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->current(), target);
  }

  // float power = 2;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->power(), target);
  }

  // float energy = 3;
  if (this->energy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->energy(), target);
  }

  // float soc = 4;
  if (this->soc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->soc(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CURRENT)
  return target;
}

size_t HV_CURRENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CURRENT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float current = 1;
  if (this->current() != 0) {
    total_size += 1 + 4;
  }

  // float power = 2;
  if (this->power() != 0) {
    total_size += 1 + 4;
  }

  // float energy = 3;
  if (this->energy() != 0) {
    total_size += 1 + 4;
  }

  // float soc = 4;
  if (this->soc() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CURRENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CURRENT)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CURRENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CURRENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CURRENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CURRENT)
    MergeFrom(*source);
  }
}

void HV_CURRENT::MergeFrom(const HV_CURRENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CURRENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current() != 0) {
    set_current(from.current());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.energy() != 0) {
    set_energy(from.energy());
  }
  if (from.soc() != 0) {
    set_soc(from.soc());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_CURRENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CURRENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CURRENT::CopyFrom(const HV_CURRENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CURRENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CURRENT::IsInitialized() const {
  return true;
}

void HV_CURRENT::Swap(HV_CURRENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CURRENT::InternalSwap(HV_CURRENT* other) {
  using std::swap;
  swap(current_, other->current_);
  swap(power_, other->power_);
  swap(energy_, other->energy_);
  swap(soc_, other->soc_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CURRENT::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_TEMP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_TEMP::kAverageTempFieldNumber;
const int HV_TEMP::kMaxTempFieldNumber;
const int HV_TEMP::kMinTempFieldNumber;
const int HV_TEMP::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_TEMP::HV_TEMP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_TEMP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_TEMP)
}
HV_TEMP::HV_TEMP(const HV_TEMP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&average_temp_, &from.average_temp_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_temp_) -
    reinterpret_cast<char*>(&average_temp_)) + sizeof(min_temp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_TEMP)
}

void HV_TEMP::SharedCtor() {
  ::memset(&average_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_temp_) -
      reinterpret_cast<char*>(&average_temp_)) + sizeof(min_temp_));
}

HV_TEMP::~HV_TEMP() {
  // @@protoc_insertion_point(destructor:primary.HV_TEMP)
  SharedDtor();
}

void HV_TEMP::SharedDtor() {
}

void HV_TEMP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_TEMP::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_TEMP& HV_TEMP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_TEMP.base);
  return *internal_default_instance();
}


void HV_TEMP::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&average_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_temp_) -
      reinterpret_cast<char*>(&average_temp_)) + sizeof(min_temp_));
  _internal_metadata_.Clear();
}

bool HV_TEMP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_TEMP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float average_temp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &average_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float max_temp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float min_temp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &min_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_TEMP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_TEMP)
  return false;
#undef DO_
}

void HV_TEMP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float average_temp = 1;
  if (this->average_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->average_temp(), output);
  }

  // float max_temp = 2;
  if (this->max_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->max_temp(), output);
  }

  // float min_temp = 3;
  if (this->min_temp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->min_temp(), output);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_TEMP)
}

::google::protobuf::uint8* HV_TEMP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float average_temp = 1;
  if (this->average_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->average_temp(), target);
  }

  // float max_temp = 2;
  if (this->max_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->max_temp(), target);
  }

  // float min_temp = 3;
  if (this->min_temp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->min_temp(), target);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_TEMP)
  return target;
}

size_t HV_TEMP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_TEMP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float average_temp = 1;
  if (this->average_temp() != 0) {
    total_size += 1 + 4;
  }

  // float max_temp = 2;
  if (this->max_temp() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float min_temp = 3;
  if (this->min_temp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_TEMP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_TEMP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_TEMP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_TEMP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_TEMP)
    MergeFrom(*source);
  }
}

void HV_TEMP::MergeFrom(const HV_TEMP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.average_temp() != 0) {
    set_average_temp(from.average_temp());
  }
  if (from.max_temp() != 0) {
    set_max_temp(from.max_temp());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.min_temp() != 0) {
    set_min_temp(from.min_temp());
  }
}

void HV_TEMP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_TEMP::CopyFrom(const HV_TEMP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_TEMP::IsInitialized() const {
  return true;
}

void HV_TEMP::Swap(HV_TEMP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_TEMP::InternalSwap(HV_TEMP* other) {
  using std::swap;
  swap(average_temp_, other->average_temp_);
  swap(max_temp_, other->max_temp_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(min_temp_, other->min_temp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_TEMP::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_ERRORS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_ERRORS::kWarningsFieldNumber;
const int HV_ERRORS::kErrorsFieldNumber;
const int HV_ERRORS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_ERRORS::HV_ERRORS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_ERRORS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_ERRORS)
}
HV_ERRORS::HV_ERRORS(const HV_ERRORS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&warnings_, &from.warnings_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_ERRORS)
}

void HV_ERRORS::SharedCtor() {
  ::memset(&warnings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
}

HV_ERRORS::~HV_ERRORS() {
  // @@protoc_insertion_point(destructor:primary.HV_ERRORS)
  SharedDtor();
}

void HV_ERRORS::SharedDtor() {
}

void HV_ERRORS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_ERRORS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_ERRORS& HV_ERRORS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_ERRORS.base);
  return *internal_default_instance();
}


void HV_ERRORS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&warnings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_ERRORS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_ERRORS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 warnings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warnings_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_ERRORS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_ERRORS)
  return false;
#undef DO_
}

void HV_ERRORS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->warnings(), output);
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->errors(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_ERRORS)
}

::google::protobuf::uint8* HV_ERRORS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->warnings(), target);
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->errors(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_ERRORS)
  return target;
}

size_t HV_ERRORS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_ERRORS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warnings());
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errors());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_ERRORS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_ERRORS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_ERRORS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_ERRORS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_ERRORS)
    MergeFrom(*source);
  }
}

void HV_ERRORS::MergeFrom(const HV_ERRORS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.warnings() != 0) {
    set_warnings(from.warnings());
  }
  if (from.errors() != 0) {
    set_errors(from.errors());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_ERRORS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_ERRORS::CopyFrom(const HV_ERRORS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_ERRORS::IsInitialized() const {
  return true;
}

void HV_ERRORS::Swap(HV_ERRORS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_ERRORS::InternalSwap(HV_ERRORS* other) {
  using std::swap;
  swap(warnings_, other->warnings_);
  swap(errors_, other->errors_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_ERRORS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CAN_FORWARD::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CAN_FORWARD::kCanForwardSetFieldNumber;
const int HV_CAN_FORWARD::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CAN_FORWARD::HV_CAN_FORWARD()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CAN_FORWARD)
}
HV_CAN_FORWARD::HV_CAN_FORWARD(const HV_CAN_FORWARD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&can_forward_set_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_set_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CAN_FORWARD)
}

void HV_CAN_FORWARD::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_forward_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_set_));
}

HV_CAN_FORWARD::~HV_CAN_FORWARD() {
  // @@protoc_insertion_point(destructor:primary.HV_CAN_FORWARD)
  SharedDtor();
}

void HV_CAN_FORWARD::SharedDtor() {
}

void HV_CAN_FORWARD::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CAN_FORWARD::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CAN_FORWARD& HV_CAN_FORWARD::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD.base);
  return *internal_default_instance();
}


void HV_CAN_FORWARD::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CAN_FORWARD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_forward_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_set_));
  _internal_metadata_.Clear();
}

bool HV_CAN_FORWARD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CAN_FORWARD)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle can_forward_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_can_forward_set(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CAN_FORWARD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CAN_FORWARD)
  return false;
#undef DO_
}

void HV_CAN_FORWARD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CAN_FORWARD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle can_forward_set = 1;
  if (this->can_forward_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->can_forward_set(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CAN_FORWARD)
}

::google::protobuf::uint8* HV_CAN_FORWARD::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CAN_FORWARD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle can_forward_set = 1;
  if (this->can_forward_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->can_forward_set(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CAN_FORWARD)
  return target;
}

size_t HV_CAN_FORWARD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CAN_FORWARD)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle can_forward_set = 1;
  if (this->can_forward_set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->can_forward_set());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CAN_FORWARD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CAN_FORWARD)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CAN_FORWARD* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CAN_FORWARD>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CAN_FORWARD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CAN_FORWARD)
    MergeFrom(*source);
  }
}

void HV_CAN_FORWARD::MergeFrom(const HV_CAN_FORWARD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CAN_FORWARD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.can_forward_set() != 0) {
    set_can_forward_set(from.can_forward_set());
  }
}

void HV_CAN_FORWARD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CAN_FORWARD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CAN_FORWARD::CopyFrom(const HV_CAN_FORWARD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CAN_FORWARD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CAN_FORWARD::IsInitialized() const {
  return true;
}

void HV_CAN_FORWARD::Swap(HV_CAN_FORWARD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CAN_FORWARD::InternalSwap(HV_CAN_FORWARD* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(can_forward_set_, other->can_forward_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CAN_FORWARD::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_FANS_OVERRIDE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_FANS_OVERRIDE::kFansOverrideFieldNumber;
const int HV_FANS_OVERRIDE::kFansSpeedFieldNumber;
const int HV_FANS_OVERRIDE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_FANS_OVERRIDE::HV_FANS_OVERRIDE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_FANS_OVERRIDE)
}
HV_FANS_OVERRIDE::HV_FANS_OVERRIDE(const HV_FANS_OVERRIDE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fans_override_, &from.fans_override_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_FANS_OVERRIDE)
}

void HV_FANS_OVERRIDE::SharedCtor() {
  ::memset(&fans_override_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
}

HV_FANS_OVERRIDE::~HV_FANS_OVERRIDE() {
  // @@protoc_insertion_point(destructor:primary.HV_FANS_OVERRIDE)
  SharedDtor();
}

void HV_FANS_OVERRIDE::SharedDtor() {
}

void HV_FANS_OVERRIDE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_FANS_OVERRIDE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_FANS_OVERRIDE& HV_FANS_OVERRIDE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE.base);
  return *internal_default_instance();
}


void HV_FANS_OVERRIDE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_FANS_OVERRIDE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fans_override_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_FANS_OVERRIDE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_FANS_OVERRIDE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle fans_override = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fans_override(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fans_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fans_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_FANS_OVERRIDE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_FANS_OVERRIDE)
  return false;
#undef DO_
}

void HV_FANS_OVERRIDE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_FANS_OVERRIDE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->fans_override(), output);
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fans_speed(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_FANS_OVERRIDE)
}

::google::protobuf::uint8* HV_FANS_OVERRIDE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_FANS_OVERRIDE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->fans_override(), target);
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fans_speed(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_FANS_OVERRIDE)
  return target;
}

size_t HV_FANS_OVERRIDE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_FANS_OVERRIDE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fans_override());
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_FANS_OVERRIDE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_FANS_OVERRIDE)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_FANS_OVERRIDE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_FANS_OVERRIDE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_FANS_OVERRIDE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_FANS_OVERRIDE)
    MergeFrom(*source);
  }
}

void HV_FANS_OVERRIDE::MergeFrom(const HV_FANS_OVERRIDE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_FANS_OVERRIDE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fans_override() != 0) {
    set_fans_override(from.fans_override());
  }
  if (from.fans_speed() != 0) {
    set_fans_speed(from.fans_speed());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_FANS_OVERRIDE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_FANS_OVERRIDE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_FANS_OVERRIDE::CopyFrom(const HV_FANS_OVERRIDE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_FANS_OVERRIDE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_FANS_OVERRIDE::IsInitialized() const {
  return true;
}

void HV_FANS_OVERRIDE::Swap(HV_FANS_OVERRIDE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_FANS_OVERRIDE::InternalSwap(HV_FANS_OVERRIDE* other) {
  using std::swap;
  swap(fans_override_, other->fans_override_);
  swap(fans_speed_, other->fans_speed_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_FANS_OVERRIDE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CAN_FORWARD_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CAN_FORWARD_STATUS::kCanForwardStatusFieldNumber;
const int HV_CAN_FORWARD_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CAN_FORWARD_STATUS::HV_CAN_FORWARD_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CAN_FORWARD_STATUS)
}
HV_CAN_FORWARD_STATUS::HV_CAN_FORWARD_STATUS(const HV_CAN_FORWARD_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&can_forward_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_status_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CAN_FORWARD_STATUS)
}

void HV_CAN_FORWARD_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_forward_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_status_));
}

HV_CAN_FORWARD_STATUS::~HV_CAN_FORWARD_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HV_CAN_FORWARD_STATUS)
  SharedDtor();
}

void HV_CAN_FORWARD_STATUS::SharedDtor() {
}

void HV_CAN_FORWARD_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CAN_FORWARD_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CAN_FORWARD_STATUS& HV_CAN_FORWARD_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CAN_FORWARD_STATUS.base);
  return *internal_default_instance();
}


void HV_CAN_FORWARD_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CAN_FORWARD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&can_forward_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(can_forward_status_));
  _internal_metadata_.Clear();
}

bool HV_CAN_FORWARD_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CAN_FORWARD_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle can_forward_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_can_forward_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CAN_FORWARD_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CAN_FORWARD_STATUS)
  return false;
#undef DO_
}

void HV_CAN_FORWARD_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CAN_FORWARD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle can_forward_status = 1;
  if (this->can_forward_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->can_forward_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CAN_FORWARD_STATUS)
}

::google::protobuf::uint8* HV_CAN_FORWARD_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CAN_FORWARD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle can_forward_status = 1;
  if (this->can_forward_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->can_forward_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CAN_FORWARD_STATUS)
  return target;
}

size_t HV_CAN_FORWARD_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CAN_FORWARD_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle can_forward_status = 1;
  if (this->can_forward_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->can_forward_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CAN_FORWARD_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CAN_FORWARD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CAN_FORWARD_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CAN_FORWARD_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CAN_FORWARD_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CAN_FORWARD_STATUS)
    MergeFrom(*source);
  }
}

void HV_CAN_FORWARD_STATUS::MergeFrom(const HV_CAN_FORWARD_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CAN_FORWARD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.can_forward_status() != 0) {
    set_can_forward_status(from.can_forward_status());
  }
}

void HV_CAN_FORWARD_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CAN_FORWARD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CAN_FORWARD_STATUS::CopyFrom(const HV_CAN_FORWARD_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CAN_FORWARD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CAN_FORWARD_STATUS::IsInitialized() const {
  return true;
}

void HV_CAN_FORWARD_STATUS::Swap(HV_CAN_FORWARD_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CAN_FORWARD_STATUS::InternalSwap(HV_CAN_FORWARD_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(can_forward_status_, other->can_forward_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CAN_FORWARD_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_FANS_OVERRIDE_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_FANS_OVERRIDE_STATUS::kFansOverrideFieldNumber;
const int HV_FANS_OVERRIDE_STATUS::kFansSpeedFieldNumber;
const int HV_FANS_OVERRIDE_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_FANS_OVERRIDE_STATUS::HV_FANS_OVERRIDE_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_FANS_OVERRIDE_STATUS)
}
HV_FANS_OVERRIDE_STATUS::HV_FANS_OVERRIDE_STATUS(const HV_FANS_OVERRIDE_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fans_override_, &from.fans_override_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_FANS_OVERRIDE_STATUS)
}

void HV_FANS_OVERRIDE_STATUS::SharedCtor() {
  ::memset(&fans_override_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
}

HV_FANS_OVERRIDE_STATUS::~HV_FANS_OVERRIDE_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HV_FANS_OVERRIDE_STATUS)
  SharedDtor();
}

void HV_FANS_OVERRIDE_STATUS::SharedDtor() {
}

void HV_FANS_OVERRIDE_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_FANS_OVERRIDE_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_FANS_OVERRIDE_STATUS& HV_FANS_OVERRIDE_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_FANS_OVERRIDE_STATUS.base);
  return *internal_default_instance();
}


void HV_FANS_OVERRIDE_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_FANS_OVERRIDE_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fans_override_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&fans_override_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_FANS_OVERRIDE_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_FANS_OVERRIDE_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle fans_override = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fans_override(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fans_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fans_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_FANS_OVERRIDE_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_FANS_OVERRIDE_STATUS)
  return false;
#undef DO_
}

void HV_FANS_OVERRIDE_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_FANS_OVERRIDE_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->fans_override(), output);
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fans_speed(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_FANS_OVERRIDE_STATUS)
}

::google::protobuf::uint8* HV_FANS_OVERRIDE_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_FANS_OVERRIDE_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->fans_override(), target);
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fans_speed(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_FANS_OVERRIDE_STATUS)
  return target;
}

size_t HV_FANS_OVERRIDE_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_FANS_OVERRIDE_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .primary.Toggle fans_override = 1;
  if (this->fans_override() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fans_override());
  }

  // float fans_speed = 2;
  if (this->fans_speed() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_FANS_OVERRIDE_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_FANS_OVERRIDE_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_FANS_OVERRIDE_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_FANS_OVERRIDE_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_FANS_OVERRIDE_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_FANS_OVERRIDE_STATUS)
    MergeFrom(*source);
  }
}

void HV_FANS_OVERRIDE_STATUS::MergeFrom(const HV_FANS_OVERRIDE_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_FANS_OVERRIDE_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fans_override() != 0) {
    set_fans_override(from.fans_override());
  }
  if (from.fans_speed() != 0) {
    set_fans_speed(from.fans_speed());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_FANS_OVERRIDE_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_FANS_OVERRIDE_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_FANS_OVERRIDE_STATUS::CopyFrom(const HV_FANS_OVERRIDE_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_FANS_OVERRIDE_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_FANS_OVERRIDE_STATUS::IsInitialized() const {
  return true;
}

void HV_FANS_OVERRIDE_STATUS::Swap(HV_FANS_OVERRIDE_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_FANS_OVERRIDE_STATUS::InternalSwap(HV_FANS_OVERRIDE_STATUS* other) {
  using std::swap;
  swap(fans_override_, other->fans_override_);
  swap(fans_speed_, other->fans_speed_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_FANS_OVERRIDE_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_FEEDBACKS_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_FEEDBACKS_STATUS::kFeedbacksStatusFieldNumber;
const int HV_FEEDBACKS_STATUS::kIsCircuitryErrorFieldNumber;
const int HV_FEEDBACKS_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_FEEDBACKS_STATUS::HV_FEEDBACKS_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_FEEDBACKS_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_FEEDBACKS_STATUS)
}
HV_FEEDBACKS_STATUS::HV_FEEDBACKS_STATUS(const HV_FEEDBACKS_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&feedbacks_status_, &from.feedbacks_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&feedbacks_status_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_FEEDBACKS_STATUS)
}

void HV_FEEDBACKS_STATUS::SharedCtor() {
  ::memset(&feedbacks_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&feedbacks_status_)) + sizeof(_inner_timestamp_));
}

HV_FEEDBACKS_STATUS::~HV_FEEDBACKS_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HV_FEEDBACKS_STATUS)
  SharedDtor();
}

void HV_FEEDBACKS_STATUS::SharedDtor() {
}

void HV_FEEDBACKS_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_FEEDBACKS_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_FEEDBACKS_STATUS& HV_FEEDBACKS_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_FEEDBACKS_STATUS.base);
  return *internal_default_instance();
}


void HV_FEEDBACKS_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_FEEDBACKS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&feedbacks_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&feedbacks_status_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_FEEDBACKS_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_FEEDBACKS_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 feedbacks_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &feedbacks_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_circuitry_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_circuitry_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_FEEDBACKS_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_FEEDBACKS_STATUS)
  return false;
#undef DO_
}

void HV_FEEDBACKS_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_FEEDBACKS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 feedbacks_status = 1;
  if (this->feedbacks_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->feedbacks_status(), output);
  }

  // uint32 is_circuitry_error = 2;
  if (this->is_circuitry_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->is_circuitry_error(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_FEEDBACKS_STATUS)
}

::google::protobuf::uint8* HV_FEEDBACKS_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_FEEDBACKS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 feedbacks_status = 1;
  if (this->feedbacks_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->feedbacks_status(), target);
  }

  // uint32 is_circuitry_error = 2;
  if (this->is_circuitry_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->is_circuitry_error(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_FEEDBACKS_STATUS)
  return target;
}

size_t HV_FEEDBACKS_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_FEEDBACKS_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 feedbacks_status = 1;
  if (this->feedbacks_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->feedbacks_status());
  }

  // uint32 is_circuitry_error = 2;
  if (this->is_circuitry_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_circuitry_error());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_FEEDBACKS_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_FEEDBACKS_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_FEEDBACKS_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_FEEDBACKS_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_FEEDBACKS_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_FEEDBACKS_STATUS)
    MergeFrom(*source);
  }
}

void HV_FEEDBACKS_STATUS::MergeFrom(const HV_FEEDBACKS_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_FEEDBACKS_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.feedbacks_status() != 0) {
    set_feedbacks_status(from.feedbacks_status());
  }
  if (from.is_circuitry_error() != 0) {
    set_is_circuitry_error(from.is_circuitry_error());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_FEEDBACKS_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_FEEDBACKS_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_FEEDBACKS_STATUS::CopyFrom(const HV_FEEDBACKS_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_FEEDBACKS_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_FEEDBACKS_STATUS::IsInitialized() const {
  return true;
}

void HV_FEEDBACKS_STATUS::Swap(HV_FEEDBACKS_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_FEEDBACKS_STATUS::InternalSwap(HV_FEEDBACKS_STATUS* other) {
  using std::swap;
  swap(feedbacks_status_, other->feedbacks_status_);
  swap(is_circuitry_error_, other->is_circuitry_error_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_FEEDBACKS_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_IMD_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_IMD_STATUS::kImdFaultFieldNumber;
const int HV_IMD_STATUS::kImdStatusFieldNumber;
const int HV_IMD_STATUS::kImdInfoFieldNumber;
const int HV_IMD_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_IMD_STATUS::HV_IMD_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_IMD_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_IMD_STATUS)
}
HV_IMD_STATUS::HV_IMD_STATUS(const HV_IMD_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&imd_fault_, &from.imd_fault_,
    static_cast<size_t>(reinterpret_cast<char*>(&imd_info_) -
    reinterpret_cast<char*>(&imd_fault_)) + sizeof(imd_info_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_IMD_STATUS)
}

void HV_IMD_STATUS::SharedCtor() {
  ::memset(&imd_fault_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imd_info_) -
      reinterpret_cast<char*>(&imd_fault_)) + sizeof(imd_info_));
}

HV_IMD_STATUS::~HV_IMD_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HV_IMD_STATUS)
  SharedDtor();
}

void HV_IMD_STATUS::SharedDtor() {
}

void HV_IMD_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_IMD_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_IMD_STATUS& HV_IMD_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_IMD_STATUS.base);
  return *internal_default_instance();
}


void HV_IMD_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_IMD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&imd_fault_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imd_info_) -
      reinterpret_cast<char*>(&imd_fault_)) + sizeof(imd_info_));
  _internal_metadata_.Clear();
}

bool HV_IMD_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_IMD_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool imd_fault = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &imd_fault_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .primary.ImdStatus imd_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_imd_status(static_cast< ::primary::ImdStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 imd_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &imd_info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_IMD_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_IMD_STATUS)
  return false;
#undef DO_
}

void HV_IMD_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_IMD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool imd_fault = 1;
  if (this->imd_fault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->imd_fault(), output);
  }

  // .primary.ImdStatus imd_status = 2;
  if (this->imd_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->imd_status(), output);
  }

  // sint32 imd_info = 3;
  if (this->imd_info() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->imd_info(), output);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_IMD_STATUS)
}

::google::protobuf::uint8* HV_IMD_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_IMD_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool imd_fault = 1;
  if (this->imd_fault() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->imd_fault(), target);
  }

  // .primary.ImdStatus imd_status = 2;
  if (this->imd_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->imd_status(), target);
  }

  // sint32 imd_info = 3;
  if (this->imd_info() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->imd_info(), target);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_IMD_STATUS)
  return target;
}

size_t HV_IMD_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_IMD_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool imd_fault = 1;
  if (this->imd_fault() != 0) {
    total_size += 1 + 1;
  }

  // .primary.ImdStatus imd_status = 2;
  if (this->imd_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->imd_status());
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // sint32 imd_info = 3;
  if (this->imd_info() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->imd_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_IMD_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_IMD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_IMD_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_IMD_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_IMD_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_IMD_STATUS)
    MergeFrom(*source);
  }
}

void HV_IMD_STATUS::MergeFrom(const HV_IMD_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_IMD_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imd_fault() != 0) {
    set_imd_fault(from.imd_fault());
  }
  if (from.imd_status() != 0) {
    set_imd_status(from.imd_status());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.imd_info() != 0) {
    set_imd_info(from.imd_info());
  }
}

void HV_IMD_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_IMD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_IMD_STATUS::CopyFrom(const HV_IMD_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_IMD_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_IMD_STATUS::IsInitialized() const {
  return true;
}

void HV_IMD_STATUS::Swap(HV_IMD_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_IMD_STATUS::InternalSwap(HV_IMD_STATUS* other) {
  using std::swap;
  swap(imd_fault_, other->imd_fault_);
  swap(imd_status_, other->imd_status_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(imd_info_, other->imd_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_IMD_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TS_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TS_STATUS::kTsStatusFieldNumber;
const int TS_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TS_STATUS::TS_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_TS_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.TS_STATUS)
}
TS_STATUS::TS_STATUS(const TS_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ts_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_));
  // @@protoc_insertion_point(copy_constructor:primary.TS_STATUS)
}

void TS_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_));
}

TS_STATUS::~TS_STATUS() {
  // @@protoc_insertion_point(destructor:primary.TS_STATUS)
  SharedDtor();
}

void TS_STATUS::SharedDtor() {
}

void TS_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TS_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TS_STATUS& TS_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_TS_STATUS.base);
  return *internal_default_instance();
}


void TS_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.TS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_));
  _internal_metadata_.Clear();
}

bool TS_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.TS_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.TsStatus ts_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ts_status(static_cast< ::primary::TsStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.TS_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.TS_STATUS)
  return false;
#undef DO_
}

void TS_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.TS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.TsStatus ts_status = 1;
  if (this->ts_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ts_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.TS_STATUS)
}

::google::protobuf::uint8* TS_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.TS_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.TsStatus ts_status = 1;
  if (this->ts_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ts_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.TS_STATUS)
  return target;
}

size_t TS_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.TS_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.TsStatus ts_status = 1;
  if (this->ts_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ts_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TS_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.TS_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const TS_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TS_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.TS_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.TS_STATUS)
    MergeFrom(*source);
  }
}

void TS_STATUS::MergeFrom(const TS_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.TS_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.ts_status() != 0) {
    set_ts_status(from.ts_status());
  }
}

void TS_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.TS_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TS_STATUS::CopyFrom(const TS_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.TS_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TS_STATUS::IsInitialized() const {
  return true;
}

void TS_STATUS::Swap(TS_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TS_STATUS::InternalSwap(TS_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(ts_status_, other->ts_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TS_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_TS_STATUS_DAS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_TS_STATUS_DAS::kTsStatusSetFieldNumber;
const int SET_TS_STATUS_DAS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_TS_STATUS_DAS::SET_TS_STATUS_DAS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_TS_STATUS_DAS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_TS_STATUS_DAS)
}
SET_TS_STATUS_DAS::SET_TS_STATUS_DAS(const SET_TS_STATUS_DAS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ts_status_set_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_TS_STATUS_DAS)
}

void SET_TS_STATUS_DAS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
}

SET_TS_STATUS_DAS::~SET_TS_STATUS_DAS() {
  // @@protoc_insertion_point(destructor:primary.SET_TS_STATUS_DAS)
  SharedDtor();
}

void SET_TS_STATUS_DAS::SharedDtor() {
}

void SET_TS_STATUS_DAS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_TS_STATUS_DAS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_TS_STATUS_DAS& SET_TS_STATUS_DAS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_TS_STATUS_DAS.base);
  return *internal_default_instance();
}


void SET_TS_STATUS_DAS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_TS_STATUS_DAS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
  _internal_metadata_.Clear();
}

bool SET_TS_STATUS_DAS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_TS_STATUS_DAS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle ts_status_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ts_status_set(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_TS_STATUS_DAS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_TS_STATUS_DAS)
  return false;
#undef DO_
}

void SET_TS_STATUS_DAS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_TS_STATUS_DAS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ts_status_set(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_TS_STATUS_DAS)
}

::google::protobuf::uint8* SET_TS_STATUS_DAS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_TS_STATUS_DAS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ts_status_set(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_TS_STATUS_DAS)
  return target;
}

size_t SET_TS_STATUS_DAS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_TS_STATUS_DAS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ts_status_set());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_TS_STATUS_DAS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_TS_STATUS_DAS)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_TS_STATUS_DAS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_TS_STATUS_DAS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_TS_STATUS_DAS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_TS_STATUS_DAS)
    MergeFrom(*source);
  }
}

void SET_TS_STATUS_DAS::MergeFrom(const SET_TS_STATUS_DAS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_TS_STATUS_DAS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.ts_status_set() != 0) {
    set_ts_status_set(from.ts_status_set());
  }
}

void SET_TS_STATUS_DAS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_TS_STATUS_DAS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_TS_STATUS_DAS::CopyFrom(const SET_TS_STATUS_DAS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_TS_STATUS_DAS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_TS_STATUS_DAS::IsInitialized() const {
  return true;
}

void SET_TS_STATUS_DAS::Swap(SET_TS_STATUS_DAS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_TS_STATUS_DAS::InternalSwap(SET_TS_STATUS_DAS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(ts_status_set_, other->ts_status_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_TS_STATUS_DAS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_TS_STATUS_HANDCART::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_TS_STATUS_HANDCART::kTsStatusSetFieldNumber;
const int SET_TS_STATUS_HANDCART::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_TS_STATUS_HANDCART::SET_TS_STATUS_HANDCART()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_TS_STATUS_HANDCART.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_TS_STATUS_HANDCART)
}
SET_TS_STATUS_HANDCART::SET_TS_STATUS_HANDCART(const SET_TS_STATUS_HANDCART& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ts_status_set_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_TS_STATUS_HANDCART)
}

void SET_TS_STATUS_HANDCART::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
}

SET_TS_STATUS_HANDCART::~SET_TS_STATUS_HANDCART() {
  // @@protoc_insertion_point(destructor:primary.SET_TS_STATUS_HANDCART)
  SharedDtor();
}

void SET_TS_STATUS_HANDCART::SharedDtor() {
}

void SET_TS_STATUS_HANDCART::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_TS_STATUS_HANDCART::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_TS_STATUS_HANDCART& SET_TS_STATUS_HANDCART::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_TS_STATUS_HANDCART.base);
  return *internal_default_instance();
}


void SET_TS_STATUS_HANDCART::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_TS_STATUS_HANDCART)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ts_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(ts_status_set_));
  _internal_metadata_.Clear();
}

bool SET_TS_STATUS_HANDCART::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_TS_STATUS_HANDCART)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle ts_status_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ts_status_set(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_TS_STATUS_HANDCART)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_TS_STATUS_HANDCART)
  return false;
#undef DO_
}

void SET_TS_STATUS_HANDCART::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_TS_STATUS_HANDCART)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ts_status_set(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_TS_STATUS_HANDCART)
}

::google::protobuf::uint8* SET_TS_STATUS_HANDCART::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_TS_STATUS_HANDCART)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ts_status_set(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_TS_STATUS_HANDCART)
  return target;
}

size_t SET_TS_STATUS_HANDCART::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_TS_STATUS_HANDCART)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle ts_status_set = 1;
  if (this->ts_status_set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ts_status_set());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_TS_STATUS_HANDCART::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_TS_STATUS_HANDCART)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_TS_STATUS_HANDCART* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_TS_STATUS_HANDCART>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_TS_STATUS_HANDCART)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_TS_STATUS_HANDCART)
    MergeFrom(*source);
  }
}

void SET_TS_STATUS_HANDCART::MergeFrom(const SET_TS_STATUS_HANDCART& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_TS_STATUS_HANDCART)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.ts_status_set() != 0) {
    set_ts_status_set(from.ts_status_set());
  }
}

void SET_TS_STATUS_HANDCART::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_TS_STATUS_HANDCART)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_TS_STATUS_HANDCART::CopyFrom(const SET_TS_STATUS_HANDCART& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_TS_STATUS_HANDCART)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_TS_STATUS_HANDCART::IsInitialized() const {
  return true;
}

void SET_TS_STATUS_HANDCART::Swap(SET_TS_STATUS_HANDCART* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_TS_STATUS_HANDCART::InternalSwap(SET_TS_STATUS_HANDCART* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(ts_status_set_, other->ts_status_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_TS_STATUS_HANDCART::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STEER_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STEER_STATUS::kTractionControlFieldNumber;
const int STEER_STATUS::kMapFieldNumber;
const int STEER_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STEER_STATUS::STEER_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_STEER_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.STEER_STATUS)
}
STEER_STATUS::STEER_STATUS(const STEER_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&traction_control_, &from.traction_control_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&traction_control_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.STEER_STATUS)
}

void STEER_STATUS::SharedCtor() {
  ::memset(&traction_control_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&traction_control_)) + sizeof(_inner_timestamp_));
}

STEER_STATUS::~STEER_STATUS() {
  // @@protoc_insertion_point(destructor:primary.STEER_STATUS)
  SharedDtor();
}

void STEER_STATUS::SharedDtor() {
}

void STEER_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* STEER_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STEER_STATUS& STEER_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_STEER_STATUS.base);
  return *internal_default_instance();
}


void STEER_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.STEER_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&traction_control_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&traction_control_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool STEER_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.STEER_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.TractionControl traction_control = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_traction_control(static_cast< ::primary::TractionControl >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .primary.Map map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_map(static_cast< ::primary::Map >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.STEER_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.STEER_STATUS)
  return false;
#undef DO_
}

void STEER_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.STEER_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.TractionControl traction_control = 1;
  if (this->traction_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->traction_control(), output);
  }

  // .primary.Map map = 2;
  if (this->map() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->map(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.STEER_STATUS)
}

::google::protobuf::uint8* STEER_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.STEER_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.TractionControl traction_control = 1;
  if (this->traction_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->traction_control(), target);
  }

  // .primary.Map map = 2;
  if (this->map() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->map(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.STEER_STATUS)
  return target;
}

size_t STEER_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.STEER_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .primary.TractionControl traction_control = 1;
  if (this->traction_control() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->traction_control());
  }

  // .primary.Map map = 2;
  if (this->map() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->map());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STEER_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.STEER_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const STEER_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STEER_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.STEER_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.STEER_STATUS)
    MergeFrom(*source);
  }
}

void STEER_STATUS::MergeFrom(const STEER_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.STEER_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.traction_control() != 0) {
    set_traction_control(from.traction_control());
  }
  if (from.map() != 0) {
    set_map(from.map());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void STEER_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.STEER_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STEER_STATUS::CopyFrom(const STEER_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.STEER_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STEER_STATUS::IsInitialized() const {
  return true;
}

void STEER_STATUS::Swap(STEER_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STEER_STATUS::InternalSwap(STEER_STATUS* other) {
  using std::swap;
  swap(traction_control_, other->traction_control_);
  swap(map_, other->map_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata STEER_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_CAR_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_CAR_STATUS::kCarStatusSetFieldNumber;
const int SET_CAR_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_CAR_STATUS::SET_CAR_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_CAR_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_CAR_STATUS)
}
SET_CAR_STATUS::SET_CAR_STATUS(const SET_CAR_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&car_status_set_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(car_status_set_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_CAR_STATUS)
}

void SET_CAR_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(car_status_set_));
}

SET_CAR_STATUS::~SET_CAR_STATUS() {
  // @@protoc_insertion_point(destructor:primary.SET_CAR_STATUS)
  SharedDtor();
}

void SET_CAR_STATUS::SharedDtor() {
}

void SET_CAR_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_CAR_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_CAR_STATUS& SET_CAR_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_CAR_STATUS.base);
  return *internal_default_instance();
}


void SET_CAR_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_status_set_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(car_status_set_));
  _internal_metadata_.Clear();
}

bool SET_CAR_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_CAR_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.SetCarStatus car_status_set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_car_status_set(static_cast< ::primary::SetCarStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_CAR_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_CAR_STATUS)
  return false;
#undef DO_
}

void SET_CAR_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.SetCarStatus car_status_set = 1;
  if (this->car_status_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->car_status_set(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_CAR_STATUS)
}

::google::protobuf::uint8* SET_CAR_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.SetCarStatus car_status_set = 1;
  if (this->car_status_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->car_status_set(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_CAR_STATUS)
  return target;
}

size_t SET_CAR_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_CAR_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.SetCarStatus car_status_set = 1;
  if (this->car_status_set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->car_status_set());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_CAR_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_CAR_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_CAR_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_CAR_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_CAR_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_CAR_STATUS)
    MergeFrom(*source);
  }
}

void SET_CAR_STATUS::MergeFrom(const SET_CAR_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_CAR_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.car_status_set() != 0) {
    set_car_status_set(from.car_status_set());
  }
}

void SET_CAR_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_CAR_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_CAR_STATUS::CopyFrom(const SET_CAR_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_CAR_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_CAR_STATUS::IsInitialized() const {
  return true;
}

void SET_CAR_STATUS::Swap(SET_CAR_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_CAR_STATUS::InternalSwap(SET_CAR_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(car_status_set_, other->car_status_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_CAR_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_PEDALS_RANGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_PEDALS_RANGE::kBoundFieldNumber;
const int SET_PEDALS_RANGE::kPedalFieldNumber;
const int SET_PEDALS_RANGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_PEDALS_RANGE::SET_PEDALS_RANGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_PEDALS_RANGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_PEDALS_RANGE)
}
SET_PEDALS_RANGE::SET_PEDALS_RANGE(const SET_PEDALS_RANGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bound_, &from.bound_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&bound_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_PEDALS_RANGE)
}

void SET_PEDALS_RANGE::SharedCtor() {
  ::memset(&bound_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&bound_)) + sizeof(_inner_timestamp_));
}

SET_PEDALS_RANGE::~SET_PEDALS_RANGE() {
  // @@protoc_insertion_point(destructor:primary.SET_PEDALS_RANGE)
  SharedDtor();
}

void SET_PEDALS_RANGE::SharedDtor() {
}

void SET_PEDALS_RANGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_PEDALS_RANGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_PEDALS_RANGE& SET_PEDALS_RANGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_PEDALS_RANGE.base);
  return *internal_default_instance();
}


void SET_PEDALS_RANGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_PEDALS_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bound_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&bound_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool SET_PEDALS_RANGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_PEDALS_RANGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Bound bound = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bound(static_cast< ::primary::Bound >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .primary.Pedal pedal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pedal(static_cast< ::primary::Pedal >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_PEDALS_RANGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_PEDALS_RANGE)
  return false;
#undef DO_
}

void SET_PEDALS_RANGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_PEDALS_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->bound(), output);
  }

  // .primary.Pedal pedal = 2;
  if (this->pedal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->pedal(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_PEDALS_RANGE)
}

::google::protobuf::uint8* SET_PEDALS_RANGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_PEDALS_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->bound(), target);
  }

  // .primary.Pedal pedal = 2;
  if (this->pedal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->pedal(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_PEDALS_RANGE)
  return target;
}

size_t SET_PEDALS_RANGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_PEDALS_RANGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bound());
  }

  // .primary.Pedal pedal = 2;
  if (this->pedal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pedal());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_PEDALS_RANGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_PEDALS_RANGE)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_PEDALS_RANGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_PEDALS_RANGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_PEDALS_RANGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_PEDALS_RANGE)
    MergeFrom(*source);
  }
}

void SET_PEDALS_RANGE::MergeFrom(const SET_PEDALS_RANGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_PEDALS_RANGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bound() != 0) {
    set_bound(from.bound());
  }
  if (from.pedal() != 0) {
    set_pedal(from.pedal());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void SET_PEDALS_RANGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_PEDALS_RANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_PEDALS_RANGE::CopyFrom(const SET_PEDALS_RANGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_PEDALS_RANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_PEDALS_RANGE::IsInitialized() const {
  return true;
}

void SET_PEDALS_RANGE::Swap(SET_PEDALS_RANGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_PEDALS_RANGE::InternalSwap(SET_PEDALS_RANGE* other) {
  using std::swap;
  swap(bound_, other->bound_);
  swap(pedal_, other->pedal_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_PEDALS_RANGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_STEERING_ANGLE_RANGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_STEERING_ANGLE_RANGE::kBoundFieldNumber;
const int SET_STEERING_ANGLE_RANGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_STEERING_ANGLE_RANGE::SET_STEERING_ANGLE_RANGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_STEERING_ANGLE_RANGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_STEERING_ANGLE_RANGE)
}
SET_STEERING_ANGLE_RANGE::SET_STEERING_ANGLE_RANGE(const SET_STEERING_ANGLE_RANGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&bound_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(bound_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_STEERING_ANGLE_RANGE)
}

void SET_STEERING_ANGLE_RANGE::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bound_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(bound_));
}

SET_STEERING_ANGLE_RANGE::~SET_STEERING_ANGLE_RANGE() {
  // @@protoc_insertion_point(destructor:primary.SET_STEERING_ANGLE_RANGE)
  SharedDtor();
}

void SET_STEERING_ANGLE_RANGE::SharedDtor() {
}

void SET_STEERING_ANGLE_RANGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_STEERING_ANGLE_RANGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_STEERING_ANGLE_RANGE& SET_STEERING_ANGLE_RANGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_STEERING_ANGLE_RANGE.base);
  return *internal_default_instance();
}


void SET_STEERING_ANGLE_RANGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_STEERING_ANGLE_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bound_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(bound_));
  _internal_metadata_.Clear();
}

bool SET_STEERING_ANGLE_RANGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_STEERING_ANGLE_RANGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Bound bound = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bound(static_cast< ::primary::Bound >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_STEERING_ANGLE_RANGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_STEERING_ANGLE_RANGE)
  return false;
#undef DO_
}

void SET_STEERING_ANGLE_RANGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_STEERING_ANGLE_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->bound(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_STEERING_ANGLE_RANGE)
}

::google::protobuf::uint8* SET_STEERING_ANGLE_RANGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_STEERING_ANGLE_RANGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->bound(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_STEERING_ANGLE_RANGE)
  return target;
}

size_t SET_STEERING_ANGLE_RANGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_STEERING_ANGLE_RANGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Bound bound = 1;
  if (this->bound() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bound());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_STEERING_ANGLE_RANGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_STEERING_ANGLE_RANGE)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_STEERING_ANGLE_RANGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_STEERING_ANGLE_RANGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_STEERING_ANGLE_RANGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_STEERING_ANGLE_RANGE)
    MergeFrom(*source);
  }
}

void SET_STEERING_ANGLE_RANGE::MergeFrom(const SET_STEERING_ANGLE_RANGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_STEERING_ANGLE_RANGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.bound() != 0) {
    set_bound(from.bound());
  }
}

void SET_STEERING_ANGLE_RANGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_STEERING_ANGLE_RANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_STEERING_ANGLE_RANGE::CopyFrom(const SET_STEERING_ANGLE_RANGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_STEERING_ANGLE_RANGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_STEERING_ANGLE_RANGE::IsInitialized() const {
  return true;
}

void SET_STEERING_ANGLE_RANGE::Swap(SET_STEERING_ANGLE_RANGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_STEERING_ANGLE_RANGE::InternalSwap(SET_STEERING_ANGLE_RANGE* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(bound_, other->bound_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_STEERING_ANGLE_RANGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CAR_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAR_STATUS::kInverterLFieldNumber;
const int CAR_STATUS::kInverterRFieldNumber;
const int CAR_STATUS::kCarStatusFieldNumber;
const int CAR_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAR_STATUS::CAR_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_CAR_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.CAR_STATUS)
}
CAR_STATUS::CAR_STATUS(const CAR_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&inverter_l_, &from.inverter_l_,
    static_cast<size_t>(reinterpret_cast<char*>(&car_status_) -
    reinterpret_cast<char*>(&inverter_l_)) + sizeof(car_status_));
  // @@protoc_insertion_point(copy_constructor:primary.CAR_STATUS)
}

void CAR_STATUS::SharedCtor() {
  ::memset(&inverter_l_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_status_) -
      reinterpret_cast<char*>(&inverter_l_)) + sizeof(car_status_));
}

CAR_STATUS::~CAR_STATUS() {
  // @@protoc_insertion_point(destructor:primary.CAR_STATUS)
  SharedDtor();
}

void CAR_STATUS::SharedDtor() {
}

void CAR_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CAR_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CAR_STATUS& CAR_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_CAR_STATUS.base);
  return *internal_default_instance();
}


void CAR_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&inverter_l_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&car_status_) -
      reinterpret_cast<char*>(&inverter_l_)) + sizeof(car_status_));
  _internal_metadata_.Clear();
}

bool CAR_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.CAR_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.InverterStatus inverter_l = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_inverter_l(static_cast< ::primary::InverterStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .primary.InverterStatus inverter_r = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_inverter_r(static_cast< ::primary::InverterStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .primary.CarStatus car_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_car_status(static_cast< ::primary::CarStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.CAR_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.CAR_STATUS)
  return false;
#undef DO_
}

void CAR_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.InverterStatus inverter_l = 1;
  if (this->inverter_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->inverter_l(), output);
  }

  // .primary.InverterStatus inverter_r = 2;
  if (this->inverter_r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->inverter_r(), output);
  }

  // .primary.CarStatus car_status = 3;
  if (this->car_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->car_status(), output);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.CAR_STATUS)
}

::google::protobuf::uint8* CAR_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.CAR_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.InverterStatus inverter_l = 1;
  if (this->inverter_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->inverter_l(), target);
  }

  // .primary.InverterStatus inverter_r = 2;
  if (this->inverter_r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->inverter_r(), target);
  }

  // .primary.CarStatus car_status = 3;
  if (this->car_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->car_status(), target);
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.CAR_STATUS)
  return target;
}

size_t CAR_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.CAR_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .primary.InverterStatus inverter_l = 1;
  if (this->inverter_l() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->inverter_l());
  }

  // .primary.InverterStatus inverter_r = 2;
  if (this->inverter_r() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->inverter_r());
  }

  // uint64 _inner_timestamp = 4;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.CarStatus car_status = 3;
  if (this->car_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->car_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CAR_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.CAR_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const CAR_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAR_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.CAR_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.CAR_STATUS)
    MergeFrom(*source);
  }
}

void CAR_STATUS::MergeFrom(const CAR_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.CAR_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.inverter_l() != 0) {
    set_inverter_l(from.inverter_l());
  }
  if (from.inverter_r() != 0) {
    set_inverter_r(from.inverter_r());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.car_status() != 0) {
    set_car_status(from.car_status());
  }
}

void CAR_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.CAR_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAR_STATUS::CopyFrom(const CAR_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.CAR_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAR_STATUS::IsInitialized() const {
  return true;
}

void CAR_STATUS::Swap(CAR_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAR_STATUS::InternalSwap(CAR_STATUS* other) {
  using std::swap;
  swap(inverter_l_, other->inverter_l_);
  swap(inverter_r_, other->inverter_r_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(car_status_, other->car_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CAR_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DAS_ERRORS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DAS_ERRORS::kDasErrorFieldNumber;
const int DAS_ERRORS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DAS_ERRORS::DAS_ERRORS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_DAS_ERRORS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.DAS_ERRORS)
}
DAS_ERRORS::DAS_ERRORS(const DAS_ERRORS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&das_error_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(das_error_));
  // @@protoc_insertion_point(copy_constructor:primary.DAS_ERRORS)
}

void DAS_ERRORS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&das_error_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(das_error_));
}

DAS_ERRORS::~DAS_ERRORS() {
  // @@protoc_insertion_point(destructor:primary.DAS_ERRORS)
  SharedDtor();
}

void DAS_ERRORS::SharedDtor() {
}

void DAS_ERRORS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DAS_ERRORS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DAS_ERRORS& DAS_ERRORS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_DAS_ERRORS.base);
  return *internal_default_instance();
}


void DAS_ERRORS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.DAS_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&das_error_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(das_error_));
  _internal_metadata_.Clear();
}

bool DAS_ERRORS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.DAS_ERRORS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 das_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &das_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.DAS_ERRORS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.DAS_ERRORS)
  return false;
#undef DO_
}

void DAS_ERRORS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.DAS_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 das_error = 1;
  if (this->das_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->das_error(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.DAS_ERRORS)
}

::google::protobuf::uint8* DAS_ERRORS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.DAS_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 das_error = 1;
  if (this->das_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->das_error(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.DAS_ERRORS)
  return target;
}

size_t DAS_ERRORS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.DAS_ERRORS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // uint32 das_error = 1;
  if (this->das_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->das_error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DAS_ERRORS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.DAS_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  const DAS_ERRORS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DAS_ERRORS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.DAS_ERRORS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.DAS_ERRORS)
    MergeFrom(*source);
  }
}

void DAS_ERRORS::MergeFrom(const DAS_ERRORS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.DAS_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.das_error() != 0) {
    set_das_error(from.das_error());
  }
}

void DAS_ERRORS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.DAS_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DAS_ERRORS::CopyFrom(const DAS_ERRORS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.DAS_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DAS_ERRORS::IsInitialized() const {
  return true;
}

void DAS_ERRORS::Swap(DAS_ERRORS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DAS_ERRORS::InternalSwap(DAS_ERRORS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(das_error_, other->das_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DAS_ERRORS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_CURRENT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_CURRENT::kCurrentFieldNumber;
const int LV_CURRENT::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_CURRENT::LV_CURRENT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_CURRENT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_CURRENT)
}
LV_CURRENT::LV_CURRENT(const LV_CURRENT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(current_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_CURRENT)
}

void LV_CURRENT::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(current_));
}

LV_CURRENT::~LV_CURRENT() {
  // @@protoc_insertion_point(destructor:primary.LV_CURRENT)
  SharedDtor();
}

void LV_CURRENT::SharedDtor() {
}

void LV_CURRENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_CURRENT::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_CURRENT& LV_CURRENT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_CURRENT.base);
  return *internal_default_instance();
}


void LV_CURRENT::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(current_));
  _internal_metadata_.Clear();
}

bool LV_CURRENT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_CURRENT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float current = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_CURRENT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_CURRENT)
  return false;
#undef DO_
}

void LV_CURRENT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float current = 1;
  if (this->current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->current(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_CURRENT)
}

::google::protobuf::uint8* LV_CURRENT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_CURRENT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float current = 1;
  if (this->current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->current(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_CURRENT)
  return target;
}

size_t LV_CURRENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_CURRENT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float current = 1;
  if (this->current() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_CURRENT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_CURRENT)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_CURRENT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_CURRENT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_CURRENT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_CURRENT)
    MergeFrom(*source);
  }
}

void LV_CURRENT::MergeFrom(const LV_CURRENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_CURRENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.current() != 0) {
    set_current(from.current());
  }
}

void LV_CURRENT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_CURRENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_CURRENT::CopyFrom(const LV_CURRENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_CURRENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_CURRENT::IsInitialized() const {
  return true;
}

void LV_CURRENT::Swap(LV_CURRENT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_CURRENT::InternalSwap(LV_CURRENT* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(current_, other->current_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_CURRENT::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_VOLTAGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_VOLTAGE::kVoltage1FieldNumber;
const int LV_VOLTAGE::kVoltage2FieldNumber;
const int LV_VOLTAGE::kVoltage3FieldNumber;
const int LV_VOLTAGE::kVoltage4FieldNumber;
const int LV_VOLTAGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_VOLTAGE::LV_VOLTAGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_VOLTAGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_VOLTAGE)
}
LV_VOLTAGE::LV_VOLTAGE(const LV_VOLTAGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&voltage_1_, &from.voltage_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&voltage_1_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_VOLTAGE)
}

void LV_VOLTAGE::SharedCtor() {
  ::memset(&voltage_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage_1_)) + sizeof(_inner_timestamp_));
}

LV_VOLTAGE::~LV_VOLTAGE() {
  // @@protoc_insertion_point(destructor:primary.LV_VOLTAGE)
  SharedDtor();
}

void LV_VOLTAGE::SharedDtor() {
}

void LV_VOLTAGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_VOLTAGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_VOLTAGE& LV_VOLTAGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_VOLTAGE.base);
  return *internal_default_instance();
}


void LV_VOLTAGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voltage_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&voltage_1_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool LV_VOLTAGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_VOLTAGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float voltage_1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_VOLTAGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_VOLTAGE)
  return false;
#undef DO_
}

void LV_VOLTAGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float voltage_1 = 1;
  if (this->voltage_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->voltage_1(), output);
  }

  // float voltage_2 = 2;
  if (this->voltage_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->voltage_2(), output);
  }

  // float voltage_3 = 3;
  if (this->voltage_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->voltage_3(), output);
  }

  // float voltage_4 = 4;
  if (this->voltage_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->voltage_4(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_VOLTAGE)
}

::google::protobuf::uint8* LV_VOLTAGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float voltage_1 = 1;
  if (this->voltage_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->voltage_1(), target);
  }

  // float voltage_2 = 2;
  if (this->voltage_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->voltage_2(), target);
  }

  // float voltage_3 = 3;
  if (this->voltage_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->voltage_3(), target);
  }

  // float voltage_4 = 4;
  if (this->voltage_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->voltage_4(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_VOLTAGE)
  return target;
}

size_t LV_VOLTAGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_VOLTAGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float voltage_1 = 1;
  if (this->voltage_1() != 0) {
    total_size += 1 + 4;
  }

  // float voltage_2 = 2;
  if (this->voltage_2() != 0) {
    total_size += 1 + 4;
  }

  // float voltage_3 = 3;
  if (this->voltage_3() != 0) {
    total_size += 1 + 4;
  }

  // float voltage_4 = 4;
  if (this->voltage_4() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_VOLTAGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_VOLTAGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_VOLTAGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_VOLTAGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_VOLTAGE)
    MergeFrom(*source);
  }
}

void LV_VOLTAGE::MergeFrom(const LV_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.voltage_1() != 0) {
    set_voltage_1(from.voltage_1());
  }
  if (from.voltage_2() != 0) {
    set_voltage_2(from.voltage_2());
  }
  if (from.voltage_3() != 0) {
    set_voltage_3(from.voltage_3());
  }
  if (from.voltage_4() != 0) {
    set_voltage_4(from.voltage_4());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void LV_VOLTAGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_VOLTAGE::CopyFrom(const LV_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_VOLTAGE::IsInitialized() const {
  return true;
}

void LV_VOLTAGE::Swap(LV_VOLTAGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_VOLTAGE::InternalSwap(LV_VOLTAGE* other) {
  using std::swap;
  swap(voltage_1_, other->voltage_1_);
  swap(voltage_2_, other->voltage_2_);
  swap(voltage_3_, other->voltage_3_);
  swap(voltage_4_, other->voltage_4_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_VOLTAGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_TOTAL_VOLTAGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_TOTAL_VOLTAGE::kTotalVoltageFieldNumber;
const int LV_TOTAL_VOLTAGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_TOTAL_VOLTAGE::LV_TOTAL_VOLTAGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_TOTAL_VOLTAGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_TOTAL_VOLTAGE)
}
LV_TOTAL_VOLTAGE::LV_TOTAL_VOLTAGE(const LV_TOTAL_VOLTAGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_voltage_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(total_voltage_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_TOTAL_VOLTAGE)
}

void LV_TOTAL_VOLTAGE::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_voltage_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(total_voltage_));
}

LV_TOTAL_VOLTAGE::~LV_TOTAL_VOLTAGE() {
  // @@protoc_insertion_point(destructor:primary.LV_TOTAL_VOLTAGE)
  SharedDtor();
}

void LV_TOTAL_VOLTAGE::SharedDtor() {
}

void LV_TOTAL_VOLTAGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_TOTAL_VOLTAGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_TOTAL_VOLTAGE& LV_TOTAL_VOLTAGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_TOTAL_VOLTAGE.base);
  return *internal_default_instance();
}


void LV_TOTAL_VOLTAGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_TOTAL_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_voltage_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(total_voltage_));
  _internal_metadata_.Clear();
}

bool LV_TOTAL_VOLTAGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_TOTAL_VOLTAGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float total_voltage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &total_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_TOTAL_VOLTAGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_TOTAL_VOLTAGE)
  return false;
#undef DO_
}

void LV_TOTAL_VOLTAGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_TOTAL_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float total_voltage = 1;
  if (this->total_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->total_voltage(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_TOTAL_VOLTAGE)
}

::google::protobuf::uint8* LV_TOTAL_VOLTAGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_TOTAL_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float total_voltage = 1;
  if (this->total_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->total_voltage(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_TOTAL_VOLTAGE)
  return target;
}

size_t LV_TOTAL_VOLTAGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_TOTAL_VOLTAGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float total_voltage = 1;
  if (this->total_voltage() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_TOTAL_VOLTAGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_TOTAL_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_TOTAL_VOLTAGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_TOTAL_VOLTAGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_TOTAL_VOLTAGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_TOTAL_VOLTAGE)
    MergeFrom(*source);
  }
}

void LV_TOTAL_VOLTAGE::MergeFrom(const LV_TOTAL_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_TOTAL_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.total_voltage() != 0) {
    set_total_voltage(from.total_voltage());
  }
}

void LV_TOTAL_VOLTAGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_TOTAL_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_TOTAL_VOLTAGE::CopyFrom(const LV_TOTAL_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_TOTAL_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_TOTAL_VOLTAGE::IsInitialized() const {
  return true;
}

void LV_TOTAL_VOLTAGE::Swap(LV_TOTAL_VOLTAGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_TOTAL_VOLTAGE::InternalSwap(LV_TOTAL_VOLTAGE* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(total_voltage_, other->total_voltage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_TOTAL_VOLTAGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_TEMPERATURE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_TEMPERATURE::kBpTemperature1FieldNumber;
const int LV_TEMPERATURE::kBpTemperature2FieldNumber;
const int LV_TEMPERATURE::kDcdc12TemperatureFieldNumber;
const int LV_TEMPERATURE::kDcdc24TemperatureFieldNumber;
const int LV_TEMPERATURE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_TEMPERATURE::LV_TEMPERATURE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_TEMPERATURE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_TEMPERATURE)
}
LV_TEMPERATURE::LV_TEMPERATURE(const LV_TEMPERATURE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bp_temperature_1_, &from.bp_temperature_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&bp_temperature_1_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_TEMPERATURE)
}

void LV_TEMPERATURE::SharedCtor() {
  ::memset(&bp_temperature_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&bp_temperature_1_)) + sizeof(_inner_timestamp_));
}

LV_TEMPERATURE::~LV_TEMPERATURE() {
  // @@protoc_insertion_point(destructor:primary.LV_TEMPERATURE)
  SharedDtor();
}

void LV_TEMPERATURE::SharedDtor() {
}

void LV_TEMPERATURE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_TEMPERATURE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_TEMPERATURE& LV_TEMPERATURE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_TEMPERATURE.base);
  return *internal_default_instance();
}


void LV_TEMPERATURE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_TEMPERATURE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bp_temperature_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&bp_temperature_1_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool LV_TEMPERATURE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_TEMPERATURE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float bp_temperature_1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bp_temperature_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bp_temperature_2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bp_temperature_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dcdc12_temperature = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dcdc12_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dcdc24_temperature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dcdc24_temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_TEMPERATURE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_TEMPERATURE)
  return false;
#undef DO_
}

void LV_TEMPERATURE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_TEMPERATURE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float bp_temperature_1 = 1;
  if (this->bp_temperature_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->bp_temperature_1(), output);
  }

  // float bp_temperature_2 = 2;
  if (this->bp_temperature_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->bp_temperature_2(), output);
  }

  // float dcdc12_temperature = 3;
  if (this->dcdc12_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->dcdc12_temperature(), output);
  }

  // float dcdc24_temperature = 4;
  if (this->dcdc24_temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->dcdc24_temperature(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_TEMPERATURE)
}

::google::protobuf::uint8* LV_TEMPERATURE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_TEMPERATURE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float bp_temperature_1 = 1;
  if (this->bp_temperature_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->bp_temperature_1(), target);
  }

  // float bp_temperature_2 = 2;
  if (this->bp_temperature_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->bp_temperature_2(), target);
  }

  // float dcdc12_temperature = 3;
  if (this->dcdc12_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->dcdc12_temperature(), target);
  }

  // float dcdc24_temperature = 4;
  if (this->dcdc24_temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->dcdc24_temperature(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_TEMPERATURE)
  return target;
}

size_t LV_TEMPERATURE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_TEMPERATURE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float bp_temperature_1 = 1;
  if (this->bp_temperature_1() != 0) {
    total_size += 1 + 4;
  }

  // float bp_temperature_2 = 2;
  if (this->bp_temperature_2() != 0) {
    total_size += 1 + 4;
  }

  // float dcdc12_temperature = 3;
  if (this->dcdc12_temperature() != 0) {
    total_size += 1 + 4;
  }

  // float dcdc24_temperature = 4;
  if (this->dcdc24_temperature() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_TEMPERATURE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_TEMPERATURE)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_TEMPERATURE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_TEMPERATURE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_TEMPERATURE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_TEMPERATURE)
    MergeFrom(*source);
  }
}

void LV_TEMPERATURE::MergeFrom(const LV_TEMPERATURE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_TEMPERATURE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bp_temperature_1() != 0) {
    set_bp_temperature_1(from.bp_temperature_1());
  }
  if (from.bp_temperature_2() != 0) {
    set_bp_temperature_2(from.bp_temperature_2());
  }
  if (from.dcdc12_temperature() != 0) {
    set_dcdc12_temperature(from.dcdc12_temperature());
  }
  if (from.dcdc24_temperature() != 0) {
    set_dcdc24_temperature(from.dcdc24_temperature());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void LV_TEMPERATURE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_TEMPERATURE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_TEMPERATURE::CopyFrom(const LV_TEMPERATURE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_TEMPERATURE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_TEMPERATURE::IsInitialized() const {
  return true;
}

void LV_TEMPERATURE::Swap(LV_TEMPERATURE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_TEMPERATURE::InternalSwap(LV_TEMPERATURE* other) {
  using std::swap;
  swap(bp_temperature_1_, other->bp_temperature_1_);
  swap(bp_temperature_2_, other->bp_temperature_2_);
  swap(dcdc12_temperature_, other->dcdc12_temperature_);
  swap(dcdc24_temperature_, other->dcdc24_temperature_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_TEMPERATURE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void COOLING_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COOLING_STATUS::kRadiatorsSpeedFieldNumber;
const int COOLING_STATUS::kPumpsSpeedFieldNumber;
const int COOLING_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COOLING_STATUS::COOLING_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_COOLING_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.COOLING_STATUS)
}
COOLING_STATUS::COOLING_STATUS(const COOLING_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&radiators_speed_, &from.radiators_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&radiators_speed_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.COOLING_STATUS)
}

void COOLING_STATUS::SharedCtor() {
  ::memset(&radiators_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&radiators_speed_)) + sizeof(_inner_timestamp_));
}

COOLING_STATUS::~COOLING_STATUS() {
  // @@protoc_insertion_point(destructor:primary.COOLING_STATUS)
  SharedDtor();
}

void COOLING_STATUS::SharedDtor() {
}

void COOLING_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* COOLING_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const COOLING_STATUS& COOLING_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_COOLING_STATUS.base);
  return *internal_default_instance();
}


void COOLING_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.COOLING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&radiators_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&radiators_speed_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool COOLING_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.COOLING_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float radiators_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radiators_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pumps_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pumps_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.COOLING_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.COOLING_STATUS)
  return false;
#undef DO_
}

void COOLING_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.COOLING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->radiators_speed(), output);
  }

  // float pumps_speed = 2;
  if (this->pumps_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->pumps_speed(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.COOLING_STATUS)
}

::google::protobuf::uint8* COOLING_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.COOLING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->radiators_speed(), target);
  }

  // float pumps_speed = 2;
  if (this->pumps_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->pumps_speed(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.COOLING_STATUS)
  return target;
}

size_t COOLING_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.COOLING_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    total_size += 1 + 4;
  }

  // float pumps_speed = 2;
  if (this->pumps_speed() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COOLING_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.COOLING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const COOLING_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const COOLING_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.COOLING_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.COOLING_STATUS)
    MergeFrom(*source);
  }
}

void COOLING_STATUS::MergeFrom(const COOLING_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.COOLING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.radiators_speed() != 0) {
    set_radiators_speed(from.radiators_speed());
  }
  if (from.pumps_speed() != 0) {
    set_pumps_speed(from.pumps_speed());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void COOLING_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.COOLING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COOLING_STATUS::CopyFrom(const COOLING_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.COOLING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COOLING_STATUS::IsInitialized() const {
  return true;
}

void COOLING_STATUS::Swap(COOLING_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COOLING_STATUS::InternalSwap(COOLING_STATUS* other) {
  using std::swap;
  swap(radiators_speed_, other->radiators_speed_);
  swap(pumps_speed_, other->pumps_speed_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata COOLING_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_RADIATOR_SPEED::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_RADIATOR_SPEED::kRadiatorsSpeedFieldNumber;
const int SET_RADIATOR_SPEED::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_RADIATOR_SPEED::SET_RADIATOR_SPEED()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_RADIATOR_SPEED.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_RADIATOR_SPEED)
}
SET_RADIATOR_SPEED::SET_RADIATOR_SPEED(const SET_RADIATOR_SPEED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&radiators_speed_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(radiators_speed_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_RADIATOR_SPEED)
}

void SET_RADIATOR_SPEED::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radiators_speed_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(radiators_speed_));
}

SET_RADIATOR_SPEED::~SET_RADIATOR_SPEED() {
  // @@protoc_insertion_point(destructor:primary.SET_RADIATOR_SPEED)
  SharedDtor();
}

void SET_RADIATOR_SPEED::SharedDtor() {
}

void SET_RADIATOR_SPEED::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_RADIATOR_SPEED::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_RADIATOR_SPEED& SET_RADIATOR_SPEED::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_RADIATOR_SPEED.base);
  return *internal_default_instance();
}


void SET_RADIATOR_SPEED::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_RADIATOR_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&radiators_speed_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(radiators_speed_));
  _internal_metadata_.Clear();
}

bool SET_RADIATOR_SPEED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_RADIATOR_SPEED)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float radiators_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radiators_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_RADIATOR_SPEED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_RADIATOR_SPEED)
  return false;
#undef DO_
}

void SET_RADIATOR_SPEED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_RADIATOR_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->radiators_speed(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_RADIATOR_SPEED)
}

::google::protobuf::uint8* SET_RADIATOR_SPEED::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_RADIATOR_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->radiators_speed(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_RADIATOR_SPEED)
  return target;
}

size_t SET_RADIATOR_SPEED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_RADIATOR_SPEED)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float radiators_speed = 1;
  if (this->radiators_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_RADIATOR_SPEED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_RADIATOR_SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_RADIATOR_SPEED* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_RADIATOR_SPEED>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_RADIATOR_SPEED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_RADIATOR_SPEED)
    MergeFrom(*source);
  }
}

void SET_RADIATOR_SPEED::MergeFrom(const SET_RADIATOR_SPEED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_RADIATOR_SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.radiators_speed() != 0) {
    set_radiators_speed(from.radiators_speed());
  }
}

void SET_RADIATOR_SPEED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_RADIATOR_SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_RADIATOR_SPEED::CopyFrom(const SET_RADIATOR_SPEED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_RADIATOR_SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_RADIATOR_SPEED::IsInitialized() const {
  return true;
}

void SET_RADIATOR_SPEED::Swap(SET_RADIATOR_SPEED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_RADIATOR_SPEED::InternalSwap(SET_RADIATOR_SPEED* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(radiators_speed_, other->radiators_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_RADIATOR_SPEED::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_PUMPS_SPEED::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_PUMPS_SPEED::kPumpsSpeedFieldNumber;
const int SET_PUMPS_SPEED::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_PUMPS_SPEED::SET_PUMPS_SPEED()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_PUMPS_SPEED.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_PUMPS_SPEED)
}
SET_PUMPS_SPEED::SET_PUMPS_SPEED(const SET_PUMPS_SPEED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&pumps_speed_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(pumps_speed_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_PUMPS_SPEED)
}

void SET_PUMPS_SPEED::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pumps_speed_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(pumps_speed_));
}

SET_PUMPS_SPEED::~SET_PUMPS_SPEED() {
  // @@protoc_insertion_point(destructor:primary.SET_PUMPS_SPEED)
  SharedDtor();
}

void SET_PUMPS_SPEED::SharedDtor() {
}

void SET_PUMPS_SPEED::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_PUMPS_SPEED::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_PUMPS_SPEED& SET_PUMPS_SPEED::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_PUMPS_SPEED.base);
  return *internal_default_instance();
}


void SET_PUMPS_SPEED::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_PUMPS_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pumps_speed_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(pumps_speed_));
  _internal_metadata_.Clear();
}

bool SET_PUMPS_SPEED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_PUMPS_SPEED)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float pumps_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pumps_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_PUMPS_SPEED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_PUMPS_SPEED)
  return false;
#undef DO_
}

void SET_PUMPS_SPEED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_PUMPS_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pumps_speed = 1;
  if (this->pumps_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->pumps_speed(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_PUMPS_SPEED)
}

::google::protobuf::uint8* SET_PUMPS_SPEED::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_PUMPS_SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float pumps_speed = 1;
  if (this->pumps_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->pumps_speed(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_PUMPS_SPEED)
  return target;
}

size_t SET_PUMPS_SPEED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_PUMPS_SPEED)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float pumps_speed = 1;
  if (this->pumps_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_PUMPS_SPEED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_PUMPS_SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_PUMPS_SPEED* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_PUMPS_SPEED>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_PUMPS_SPEED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_PUMPS_SPEED)
    MergeFrom(*source);
  }
}

void SET_PUMPS_SPEED::MergeFrom(const SET_PUMPS_SPEED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_PUMPS_SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.pumps_speed() != 0) {
    set_pumps_speed(from.pumps_speed());
  }
}

void SET_PUMPS_SPEED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_PUMPS_SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_PUMPS_SPEED::CopyFrom(const SET_PUMPS_SPEED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_PUMPS_SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_PUMPS_SPEED::IsInitialized() const {
  return true;
}

void SET_PUMPS_SPEED::Swap(SET_PUMPS_SPEED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_PUMPS_SPEED::InternalSwap(SET_PUMPS_SPEED* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(pumps_speed_, other->pumps_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_PUMPS_SPEED::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_INVERTER_CONNECTION_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_INVERTER_CONNECTION_STATUS::kStatusFieldNumber;
const int SET_INVERTER_CONNECTION_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_INVERTER_CONNECTION_STATUS::SET_INVERTER_CONNECTION_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_INVERTER_CONNECTION_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_INVERTER_CONNECTION_STATUS)
}
SET_INVERTER_CONNECTION_STATUS::SET_INVERTER_CONNECTION_STATUS(const SET_INVERTER_CONNECTION_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_INVERTER_CONNECTION_STATUS)
}

void SET_INVERTER_CONNECTION_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
}

SET_INVERTER_CONNECTION_STATUS::~SET_INVERTER_CONNECTION_STATUS() {
  // @@protoc_insertion_point(destructor:primary.SET_INVERTER_CONNECTION_STATUS)
  SharedDtor();
}

void SET_INVERTER_CONNECTION_STATUS::SharedDtor() {
}

void SET_INVERTER_CONNECTION_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_INVERTER_CONNECTION_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_INVERTER_CONNECTION_STATUS& SET_INVERTER_CONNECTION_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_INVERTER_CONNECTION_STATUS.base);
  return *internal_default_instance();
}


void SET_INVERTER_CONNECTION_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool SET_INVERTER_CONNECTION_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_INVERTER_CONNECTION_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_INVERTER_CONNECTION_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_INVERTER_CONNECTION_STATUS)
  return false;
#undef DO_
}

void SET_INVERTER_CONNECTION_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_INVERTER_CONNECTION_STATUS)
}

::google::protobuf::uint8* SET_INVERTER_CONNECTION_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_INVERTER_CONNECTION_STATUS)
  return target;
}

size_t SET_INVERTER_CONNECTION_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_INVERTER_CONNECTION_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_INVERTER_CONNECTION_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_INVERTER_CONNECTION_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_INVERTER_CONNECTION_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_INVERTER_CONNECTION_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_INVERTER_CONNECTION_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_INVERTER_CONNECTION_STATUS)
    MergeFrom(*source);
  }
}

void SET_INVERTER_CONNECTION_STATUS::MergeFrom(const SET_INVERTER_CONNECTION_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_INVERTER_CONNECTION_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void SET_INVERTER_CONNECTION_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_INVERTER_CONNECTION_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_INVERTER_CONNECTION_STATUS::CopyFrom(const SET_INVERTER_CONNECTION_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_INVERTER_CONNECTION_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_INVERTER_CONNECTION_STATUS::IsInitialized() const {
  return true;
}

void SET_INVERTER_CONNECTION_STATUS::Swap(SET_INVERTER_CONNECTION_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_INVERTER_CONNECTION_STATUS::InternalSwap(SET_INVERTER_CONNECTION_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_INVERTER_CONNECTION_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void INVERTER_CONNECTION_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INVERTER_CONNECTION_STATUS::kStatusFieldNumber;
const int INVERTER_CONNECTION_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INVERTER_CONNECTION_STATUS::INVERTER_CONNECTION_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_INVERTER_CONNECTION_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.INVERTER_CONNECTION_STATUS)
}
INVERTER_CONNECTION_STATUS::INVERTER_CONNECTION_STATUS(const INVERTER_CONNECTION_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:primary.INVERTER_CONNECTION_STATUS)
}

void INVERTER_CONNECTION_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
}

INVERTER_CONNECTION_STATUS::~INVERTER_CONNECTION_STATUS() {
  // @@protoc_insertion_point(destructor:primary.INVERTER_CONNECTION_STATUS)
  SharedDtor();
}

void INVERTER_CONNECTION_STATUS::SharedDtor() {
}

void INVERTER_CONNECTION_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* INVERTER_CONNECTION_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const INVERTER_CONNECTION_STATUS& INVERTER_CONNECTION_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_INVERTER_CONNECTION_STATUS.base);
  return *internal_default_instance();
}


void INVERTER_CONNECTION_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool INVERTER_CONNECTION_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.INVERTER_CONNECTION_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.INVERTER_CONNECTION_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.INVERTER_CONNECTION_STATUS)
  return false;
#undef DO_
}

void INVERTER_CONNECTION_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.INVERTER_CONNECTION_STATUS)
}

::google::protobuf::uint8* INVERTER_CONNECTION_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.INVERTER_CONNECTION_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.INVERTER_CONNECTION_STATUS)
  return target;
}

size_t INVERTER_CONNECTION_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.INVERTER_CONNECTION_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void INVERTER_CONNECTION_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.INVERTER_CONNECTION_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const INVERTER_CONNECTION_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const INVERTER_CONNECTION_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.INVERTER_CONNECTION_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.INVERTER_CONNECTION_STATUS)
    MergeFrom(*source);
  }
}

void INVERTER_CONNECTION_STATUS::MergeFrom(const INVERTER_CONNECTION_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.INVERTER_CONNECTION_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void INVERTER_CONNECTION_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.INVERTER_CONNECTION_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INVERTER_CONNECTION_STATUS::CopyFrom(const INVERTER_CONNECTION_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.INVERTER_CONNECTION_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INVERTER_CONNECTION_STATUS::IsInitialized() const {
  return true;
}

void INVERTER_CONNECTION_STATUS::Swap(INVERTER_CONNECTION_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INVERTER_CONNECTION_STATUS::InternalSwap(INVERTER_CONNECTION_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata INVERTER_CONNECTION_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LV_ERRORS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LV_ERRORS::kWarningsFieldNumber;
const int LV_ERRORS::kErrorsFieldNumber;
const int LV_ERRORS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LV_ERRORS::LV_ERRORS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_LV_ERRORS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.LV_ERRORS)
}
LV_ERRORS::LV_ERRORS(const LV_ERRORS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&warnings_, &from.warnings_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.LV_ERRORS)
}

void LV_ERRORS::SharedCtor() {
  ::memset(&warnings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
}

LV_ERRORS::~LV_ERRORS() {
  // @@protoc_insertion_point(destructor:primary.LV_ERRORS)
  SharedDtor();
}

void LV_ERRORS::SharedDtor() {
}

void LV_ERRORS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LV_ERRORS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LV_ERRORS& LV_ERRORS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_LV_ERRORS.base);
  return *internal_default_instance();
}


void LV_ERRORS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.LV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&warnings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&warnings_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool LV_ERRORS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.LV_ERRORS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 warnings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &warnings_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.LV_ERRORS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.LV_ERRORS)
  return false;
#undef DO_
}

void LV_ERRORS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.LV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->warnings(), output);
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->errors(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.LV_ERRORS)
}

::google::protobuf::uint8* LV_ERRORS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.LV_ERRORS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->warnings(), target);
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->errors(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.LV_ERRORS)
  return target;
}

size_t LV_ERRORS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.LV_ERRORS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 warnings = 1;
  if (this->warnings() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->warnings());
  }

  // uint32 errors = 2;
  if (this->errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errors());
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LV_ERRORS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.LV_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  const LV_ERRORS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LV_ERRORS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.LV_ERRORS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.LV_ERRORS)
    MergeFrom(*source);
  }
}

void LV_ERRORS::MergeFrom(const LV_ERRORS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.LV_ERRORS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.warnings() != 0) {
    set_warnings(from.warnings());
  }
  if (from.errors() != 0) {
    set_errors(from.errors());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void LV_ERRORS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.LV_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LV_ERRORS::CopyFrom(const LV_ERRORS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.LV_ERRORS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LV_ERRORS::IsInitialized() const {
  return true;
}

void LV_ERRORS::Swap(LV_ERRORS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LV_ERRORS::InternalSwap(LV_ERRORS* other) {
  using std::swap;
  swap(warnings_, other->warnings_);
  swap(errors_, other->errors_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LV_ERRORS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SHUTDOWN_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SHUTDOWN_STATUS::kInputFieldNumber;
const int SHUTDOWN_STATUS::kOutputFieldNumber;
const int SHUTDOWN_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SHUTDOWN_STATUS::SHUTDOWN_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SHUTDOWN_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SHUTDOWN_STATUS)
}
SHUTDOWN_STATUS::SHUTDOWN_STATUS(const SHUTDOWN_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(output_));
  // @@protoc_insertion_point(copy_constructor:primary.SHUTDOWN_STATUS)
}

void SHUTDOWN_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(output_));
}

SHUTDOWN_STATUS::~SHUTDOWN_STATUS() {
  // @@protoc_insertion_point(destructor:primary.SHUTDOWN_STATUS)
  SharedDtor();
}

void SHUTDOWN_STATUS::SharedDtor() {
}

void SHUTDOWN_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SHUTDOWN_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SHUTDOWN_STATUS& SHUTDOWN_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SHUTDOWN_STATUS.base);
  return *internal_default_instance();
}


void SHUTDOWN_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SHUTDOWN_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(output_));
  _internal_metadata_.Clear();
}

bool SHUTDOWN_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SHUTDOWN_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &input_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SHUTDOWN_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SHUTDOWN_STATUS)
  return false;
#undef DO_
}

void SHUTDOWN_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SHUTDOWN_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool input = 1;
  if (this->input() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->input(), output);
  }

  // bool output = 2;
  if (this->output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->output(), output);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SHUTDOWN_STATUS)
}

::google::protobuf::uint8* SHUTDOWN_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SHUTDOWN_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool input = 1;
  if (this->input() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->input(), target);
  }

  // bool output = 2;
  if (this->output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->output(), target);
  }

  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SHUTDOWN_STATUS)
  return target;
}

size_t SHUTDOWN_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SHUTDOWN_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 3;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // bool input = 1;
  if (this->input() != 0) {
    total_size += 1 + 1;
  }

  // bool output = 2;
  if (this->output() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SHUTDOWN_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SHUTDOWN_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const SHUTDOWN_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SHUTDOWN_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SHUTDOWN_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SHUTDOWN_STATUS)
    MergeFrom(*source);
  }
}

void SHUTDOWN_STATUS::MergeFrom(const SHUTDOWN_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SHUTDOWN_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.input() != 0) {
    set_input(from.input());
  }
  if (from.output() != 0) {
    set_output(from.output());
  }
}

void SHUTDOWN_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SHUTDOWN_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SHUTDOWN_STATUS::CopyFrom(const SHUTDOWN_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SHUTDOWN_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SHUTDOWN_STATUS::IsInitialized() const {
  return true;
}

void SHUTDOWN_STATUS::Swap(SHUTDOWN_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SHUTDOWN_STATUS::InternalSwap(SHUTDOWN_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(input_, other->input_);
  swap(output_, other->output_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SHUTDOWN_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MARKER::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MARKER::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MARKER::MARKER()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_MARKER.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.MARKER)
}
MARKER::MARKER(const MARKER& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.MARKER)
}

void MARKER::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

MARKER::~MARKER() {
  // @@protoc_insertion_point(destructor:primary.MARKER)
  SharedDtor();
}

void MARKER::SharedDtor() {
}

void MARKER::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MARKER::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MARKER& MARKER::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_MARKER.base);
  return *internal_default_instance();
}


void MARKER::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.MARKER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MARKER::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.MARKER)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.MARKER)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.MARKER)
  return false;
#undef DO_
}

void MARKER::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.MARKER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.MARKER)
}

::google::protobuf::uint8* MARKER::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.MARKER)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.MARKER)
  return target;
}

size_t MARKER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.MARKER)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MARKER::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.MARKER)
  GOOGLE_DCHECK_NE(&from, this);
  const MARKER* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MARKER>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.MARKER)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.MARKER)
    MergeFrom(*source);
  }
}

void MARKER::MergeFrom(const MARKER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.MARKER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void MARKER::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.MARKER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MARKER::CopyFrom(const MARKER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.MARKER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MARKER::IsInitialized() const {
  return true;
}

void MARKER::Swap(MARKER* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MARKER::InternalSwap(MARKER* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MARKER::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CELLS_VOLTAGE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CELLS_VOLTAGE::kStartIndexFieldNumber;
const int HV_CELLS_VOLTAGE::kVoltage0FieldNumber;
const int HV_CELLS_VOLTAGE::kVoltage1FieldNumber;
const int HV_CELLS_VOLTAGE::kVoltage2FieldNumber;
const int HV_CELLS_VOLTAGE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CELLS_VOLTAGE::HV_CELLS_VOLTAGE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CELLS_VOLTAGE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CELLS_VOLTAGE)
}
HV_CELLS_VOLTAGE::HV_CELLS_VOLTAGE(const HV_CELLS_VOLTAGE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CELLS_VOLTAGE)
}

void HV_CELLS_VOLTAGE::SharedCtor() {
  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(_inner_timestamp_));
}

HV_CELLS_VOLTAGE::~HV_CELLS_VOLTAGE() {
  // @@protoc_insertion_point(destructor:primary.HV_CELLS_VOLTAGE)
  SharedDtor();
}

void HV_CELLS_VOLTAGE::SharedDtor() {
}

void HV_CELLS_VOLTAGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CELLS_VOLTAGE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CELLS_VOLTAGE& HV_CELLS_VOLTAGE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CELLS_VOLTAGE.base);
  return *internal_default_instance();
}


void HV_CELLS_VOLTAGE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CELLS_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool HV_CELLS_VOLTAGE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CELLS_VOLTAGE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float voltage_2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CELLS_VOLTAGE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CELLS_VOLTAGE)
  return false;
#undef DO_
}

void HV_CELLS_VOLTAGE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CELLS_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_index(), output);
  }

  // float voltage_0 = 2;
  if (this->voltage_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->voltage_0(), output);
  }

  // float voltage_1 = 3;
  if (this->voltage_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->voltage_1(), output);
  }

  // float voltage_2 = 4;
  if (this->voltage_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->voltage_2(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CELLS_VOLTAGE)
}

::google::protobuf::uint8* HV_CELLS_VOLTAGE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CELLS_VOLTAGE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_index(), target);
  }

  // float voltage_0 = 2;
  if (this->voltage_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->voltage_0(), target);
  }

  // float voltage_1 = 3;
  if (this->voltage_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->voltage_1(), target);
  }

  // float voltage_2 = 4;
  if (this->voltage_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->voltage_2(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CELLS_VOLTAGE)
  return target;
}

size_t HV_CELLS_VOLTAGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CELLS_VOLTAGE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_index());
  }

  // float voltage_0 = 2;
  if (this->voltage_0() != 0) {
    total_size += 1 + 4;
  }

  // float voltage_1 = 3;
  if (this->voltage_1() != 0) {
    total_size += 1 + 4;
  }

  // float voltage_2 = 4;
  if (this->voltage_2() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CELLS_VOLTAGE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CELLS_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CELLS_VOLTAGE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CELLS_VOLTAGE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CELLS_VOLTAGE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CELLS_VOLTAGE)
    MergeFrom(*source);
  }
}

void HV_CELLS_VOLTAGE::MergeFrom(const HV_CELLS_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CELLS_VOLTAGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_index() != 0) {
    set_start_index(from.start_index());
  }
  if (from.voltage_0() != 0) {
    set_voltage_0(from.voltage_0());
  }
  if (from.voltage_1() != 0) {
    set_voltage_1(from.voltage_1());
  }
  if (from.voltage_2() != 0) {
    set_voltage_2(from.voltage_2());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void HV_CELLS_VOLTAGE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CELLS_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CELLS_VOLTAGE::CopyFrom(const HV_CELLS_VOLTAGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CELLS_VOLTAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CELLS_VOLTAGE::IsInitialized() const {
  return true;
}

void HV_CELLS_VOLTAGE::Swap(HV_CELLS_VOLTAGE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CELLS_VOLTAGE::InternalSwap(HV_CELLS_VOLTAGE* other) {
  using std::swap;
  swap(start_index_, other->start_index_);
  swap(voltage_0_, other->voltage_0_);
  swap(voltage_1_, other->voltage_1_);
  swap(voltage_2_, other->voltage_2_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CELLS_VOLTAGE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CELLS_TEMP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CELLS_TEMP::kStartIndexFieldNumber;
const int HV_CELLS_TEMP::kTemp0FieldNumber;
const int HV_CELLS_TEMP::kTemp1FieldNumber;
const int HV_CELLS_TEMP::kTemp2FieldNumber;
const int HV_CELLS_TEMP::kTemp3FieldNumber;
const int HV_CELLS_TEMP::kTemp4FieldNumber;
const int HV_CELLS_TEMP::kTemp5FieldNumber;
const int HV_CELLS_TEMP::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CELLS_TEMP::HV_CELLS_TEMP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CELLS_TEMP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CELLS_TEMP)
}
HV_CELLS_TEMP::HV_CELLS_TEMP(const HV_CELLS_TEMP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_index_, &from.start_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp_5_) -
    reinterpret_cast<char*>(&start_index_)) + sizeof(temp_5_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CELLS_TEMP)
}

void HV_CELLS_TEMP::SharedCtor() {
  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp_5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp_5_));
}

HV_CELLS_TEMP::~HV_CELLS_TEMP() {
  // @@protoc_insertion_point(destructor:primary.HV_CELLS_TEMP)
  SharedDtor();
}

void HV_CELLS_TEMP::SharedDtor() {
}

void HV_CELLS_TEMP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CELLS_TEMP::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CELLS_TEMP& HV_CELLS_TEMP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CELLS_TEMP.base);
  return *internal_default_instance();
}


void HV_CELLS_TEMP::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CELLS_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp_5_) -
      reinterpret_cast<char*>(&start_index_)) + sizeof(temp_5_));
  _internal_metadata_.Clear();
}

bool HV_CELLS_TEMP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CELLS_TEMP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float temp_5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &temp_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CELLS_TEMP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CELLS_TEMP)
  return false;
#undef DO_
}

void HV_CELLS_TEMP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CELLS_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_index(), output);
  }

  // float temp_0 = 2;
  if (this->temp_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->temp_0(), output);
  }

  // float temp_1 = 3;
  if (this->temp_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->temp_1(), output);
  }

  // float temp_2 = 4;
  if (this->temp_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->temp_2(), output);
  }

  // float temp_3 = 5;
  if (this->temp_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->temp_3(), output);
  }

  // float temp_4 = 6;
  if (this->temp_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->temp_4(), output);
  }

  // float temp_5 = 7;
  if (this->temp_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->temp_5(), output);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CELLS_TEMP)
}

::google::protobuf::uint8* HV_CELLS_TEMP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CELLS_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_index(), target);
  }

  // float temp_0 = 2;
  if (this->temp_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->temp_0(), target);
  }

  // float temp_1 = 3;
  if (this->temp_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->temp_1(), target);
  }

  // float temp_2 = 4;
  if (this->temp_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->temp_2(), target);
  }

  // float temp_3 = 5;
  if (this->temp_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->temp_3(), target);
  }

  // float temp_4 = 6;
  if (this->temp_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->temp_4(), target);
  }

  // float temp_5 = 7;
  if (this->temp_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->temp_5(), target);
  }

  // uint64 _inner_timestamp = 8;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CELLS_TEMP)
  return target;
}

size_t HV_CELLS_TEMP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CELLS_TEMP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_index = 1;
  if (this->start_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_index());
  }

  // float temp_0 = 2;
  if (this->temp_0() != 0) {
    total_size += 1 + 4;
  }

  // float temp_1 = 3;
  if (this->temp_1() != 0) {
    total_size += 1 + 4;
  }

  // float temp_2 = 4;
  if (this->temp_2() != 0) {
    total_size += 1 + 4;
  }

  // float temp_3 = 5;
  if (this->temp_3() != 0) {
    total_size += 1 + 4;
  }

  // float temp_4 = 6;
  if (this->temp_4() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 8;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // float temp_5 = 7;
  if (this->temp_5() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CELLS_TEMP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CELLS_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CELLS_TEMP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CELLS_TEMP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CELLS_TEMP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CELLS_TEMP)
    MergeFrom(*source);
  }
}

void HV_CELLS_TEMP::MergeFrom(const HV_CELLS_TEMP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CELLS_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_index() != 0) {
    set_start_index(from.start_index());
  }
  if (from.temp_0() != 0) {
    set_temp_0(from.temp_0());
  }
  if (from.temp_1() != 0) {
    set_temp_1(from.temp_1());
  }
  if (from.temp_2() != 0) {
    set_temp_2(from.temp_2());
  }
  if (from.temp_3() != 0) {
    set_temp_3(from.temp_3());
  }
  if (from.temp_4() != 0) {
    set_temp_4(from.temp_4());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.temp_5() != 0) {
    set_temp_5(from.temp_5());
  }
}

void HV_CELLS_TEMP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CELLS_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CELLS_TEMP::CopyFrom(const HV_CELLS_TEMP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CELLS_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CELLS_TEMP::IsInitialized() const {
  return true;
}

void HV_CELLS_TEMP::Swap(HV_CELLS_TEMP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CELLS_TEMP::InternalSwap(HV_CELLS_TEMP* other) {
  using std::swap;
  swap(start_index_, other->start_index_);
  swap(temp_0_, other->temp_0_);
  swap(temp_1_, other->temp_1_);
  swap(temp_2_, other->temp_2_);
  swap(temp_3_, other->temp_3_);
  swap(temp_4_, other->temp_4_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(temp_5_, other->temp_5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CELLS_TEMP::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HV_CELL_BALANCING_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HV_CELL_BALANCING_STATUS::kBalancingStatusFieldNumber;
const int HV_CELL_BALANCING_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HV_CELL_BALANCING_STATUS::HV_CELL_BALANCING_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HV_CELL_BALANCING_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HV_CELL_BALANCING_STATUS)
}
HV_CELL_BALANCING_STATUS::HV_CELL_BALANCING_STATUS(const HV_CELL_BALANCING_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&balancing_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(balancing_status_));
  // @@protoc_insertion_point(copy_constructor:primary.HV_CELL_BALANCING_STATUS)
}

void HV_CELL_BALANCING_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balancing_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(balancing_status_));
}

HV_CELL_BALANCING_STATUS::~HV_CELL_BALANCING_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HV_CELL_BALANCING_STATUS)
  SharedDtor();
}

void HV_CELL_BALANCING_STATUS::SharedDtor() {
}

void HV_CELL_BALANCING_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HV_CELL_BALANCING_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HV_CELL_BALANCING_STATUS& HV_CELL_BALANCING_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HV_CELL_BALANCING_STATUS.base);
  return *internal_default_instance();
}


void HV_CELL_BALANCING_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HV_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&balancing_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(balancing_status_));
  _internal_metadata_.Clear();
}

bool HV_CELL_BALANCING_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HV_CELL_BALANCING_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle balancing_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_balancing_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HV_CELL_BALANCING_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HV_CELL_BALANCING_STATUS)
  return false;
#undef DO_
}

void HV_CELL_BALANCING_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HV_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle balancing_status = 1;
  if (this->balancing_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->balancing_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HV_CELL_BALANCING_STATUS)
}

::google::protobuf::uint8* HV_CELL_BALANCING_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HV_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle balancing_status = 1;
  if (this->balancing_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->balancing_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HV_CELL_BALANCING_STATUS)
  return target;
}

size_t HV_CELL_BALANCING_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HV_CELL_BALANCING_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle balancing_status = 1;
  if (this->balancing_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->balancing_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HV_CELL_BALANCING_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HV_CELL_BALANCING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HV_CELL_BALANCING_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HV_CELL_BALANCING_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HV_CELL_BALANCING_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HV_CELL_BALANCING_STATUS)
    MergeFrom(*source);
  }
}

void HV_CELL_BALANCING_STATUS::MergeFrom(const HV_CELL_BALANCING_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HV_CELL_BALANCING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.balancing_status() != 0) {
    set_balancing_status(from.balancing_status());
  }
}

void HV_CELL_BALANCING_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HV_CELL_BALANCING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HV_CELL_BALANCING_STATUS::CopyFrom(const HV_CELL_BALANCING_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HV_CELL_BALANCING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HV_CELL_BALANCING_STATUS::IsInitialized() const {
  return true;
}

void HV_CELL_BALANCING_STATUS::Swap(HV_CELL_BALANCING_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HV_CELL_BALANCING_STATUS::InternalSwap(HV_CELL_BALANCING_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(balancing_status_, other->balancing_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HV_CELL_BALANCING_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SET_CELL_BALANCING_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SET_CELL_BALANCING_STATUS::kSetBalancingStatusFieldNumber;
const int SET_CELL_BALANCING_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SET_CELL_BALANCING_STATUS::SET_CELL_BALANCING_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SET_CELL_BALANCING_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SET_CELL_BALANCING_STATUS)
}
SET_CELL_BALANCING_STATUS::SET_CELL_BALANCING_STATUS(const SET_CELL_BALANCING_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&set_balancing_status_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(set_balancing_status_));
  // @@protoc_insertion_point(copy_constructor:primary.SET_CELL_BALANCING_STATUS)
}

void SET_CELL_BALANCING_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&set_balancing_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(set_balancing_status_));
}

SET_CELL_BALANCING_STATUS::~SET_CELL_BALANCING_STATUS() {
  // @@protoc_insertion_point(destructor:primary.SET_CELL_BALANCING_STATUS)
  SharedDtor();
}

void SET_CELL_BALANCING_STATUS::SharedDtor() {
}

void SET_CELL_BALANCING_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SET_CELL_BALANCING_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SET_CELL_BALANCING_STATUS& SET_CELL_BALANCING_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SET_CELL_BALANCING_STATUS.base);
  return *internal_default_instance();
}


void SET_CELL_BALANCING_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SET_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&set_balancing_status_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(set_balancing_status_));
  _internal_metadata_.Clear();
}

bool SET_CELL_BALANCING_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SET_CELL_BALANCING_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .primary.Toggle set_balancing_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_set_balancing_status(static_cast< ::primary::Toggle >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SET_CELL_BALANCING_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SET_CELL_BALANCING_STATUS)
  return false;
#undef DO_
}

void SET_CELL_BALANCING_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SET_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle set_balancing_status = 1;
  if (this->set_balancing_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->set_balancing_status(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SET_CELL_BALANCING_STATUS)
}

::google::protobuf::uint8* SET_CELL_BALANCING_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SET_CELL_BALANCING_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .primary.Toggle set_balancing_status = 1;
  if (this->set_balancing_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->set_balancing_status(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SET_CELL_BALANCING_STATUS)
  return target;
}

size_t SET_CELL_BALANCING_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SET_CELL_BALANCING_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // .primary.Toggle set_balancing_status = 1;
  if (this->set_balancing_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->set_balancing_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SET_CELL_BALANCING_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SET_CELL_BALANCING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const SET_CELL_BALANCING_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SET_CELL_BALANCING_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SET_CELL_BALANCING_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SET_CELL_BALANCING_STATUS)
    MergeFrom(*source);
  }
}

void SET_CELL_BALANCING_STATUS::MergeFrom(const SET_CELL_BALANCING_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SET_CELL_BALANCING_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.set_balancing_status() != 0) {
    set_set_balancing_status(from.set_balancing_status());
  }
}

void SET_CELL_BALANCING_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SET_CELL_BALANCING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SET_CELL_BALANCING_STATUS::CopyFrom(const SET_CELL_BALANCING_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SET_CELL_BALANCING_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SET_CELL_BALANCING_STATUS::IsInitialized() const {
  return true;
}

void SET_CELL_BALANCING_STATUS::Swap(SET_CELL_BALANCING_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SET_CELL_BALANCING_STATUS::InternalSwap(SET_CELL_BALANCING_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(set_balancing_status_, other->set_balancing_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SET_CELL_BALANCING_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HANDCART_STATUS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HANDCART_STATUS::kConnectedFieldNumber;
const int HANDCART_STATUS::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HANDCART_STATUS::HANDCART_STATUS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_HANDCART_STATUS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.HANDCART_STATUS)
}
HANDCART_STATUS::HANDCART_STATUS(const HANDCART_STATUS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_inner_timestamp_, &from._inner_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&connected_) -
    reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(connected_));
  // @@protoc_insertion_point(copy_constructor:primary.HANDCART_STATUS)
}

void HANDCART_STATUS::SharedCtor() {
  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(connected_));
}

HANDCART_STATUS::~HANDCART_STATUS() {
  // @@protoc_insertion_point(destructor:primary.HANDCART_STATUS)
  SharedDtor();
}

void HANDCART_STATUS::SharedDtor() {
}

void HANDCART_STATUS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HANDCART_STATUS::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HANDCART_STATUS& HANDCART_STATUS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_HANDCART_STATUS.base);
  return *internal_default_instance();
}


void HANDCART_STATUS::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.HANDCART_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_inner_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&_inner_timestamp_)) + sizeof(connected_));
  _internal_metadata_.Clear();
}

bool HANDCART_STATUS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.HANDCART_STATUS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool connected = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.HANDCART_STATUS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.HANDCART_STATUS)
  return false;
#undef DO_
}

void HANDCART_STATUS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.HANDCART_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->connected(), output);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.HANDCART_STATUS)
}

::google::protobuf::uint8* HANDCART_STATUS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.HANDCART_STATUS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->connected(), target);
  }

  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.HANDCART_STATUS)
  return target;
}

size_t HANDCART_STATUS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.HANDCART_STATUS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 2;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  // bool connected = 1;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HANDCART_STATUS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.HANDCART_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  const HANDCART_STATUS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HANDCART_STATUS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.HANDCART_STATUS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.HANDCART_STATUS)
    MergeFrom(*source);
  }
}

void HANDCART_STATUS::MergeFrom(const HANDCART_STATUS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.HANDCART_STATUS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
  if (from.connected() != 0) {
    set_connected(from.connected());
  }
}

void HANDCART_STATUS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.HANDCART_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HANDCART_STATUS::CopyFrom(const HANDCART_STATUS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.HANDCART_STATUS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HANDCART_STATUS::IsInitialized() const {
  return true;
}

void HANDCART_STATUS::Swap(HANDCART_STATUS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HANDCART_STATUS::InternalSwap(HANDCART_STATUS* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  swap(connected_, other->connected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HANDCART_STATUS::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SPEED::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SPEED::kEncoderRFieldNumber;
const int SPEED::kEncoderLFieldNumber;
const int SPEED::kInverterRFieldNumber;
const int SPEED::kInverterLFieldNumber;
const int SPEED::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SPEED::SPEED()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_SPEED.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.SPEED)
}
SPEED::SPEED(const SPEED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&encoder_r_, &from.encoder_r_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&encoder_r_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.SPEED)
}

void SPEED::SharedCtor() {
  ::memset(&encoder_r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&encoder_r_)) + sizeof(_inner_timestamp_));
}

SPEED::~SPEED() {
  // @@protoc_insertion_point(destructor:primary.SPEED)
  SharedDtor();
}

void SPEED::SharedDtor() {
}

void SPEED::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SPEED::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SPEED& SPEED::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_SPEED.base);
  return *internal_default_instance();
}


void SPEED::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&encoder_r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&encoder_r_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool SPEED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.SPEED)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float encoder_r = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &encoder_r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float encoder_l = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &encoder_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float inverter_r = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inverter_r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float inverter_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &inverter_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.SPEED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.SPEED)
  return false;
#undef DO_
}

void SPEED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float encoder_r = 1;
  if (this->encoder_r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->encoder_r(), output);
  }

  // float encoder_l = 2;
  if (this->encoder_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->encoder_l(), output);
  }

  // float inverter_r = 3;
  if (this->inverter_r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->inverter_r(), output);
  }

  // float inverter_l = 4;
  if (this->inverter_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->inverter_l(), output);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.SPEED)
}

::google::protobuf::uint8* SPEED::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.SPEED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float encoder_r = 1;
  if (this->encoder_r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->encoder_r(), target);
  }

  // float encoder_l = 2;
  if (this->encoder_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->encoder_l(), target);
  }

  // float inverter_r = 3;
  if (this->inverter_r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->inverter_r(), target);
  }

  // float inverter_l = 4;
  if (this->inverter_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->inverter_l(), target);
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.SPEED)
  return target;
}

size_t SPEED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.SPEED)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float encoder_r = 1;
  if (this->encoder_r() != 0) {
    total_size += 1 + 4;
  }

  // float encoder_l = 2;
  if (this->encoder_l() != 0) {
    total_size += 1 + 4;
  }

  // float inverter_r = 3;
  if (this->inverter_r() != 0) {
    total_size += 1 + 4;
  }

  // float inverter_l = 4;
  if (this->inverter_l() != 0) {
    total_size += 1 + 4;
  }

  // uint64 _inner_timestamp = 5;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SPEED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  const SPEED* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SPEED>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.SPEED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.SPEED)
    MergeFrom(*source);
  }
}

void SPEED::MergeFrom(const SPEED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.SPEED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoder_r() != 0) {
    set_encoder_r(from.encoder_r());
  }
  if (from.encoder_l() != 0) {
    set_encoder_l(from.encoder_l());
  }
  if (from.inverter_r() != 0) {
    set_inverter_r(from.inverter_r());
  }
  if (from.inverter_l() != 0) {
    set_inverter_l(from.inverter_l());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void SPEED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SPEED::CopyFrom(const SPEED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.SPEED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SPEED::IsInitialized() const {
  return true;
}

void SPEED::Swap(SPEED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SPEED::InternalSwap(SPEED* other) {
  using std::swap;
  swap(encoder_r_, other->encoder_r_);
  swap(encoder_l_, other->encoder_l_);
  swap(inverter_r_, other->inverter_r_);
  swap(inverter_l_, other->inverter_l_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SPEED::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void INV_L_REQUEST::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INV_L_REQUEST::kData0FieldNumber;
const int INV_L_REQUEST::kData1FieldNumber;
const int INV_L_REQUEST::kData2FieldNumber;
const int INV_L_REQUEST::kData3FieldNumber;
const int INV_L_REQUEST::kData4FieldNumber;
const int INV_L_REQUEST::kData5FieldNumber;
const int INV_L_REQUEST::kData6FieldNumber;
const int INV_L_REQUEST::kData7FieldNumber;
const int INV_L_REQUEST::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INV_L_REQUEST::INV_L_REQUEST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_INV_L_REQUEST.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.INV_L_REQUEST)
}
INV_L_REQUEST::INV_L_REQUEST(const INV_L_REQUEST& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_0_, &from.data_0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.INV_L_REQUEST)
}

void INV_L_REQUEST::SharedCtor() {
  ::memset(&data_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
}

INV_L_REQUEST::~INV_L_REQUEST() {
  // @@protoc_insertion_point(destructor:primary.INV_L_REQUEST)
  SharedDtor();
}

void INV_L_REQUEST::SharedDtor() {
}

void INV_L_REQUEST::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* INV_L_REQUEST::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const INV_L_REQUEST& INV_L_REQUEST::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_INV_L_REQUEST.base);
  return *internal_default_instance();
}


void INV_L_REQUEST::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.INV_L_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&data_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool INV_L_REQUEST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.INV_L_REQUEST)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data_0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_5 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_6 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_7 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.INV_L_REQUEST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.INV_L_REQUEST)
  return false;
#undef DO_
}

void INV_L_REQUEST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.INV_L_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data_0(), output);
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_1(), output);
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->data_2(), output);
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->data_3(), output);
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_4(), output);
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_5(), output);
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->data_6(), output);
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->data_7(), output);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.INV_L_REQUEST)
}

::google::protobuf::uint8* INV_L_REQUEST::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.INV_L_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data_0(), target);
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_1(), target);
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->data_2(), target);
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->data_3(), target);
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_4(), target);
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_5(), target);
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->data_6(), target);
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->data_7(), target);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.INV_L_REQUEST)
  return target;
}

size_t INV_L_REQUEST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.INV_L_REQUEST)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_0());
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_1());
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_2());
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_3());
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_4());
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_5());
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_6());
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_7());
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void INV_L_REQUEST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.INV_L_REQUEST)
  GOOGLE_DCHECK_NE(&from, this);
  const INV_L_REQUEST* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const INV_L_REQUEST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.INV_L_REQUEST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.INV_L_REQUEST)
    MergeFrom(*source);
  }
}

void INV_L_REQUEST::MergeFrom(const INV_L_REQUEST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.INV_L_REQUEST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_0() != 0) {
    set_data_0(from.data_0());
  }
  if (from.data_1() != 0) {
    set_data_1(from.data_1());
  }
  if (from.data_2() != 0) {
    set_data_2(from.data_2());
  }
  if (from.data_3() != 0) {
    set_data_3(from.data_3());
  }
  if (from.data_4() != 0) {
    set_data_4(from.data_4());
  }
  if (from.data_5() != 0) {
    set_data_5(from.data_5());
  }
  if (from.data_6() != 0) {
    set_data_6(from.data_6());
  }
  if (from.data_7() != 0) {
    set_data_7(from.data_7());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void INV_L_REQUEST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.INV_L_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INV_L_REQUEST::CopyFrom(const INV_L_REQUEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.INV_L_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INV_L_REQUEST::IsInitialized() const {
  return true;
}

void INV_L_REQUEST::Swap(INV_L_REQUEST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INV_L_REQUEST::InternalSwap(INV_L_REQUEST* other) {
  using std::swap;
  swap(data_0_, other->data_0_);
  swap(data_1_, other->data_1_);
  swap(data_2_, other->data_2_);
  swap(data_3_, other->data_3_);
  swap(data_4_, other->data_4_);
  swap(data_5_, other->data_5_);
  swap(data_6_, other->data_6_);
  swap(data_7_, other->data_7_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata INV_L_REQUEST::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void INV_R_REQUEST::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INV_R_REQUEST::kData0FieldNumber;
const int INV_R_REQUEST::kData1FieldNumber;
const int INV_R_REQUEST::kData2FieldNumber;
const int INV_R_REQUEST::kData3FieldNumber;
const int INV_R_REQUEST::kData4FieldNumber;
const int INV_R_REQUEST::kData5FieldNumber;
const int INV_R_REQUEST::kData6FieldNumber;
const int INV_R_REQUEST::kData7FieldNumber;
const int INV_R_REQUEST::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INV_R_REQUEST::INV_R_REQUEST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_INV_R_REQUEST.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.INV_R_REQUEST)
}
INV_R_REQUEST::INV_R_REQUEST(const INV_R_REQUEST& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_0_, &from.data_0_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.INV_R_REQUEST)
}

void INV_R_REQUEST::SharedCtor() {
  ::memset(&data_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
}

INV_R_REQUEST::~INV_R_REQUEST() {
  // @@protoc_insertion_point(destructor:primary.INV_R_REQUEST)
  SharedDtor();
}

void INV_R_REQUEST::SharedDtor() {
}

void INV_R_REQUEST::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* INV_R_REQUEST::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const INV_R_REQUEST& INV_R_REQUEST::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_INV_R_REQUEST.base);
  return *internal_default_instance();
}


void INV_R_REQUEST::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.INV_R_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&data_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&data_0_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool INV_R_REQUEST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.INV_R_REQUEST)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data_0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_4 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_5 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_6 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_7 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.INV_R_REQUEST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.INV_R_REQUEST)
  return false;
#undef DO_
}

void INV_R_REQUEST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.INV_R_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data_0(), output);
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_1(), output);
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->data_2(), output);
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->data_3(), output);
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_4(), output);
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_5(), output);
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->data_6(), output);
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->data_7(), output);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.INV_R_REQUEST)
}

::google::protobuf::uint8* INV_R_REQUEST::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.INV_R_REQUEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data_0(), target);
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_1(), target);
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->data_2(), target);
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->data_3(), target);
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_4(), target);
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_5(), target);
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->data_6(), target);
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->data_7(), target);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.INV_R_REQUEST)
  return target;
}

size_t INV_R_REQUEST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.INV_R_REQUEST)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 data_0 = 1;
  if (this->data_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_0());
  }

  // uint32 data_1 = 2;
  if (this->data_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_1());
  }

  // uint32 data_2 = 3;
  if (this->data_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_2());
  }

  // uint32 data_3 = 4;
  if (this->data_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_3());
  }

  // uint32 data_4 = 5;
  if (this->data_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_4());
  }

  // uint32 data_5 = 6;
  if (this->data_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_5());
  }

  // uint32 data_6 = 7;
  if (this->data_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_6());
  }

  // uint32 data_7 = 8;
  if (this->data_7() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_7());
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void INV_R_REQUEST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.INV_R_REQUEST)
  GOOGLE_DCHECK_NE(&from, this);
  const INV_R_REQUEST* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const INV_R_REQUEST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.INV_R_REQUEST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.INV_R_REQUEST)
    MergeFrom(*source);
  }
}

void INV_R_REQUEST::MergeFrom(const INV_R_REQUEST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.INV_R_REQUEST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_0() != 0) {
    set_data_0(from.data_0());
  }
  if (from.data_1() != 0) {
    set_data_1(from.data_1());
  }
  if (from.data_2() != 0) {
    set_data_2(from.data_2());
  }
  if (from.data_3() != 0) {
    set_data_3(from.data_3());
  }
  if (from.data_4() != 0) {
    set_data_4(from.data_4());
  }
  if (from.data_5() != 0) {
    set_data_5(from.data_5());
  }
  if (from.data_6() != 0) {
    set_data_6(from.data_6());
  }
  if (from.data_7() != 0) {
    set_data_7(from.data_7());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void INV_R_REQUEST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.INV_R_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INV_R_REQUEST::CopyFrom(const INV_R_REQUEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.INV_R_REQUEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INV_R_REQUEST::IsInitialized() const {
  return true;
}

void INV_R_REQUEST::Swap(INV_R_REQUEST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INV_R_REQUEST::InternalSwap(INV_R_REQUEST* other) {
  using std::swap;
  swap(data_0_, other->data_0_);
  swap(data_1_, other->data_1_);
  swap(data_2_, other->data_2_);
  swap(data_3_, other->data_3_);
  swap(data_4_, other->data_4_);
  swap(data_5_, other->data_5_);
  swap(data_6_, other->data_6_);
  swap(data_7_, other->data_7_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata INV_R_REQUEST::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void INV_L_RESPONSE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INV_L_RESPONSE::kRegIdFieldNumber;
const int INV_L_RESPONSE::kData0FieldNumber;
const int INV_L_RESPONSE::kData1FieldNumber;
const int INV_L_RESPONSE::kData2FieldNumber;
const int INV_L_RESPONSE::kData3FieldNumber;
const int INV_L_RESPONSE::kData4FieldNumber;
const int INV_L_RESPONSE::kData5FieldNumber;
const int INV_L_RESPONSE::kData6FieldNumber;
const int INV_L_RESPONSE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INV_L_RESPONSE::INV_L_RESPONSE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_INV_L_RESPONSE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.INV_L_RESPONSE)
}
INV_L_RESPONSE::INV_L_RESPONSE(const INV_L_RESPONSE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reg_id_, &from.reg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.INV_L_RESPONSE)
}

void INV_L_RESPONSE::SharedCtor() {
  ::memset(&reg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
}

INV_L_RESPONSE::~INV_L_RESPONSE() {
  // @@protoc_insertion_point(destructor:primary.INV_L_RESPONSE)
  SharedDtor();
}

void INV_L_RESPONSE::SharedDtor() {
}

void INV_L_RESPONSE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* INV_L_RESPONSE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const INV_L_RESPONSE& INV_L_RESPONSE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_INV_L_RESPONSE.base);
  return *internal_default_instance();
}


void INV_L_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.INV_L_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool INV_L_RESPONSE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.INV_L_RESPONSE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_6 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.INV_L_RESPONSE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.INV_L_RESPONSE)
  return false;
#undef DO_
}

void INV_L_RESPONSE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.INV_L_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reg_id(), output);
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_0(), output);
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->data_1(), output);
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->data_2(), output);
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_3(), output);
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_4(), output);
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->data_5(), output);
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->data_6(), output);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.INV_L_RESPONSE)
}

::google::protobuf::uint8* INV_L_RESPONSE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.INV_L_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reg_id(), target);
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_0(), target);
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->data_1(), target);
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->data_2(), target);
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_3(), target);
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_4(), target);
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->data_5(), target);
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->data_6(), target);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.INV_L_RESPONSE)
  return target;
}

size_t INV_L_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.INV_L_RESPONSE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reg_id());
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_0());
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_1());
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_2());
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_3());
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_4());
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_5());
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_6());
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void INV_L_RESPONSE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.INV_L_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const INV_L_RESPONSE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const INV_L_RESPONSE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.INV_L_RESPONSE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.INV_L_RESPONSE)
    MergeFrom(*source);
  }
}

void INV_L_RESPONSE::MergeFrom(const INV_L_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.INV_L_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reg_id() != 0) {
    set_reg_id(from.reg_id());
  }
  if (from.data_0() != 0) {
    set_data_0(from.data_0());
  }
  if (from.data_1() != 0) {
    set_data_1(from.data_1());
  }
  if (from.data_2() != 0) {
    set_data_2(from.data_2());
  }
  if (from.data_3() != 0) {
    set_data_3(from.data_3());
  }
  if (from.data_4() != 0) {
    set_data_4(from.data_4());
  }
  if (from.data_5() != 0) {
    set_data_5(from.data_5());
  }
  if (from.data_6() != 0) {
    set_data_6(from.data_6());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void INV_L_RESPONSE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.INV_L_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INV_L_RESPONSE::CopyFrom(const INV_L_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.INV_L_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INV_L_RESPONSE::IsInitialized() const {
  return true;
}

void INV_L_RESPONSE::Swap(INV_L_RESPONSE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INV_L_RESPONSE::InternalSwap(INV_L_RESPONSE* other) {
  using std::swap;
  swap(reg_id_, other->reg_id_);
  swap(data_0_, other->data_0_);
  swap(data_1_, other->data_1_);
  swap(data_2_, other->data_2_);
  swap(data_3_, other->data_3_);
  swap(data_4_, other->data_4_);
  swap(data_5_, other->data_5_);
  swap(data_6_, other->data_6_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata INV_L_RESPONSE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void INV_R_RESPONSE::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int INV_R_RESPONSE::kRegIdFieldNumber;
const int INV_R_RESPONSE::kData0FieldNumber;
const int INV_R_RESPONSE::kData1FieldNumber;
const int INV_R_RESPONSE::kData2FieldNumber;
const int INV_R_RESPONSE::kData3FieldNumber;
const int INV_R_RESPONSE::kData4FieldNumber;
const int INV_R_RESPONSE::kData5FieldNumber;
const int INV_R_RESPONSE::kData6FieldNumber;
const int INV_R_RESPONSE::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

INV_R_RESPONSE::INV_R_RESPONSE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_INV_R_RESPONSE.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.INV_R_RESPONSE)
}
INV_R_RESPONSE::INV_R_RESPONSE(const INV_R_RESPONSE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reg_id_, &from.reg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_inner_timestamp_) -
    reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
  // @@protoc_insertion_point(copy_constructor:primary.INV_R_RESPONSE)
}

void INV_R_RESPONSE::SharedCtor() {
  ::memset(&reg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
}

INV_R_RESPONSE::~INV_R_RESPONSE() {
  // @@protoc_insertion_point(destructor:primary.INV_R_RESPONSE)
  SharedDtor();
}

void INV_R_RESPONSE::SharedDtor() {
}

void INV_R_RESPONSE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* INV_R_RESPONSE::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const INV_R_RESPONSE& INV_R_RESPONSE::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_INV_R_RESPONSE.base);
  return *internal_default_instance();
}


void INV_R_RESPONSE::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.INV_R_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_inner_timestamp_) -
      reinterpret_cast<char*>(&reg_id_)) + sizeof(_inner_timestamp_));
  _internal_metadata_.Clear();
}

bool INV_R_RESPONSE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.INV_R_RESPONSE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_6 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _inner_timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.INV_R_RESPONSE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.INV_R_RESPONSE)
  return false;
#undef DO_
}

void INV_R_RESPONSE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.INV_R_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reg_id(), output);
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_0(), output);
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->data_1(), output);
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->data_2(), output);
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->data_3(), output);
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->data_4(), output);
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->data_5(), output);
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->data_6(), output);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.INV_R_RESPONSE)
}

::google::protobuf::uint8* INV_R_RESPONSE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.INV_R_RESPONSE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reg_id(), target);
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_0(), target);
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->data_1(), target);
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->data_2(), target);
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->data_3(), target);
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->data_4(), target);
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->data_5(), target);
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->data_6(), target);
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.INV_R_RESPONSE)
  return target;
}

size_t INV_R_RESPONSE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.INV_R_RESPONSE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reg_id = 1;
  if (this->reg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reg_id());
  }

  // uint32 data_0 = 2;
  if (this->data_0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_0());
  }

  // uint32 data_1 = 3;
  if (this->data_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_1());
  }

  // uint32 data_2 = 4;
  if (this->data_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_2());
  }

  // uint32 data_3 = 5;
  if (this->data_3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_3());
  }

  // uint32 data_4 = 6;
  if (this->data_4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_4());
  }

  // uint32 data_5 = 7;
  if (this->data_5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_5());
  }

  // uint32 data_6 = 8;
  if (this->data_6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_6());
  }

  // uint64 _inner_timestamp = 9;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void INV_R_RESPONSE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.INV_R_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  const INV_R_RESPONSE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const INV_R_RESPONSE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.INV_R_RESPONSE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.INV_R_RESPONSE)
    MergeFrom(*source);
  }
}

void INV_R_RESPONSE::MergeFrom(const INV_R_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.INV_R_RESPONSE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reg_id() != 0) {
    set_reg_id(from.reg_id());
  }
  if (from.data_0() != 0) {
    set_data_0(from.data_0());
  }
  if (from.data_1() != 0) {
    set_data_1(from.data_1());
  }
  if (from.data_2() != 0) {
    set_data_2(from.data_2());
  }
  if (from.data_3() != 0) {
    set_data_3(from.data_3());
  }
  if (from.data_4() != 0) {
    set_data_4(from.data_4());
  }
  if (from.data_5() != 0) {
    set_data_5(from.data_5());
  }
  if (from.data_6() != 0) {
    set_data_6(from.data_6());
  }
  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void INV_R_RESPONSE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.INV_R_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void INV_R_RESPONSE::CopyFrom(const INV_R_RESPONSE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.INV_R_RESPONSE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool INV_R_RESPONSE::IsInitialized() const {
  return true;
}

void INV_R_RESPONSE::Swap(INV_R_RESPONSE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void INV_R_RESPONSE::InternalSwap(INV_R_RESPONSE* other) {
  using std::swap;
  swap(reg_id_, other->reg_id_);
  swap(data_0_, other->data_0_);
  swap(data_1_, other->data_1_);
  swap(data_2_, other->data_2_);
  swap(data_3_, other->data_3_);
  swap(data_4_, other->data_4_);
  swap(data_5_, other->data_5_);
  swap(data_6_, other->data_6_);
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata INV_R_RESPONSE::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_0_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_0_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_0_TX)
}
FLASH_CELLBOARD_0_TX::FLASH_CELLBOARD_0_TX(const FLASH_CELLBOARD_0_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_0_TX)
}

void FLASH_CELLBOARD_0_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_0_TX::~FLASH_CELLBOARD_0_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_0_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_0_TX::SharedDtor() {
}

void FLASH_CELLBOARD_0_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_0_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_0_TX& FLASH_CELLBOARD_0_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_0_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_0_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_0_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_0_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_0_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_0_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_0_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_0_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_0_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_0_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_0_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_0_TX)
  return target;
}

size_t FLASH_CELLBOARD_0_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_0_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_0_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_0_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_0_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_0_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_0_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_0_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_0_TX::MergeFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_0_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_0_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_0_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_0_TX::CopyFrom(const FLASH_CELLBOARD_0_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_0_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_TX::Swap(FLASH_CELLBOARD_0_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_0_TX::InternalSwap(FLASH_CELLBOARD_0_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_0_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_0_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_0_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_0_RX)
}
FLASH_CELLBOARD_0_RX::FLASH_CELLBOARD_0_RX(const FLASH_CELLBOARD_0_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_0_RX)
}

void FLASH_CELLBOARD_0_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_0_RX::~FLASH_CELLBOARD_0_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_0_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_0_RX::SharedDtor() {
}

void FLASH_CELLBOARD_0_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_0_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_0_RX& FLASH_CELLBOARD_0_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_0_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_0_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_0_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_0_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_0_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_0_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_0_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_0_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_0_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_0_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_0_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_0_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_0_RX)
  return target;
}

size_t FLASH_CELLBOARD_0_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_0_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_0_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_0_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_0_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_0_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_0_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_0_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_0_RX::MergeFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_0_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_0_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_0_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_0_RX::CopyFrom(const FLASH_CELLBOARD_0_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_0_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_0_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_0_RX::Swap(FLASH_CELLBOARD_0_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_0_RX::InternalSwap(FLASH_CELLBOARD_0_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_0_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_1_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_1_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_1_TX)
}
FLASH_CELLBOARD_1_TX::FLASH_CELLBOARD_1_TX(const FLASH_CELLBOARD_1_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_1_TX)
}

void FLASH_CELLBOARD_1_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_1_TX::~FLASH_CELLBOARD_1_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_1_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_1_TX::SharedDtor() {
}

void FLASH_CELLBOARD_1_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_1_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_1_TX& FLASH_CELLBOARD_1_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_1_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_1_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_1_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_1_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_1_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_1_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_1_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_1_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_1_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_1_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_1_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_1_TX)
  return target;
}

size_t FLASH_CELLBOARD_1_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_1_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_1_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_1_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_1_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_1_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_1_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_1_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_1_TX::MergeFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_1_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_1_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_1_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_1_TX::CopyFrom(const FLASH_CELLBOARD_1_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_1_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_TX::Swap(FLASH_CELLBOARD_1_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_1_TX::InternalSwap(FLASH_CELLBOARD_1_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_1_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_1_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_1_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_1_RX)
}
FLASH_CELLBOARD_1_RX::FLASH_CELLBOARD_1_RX(const FLASH_CELLBOARD_1_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_1_RX)
}

void FLASH_CELLBOARD_1_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_1_RX::~FLASH_CELLBOARD_1_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_1_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_1_RX::SharedDtor() {
}

void FLASH_CELLBOARD_1_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_1_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_1_RX& FLASH_CELLBOARD_1_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_1_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_1_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_1_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_1_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_1_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_1_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_1_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_1_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_1_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_1_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_1_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_1_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_1_RX)
  return target;
}

size_t FLASH_CELLBOARD_1_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_1_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_1_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_1_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_1_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_1_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_1_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_1_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_1_RX::MergeFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_1_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_1_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_1_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_1_RX::CopyFrom(const FLASH_CELLBOARD_1_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_1_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_1_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_1_RX::Swap(FLASH_CELLBOARD_1_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_1_RX::InternalSwap(FLASH_CELLBOARD_1_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_1_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_2_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_2_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_2_TX)
}
FLASH_CELLBOARD_2_TX::FLASH_CELLBOARD_2_TX(const FLASH_CELLBOARD_2_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_2_TX)
}

void FLASH_CELLBOARD_2_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_2_TX::~FLASH_CELLBOARD_2_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_2_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_2_TX::SharedDtor() {
}

void FLASH_CELLBOARD_2_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_2_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_2_TX& FLASH_CELLBOARD_2_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_2_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_2_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_2_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_2_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_2_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_2_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_2_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_2_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_2_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_2_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_2_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_2_TX)
  return target;
}

size_t FLASH_CELLBOARD_2_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_2_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_2_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_2_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_2_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_2_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_2_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_2_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_2_TX::MergeFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_2_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_2_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_2_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_2_TX::CopyFrom(const FLASH_CELLBOARD_2_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_2_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_TX::Swap(FLASH_CELLBOARD_2_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_2_TX::InternalSwap(FLASH_CELLBOARD_2_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_2_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_2_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_2_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_2_RX)
}
FLASH_CELLBOARD_2_RX::FLASH_CELLBOARD_2_RX(const FLASH_CELLBOARD_2_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_2_RX)
}

void FLASH_CELLBOARD_2_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_2_RX::~FLASH_CELLBOARD_2_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_2_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_2_RX::SharedDtor() {
}

void FLASH_CELLBOARD_2_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_2_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_2_RX& FLASH_CELLBOARD_2_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_2_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_2_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_2_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_2_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_2_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_2_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_2_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_2_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_2_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_2_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_2_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_2_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_2_RX)
  return target;
}

size_t FLASH_CELLBOARD_2_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_2_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_2_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_2_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_2_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_2_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_2_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_2_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_2_RX::MergeFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_2_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_2_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_2_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_2_RX::CopyFrom(const FLASH_CELLBOARD_2_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_2_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_2_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_2_RX::Swap(FLASH_CELLBOARD_2_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_2_RX::InternalSwap(FLASH_CELLBOARD_2_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_2_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_3_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_3_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_3_TX)
}
FLASH_CELLBOARD_3_TX::FLASH_CELLBOARD_3_TX(const FLASH_CELLBOARD_3_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_3_TX)
}

void FLASH_CELLBOARD_3_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_3_TX::~FLASH_CELLBOARD_3_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_3_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_3_TX::SharedDtor() {
}

void FLASH_CELLBOARD_3_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_3_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_3_TX& FLASH_CELLBOARD_3_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_3_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_3_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_3_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_3_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_3_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_3_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_3_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_3_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_3_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_3_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_3_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_3_TX)
  return target;
}

size_t FLASH_CELLBOARD_3_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_3_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_3_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_3_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_3_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_3_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_3_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_3_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_3_TX::MergeFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_3_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_3_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_3_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_3_TX::CopyFrom(const FLASH_CELLBOARD_3_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_3_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_TX::Swap(FLASH_CELLBOARD_3_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_3_TX::InternalSwap(FLASH_CELLBOARD_3_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_3_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_3_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_3_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_3_RX)
}
FLASH_CELLBOARD_3_RX::FLASH_CELLBOARD_3_RX(const FLASH_CELLBOARD_3_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_3_RX)
}

void FLASH_CELLBOARD_3_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_3_RX::~FLASH_CELLBOARD_3_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_3_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_3_RX::SharedDtor() {
}

void FLASH_CELLBOARD_3_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_3_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_3_RX& FLASH_CELLBOARD_3_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_3_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_3_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_3_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_3_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_3_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_3_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_3_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_3_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_3_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_3_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_3_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_3_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_3_RX)
  return target;
}

size_t FLASH_CELLBOARD_3_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_3_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_3_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_3_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_3_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_3_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_3_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_3_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_3_RX::MergeFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_3_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_3_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_3_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_3_RX::CopyFrom(const FLASH_CELLBOARD_3_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_3_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_3_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_3_RX::Swap(FLASH_CELLBOARD_3_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_3_RX::InternalSwap(FLASH_CELLBOARD_3_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_3_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_4_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_4_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_4_TX)
}
FLASH_CELLBOARD_4_TX::FLASH_CELLBOARD_4_TX(const FLASH_CELLBOARD_4_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_4_TX)
}

void FLASH_CELLBOARD_4_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_4_TX::~FLASH_CELLBOARD_4_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_4_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_4_TX::SharedDtor() {
}

void FLASH_CELLBOARD_4_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_4_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_4_TX& FLASH_CELLBOARD_4_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_4_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_4_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_4_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_4_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_4_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_4_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_4_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_4_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_4_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_4_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_4_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_4_TX)
  return target;
}

size_t FLASH_CELLBOARD_4_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_4_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_4_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_4_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_4_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_4_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_4_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_4_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_4_TX::MergeFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_4_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_4_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_4_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_4_TX::CopyFrom(const FLASH_CELLBOARD_4_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_4_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_TX::Swap(FLASH_CELLBOARD_4_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_4_TX::InternalSwap(FLASH_CELLBOARD_4_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_4_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_4_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_4_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_4_RX)
}
FLASH_CELLBOARD_4_RX::FLASH_CELLBOARD_4_RX(const FLASH_CELLBOARD_4_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_4_RX)
}

void FLASH_CELLBOARD_4_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_4_RX::~FLASH_CELLBOARD_4_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_4_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_4_RX::SharedDtor() {
}

void FLASH_CELLBOARD_4_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_4_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_4_RX& FLASH_CELLBOARD_4_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_4_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_4_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_4_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_4_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_4_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_4_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_4_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_4_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_4_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_4_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_4_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_4_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_4_RX)
  return target;
}

size_t FLASH_CELLBOARD_4_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_4_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_4_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_4_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_4_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_4_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_4_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_4_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_4_RX::MergeFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_4_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_4_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_4_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_4_RX::CopyFrom(const FLASH_CELLBOARD_4_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_4_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_4_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_4_RX::Swap(FLASH_CELLBOARD_4_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_4_RX::InternalSwap(FLASH_CELLBOARD_4_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_4_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_5_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_5_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_5_TX)
}
FLASH_CELLBOARD_5_TX::FLASH_CELLBOARD_5_TX(const FLASH_CELLBOARD_5_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_5_TX)
}

void FLASH_CELLBOARD_5_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_5_TX::~FLASH_CELLBOARD_5_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_5_TX)
  SharedDtor();
}

void FLASH_CELLBOARD_5_TX::SharedDtor() {
}

void FLASH_CELLBOARD_5_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_5_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_5_TX& FLASH_CELLBOARD_5_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_TX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_5_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_5_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_5_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_5_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_5_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_5_TX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_5_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_5_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_5_TX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_5_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_5_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_5_TX)
  return target;
}

size_t FLASH_CELLBOARD_5_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_5_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_5_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_5_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_5_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_5_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_5_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_5_TX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_5_TX::MergeFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_5_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_5_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_5_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_5_TX::CopyFrom(const FLASH_CELLBOARD_5_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_5_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_TX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_TX::Swap(FLASH_CELLBOARD_5_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_5_TX::InternalSwap(FLASH_CELLBOARD_5_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_5_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_CELLBOARD_5_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_CELLBOARD_5_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_CELLBOARD_5_RX)
}
FLASH_CELLBOARD_5_RX::FLASH_CELLBOARD_5_RX(const FLASH_CELLBOARD_5_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_CELLBOARD_5_RX)
}

void FLASH_CELLBOARD_5_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_CELLBOARD_5_RX::~FLASH_CELLBOARD_5_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_CELLBOARD_5_RX)
  SharedDtor();
}

void FLASH_CELLBOARD_5_RX::SharedDtor() {
}

void FLASH_CELLBOARD_5_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_CELLBOARD_5_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_CELLBOARD_5_RX& FLASH_CELLBOARD_5_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_CELLBOARD_5_RX.base);
  return *internal_default_instance();
}


void FLASH_CELLBOARD_5_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_CELLBOARD_5_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_CELLBOARD_5_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_CELLBOARD_5_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_CELLBOARD_5_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_CELLBOARD_5_RX)
  return false;
#undef DO_
}

void FLASH_CELLBOARD_5_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_CELLBOARD_5_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_CELLBOARD_5_RX)
}

::google::protobuf::uint8* FLASH_CELLBOARD_5_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_CELLBOARD_5_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_CELLBOARD_5_RX)
  return target;
}

size_t FLASH_CELLBOARD_5_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_CELLBOARD_5_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_CELLBOARD_5_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_CELLBOARD_5_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_CELLBOARD_5_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_CELLBOARD_5_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_CELLBOARD_5_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_CELLBOARD_5_RX)
    MergeFrom(*source);
  }
}

void FLASH_CELLBOARD_5_RX::MergeFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_CELLBOARD_5_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_CELLBOARD_5_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_CELLBOARD_5_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_CELLBOARD_5_RX::CopyFrom(const FLASH_CELLBOARD_5_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_CELLBOARD_5_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_CELLBOARD_5_RX::IsInitialized() const {
  return true;
}

void FLASH_CELLBOARD_5_RX::Swap(FLASH_CELLBOARD_5_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_CELLBOARD_5_RX::InternalSwap(FLASH_CELLBOARD_5_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_CELLBOARD_5_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_BMS_HV_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_BMS_HV_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_BMS_HV_TX::FLASH_BMS_HV_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_BMS_HV_TX)
}
FLASH_BMS_HV_TX::FLASH_BMS_HV_TX(const FLASH_BMS_HV_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_BMS_HV_TX)
}

void FLASH_BMS_HV_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_BMS_HV_TX::~FLASH_BMS_HV_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_BMS_HV_TX)
  SharedDtor();
}

void FLASH_BMS_HV_TX::SharedDtor() {
}

void FLASH_BMS_HV_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_BMS_HV_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_BMS_HV_TX& FLASH_BMS_HV_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_TX.base);
  return *internal_default_instance();
}


void FLASH_BMS_HV_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_BMS_HV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_BMS_HV_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_BMS_HV_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_BMS_HV_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_BMS_HV_TX)
  return false;
#undef DO_
}

void FLASH_BMS_HV_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_BMS_HV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_BMS_HV_TX)
}

::google::protobuf::uint8* FLASH_BMS_HV_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_BMS_HV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_BMS_HV_TX)
  return target;
}

size_t FLASH_BMS_HV_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_BMS_HV_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_BMS_HV_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_BMS_HV_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_BMS_HV_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_BMS_HV_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_BMS_HV_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_BMS_HV_TX)
    MergeFrom(*source);
  }
}

void FLASH_BMS_HV_TX::MergeFrom(const FLASH_BMS_HV_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_BMS_HV_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_BMS_HV_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_BMS_HV_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_BMS_HV_TX::CopyFrom(const FLASH_BMS_HV_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_BMS_HV_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_BMS_HV_TX::IsInitialized() const {
  return true;
}

void FLASH_BMS_HV_TX::Swap(FLASH_BMS_HV_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_BMS_HV_TX::InternalSwap(FLASH_BMS_HV_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_BMS_HV_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_BMS_HV_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_BMS_HV_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_BMS_HV_RX::FLASH_BMS_HV_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_BMS_HV_RX)
}
FLASH_BMS_HV_RX::FLASH_BMS_HV_RX(const FLASH_BMS_HV_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_BMS_HV_RX)
}

void FLASH_BMS_HV_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_BMS_HV_RX::~FLASH_BMS_HV_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_BMS_HV_RX)
  SharedDtor();
}

void FLASH_BMS_HV_RX::SharedDtor() {
}

void FLASH_BMS_HV_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_BMS_HV_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_BMS_HV_RX& FLASH_BMS_HV_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_BMS_HV_RX.base);
  return *internal_default_instance();
}


void FLASH_BMS_HV_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_BMS_HV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_BMS_HV_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_BMS_HV_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_BMS_HV_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_BMS_HV_RX)
  return false;
#undef DO_
}

void FLASH_BMS_HV_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_BMS_HV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_BMS_HV_RX)
}

::google::protobuf::uint8* FLASH_BMS_HV_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_BMS_HV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_BMS_HV_RX)
  return target;
}

size_t FLASH_BMS_HV_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_BMS_HV_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_BMS_HV_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_BMS_HV_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_BMS_HV_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_BMS_HV_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_BMS_HV_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_BMS_HV_RX)
    MergeFrom(*source);
  }
}

void FLASH_BMS_HV_RX::MergeFrom(const FLASH_BMS_HV_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_BMS_HV_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_BMS_HV_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_BMS_HV_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_BMS_HV_RX::CopyFrom(const FLASH_BMS_HV_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_BMS_HV_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_BMS_HV_RX::IsInitialized() const {
  return true;
}

void FLASH_BMS_HV_RX::Swap(FLASH_BMS_HV_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_BMS_HV_RX::InternalSwap(FLASH_BMS_HV_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_BMS_HV_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_BMS_LV_TX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_BMS_LV_TX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_BMS_LV_TX::FLASH_BMS_LV_TX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_TX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_BMS_LV_TX)
}
FLASH_BMS_LV_TX::FLASH_BMS_LV_TX(const FLASH_BMS_LV_TX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_BMS_LV_TX)
}

void FLASH_BMS_LV_TX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_BMS_LV_TX::~FLASH_BMS_LV_TX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_BMS_LV_TX)
  SharedDtor();
}

void FLASH_BMS_LV_TX::SharedDtor() {
}

void FLASH_BMS_LV_TX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_BMS_LV_TX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_BMS_LV_TX& FLASH_BMS_LV_TX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_TX.base);
  return *internal_default_instance();
}


void FLASH_BMS_LV_TX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_BMS_LV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_BMS_LV_TX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_BMS_LV_TX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_BMS_LV_TX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_BMS_LV_TX)
  return false;
#undef DO_
}

void FLASH_BMS_LV_TX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_BMS_LV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_BMS_LV_TX)
}

::google::protobuf::uint8* FLASH_BMS_LV_TX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_BMS_LV_TX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_BMS_LV_TX)
  return target;
}

size_t FLASH_BMS_LV_TX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_BMS_LV_TX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_BMS_LV_TX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_BMS_LV_TX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_BMS_LV_TX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_BMS_LV_TX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_BMS_LV_TX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_BMS_LV_TX)
    MergeFrom(*source);
  }
}

void FLASH_BMS_LV_TX::MergeFrom(const FLASH_BMS_LV_TX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_BMS_LV_TX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_BMS_LV_TX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_BMS_LV_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_BMS_LV_TX::CopyFrom(const FLASH_BMS_LV_TX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_BMS_LV_TX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_BMS_LV_TX::IsInitialized() const {
  return true;
}

void FLASH_BMS_LV_TX::Swap(FLASH_BMS_LV_TX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_BMS_LV_TX::InternalSwap(FLASH_BMS_LV_TX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_BMS_LV_TX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FLASH_BMS_LV_RX::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FLASH_BMS_LV_RX::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FLASH_BMS_LV_RX::FLASH_BMS_LV_RX()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_RX.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.FLASH_BMS_LV_RX)
}
FLASH_BMS_LV_RX::FLASH_BMS_LV_RX(const FLASH_BMS_LV_RX& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.FLASH_BMS_LV_RX)
}

void FLASH_BMS_LV_RX::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

FLASH_BMS_LV_RX::~FLASH_BMS_LV_RX() {
  // @@protoc_insertion_point(destructor:primary.FLASH_BMS_LV_RX)
  SharedDtor();
}

void FLASH_BMS_LV_RX::SharedDtor() {
}

void FLASH_BMS_LV_RX::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FLASH_BMS_LV_RX::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FLASH_BMS_LV_RX& FLASH_BMS_LV_RX::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_FLASH_BMS_LV_RX.base);
  return *internal_default_instance();
}


void FLASH_BMS_LV_RX::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.FLASH_BMS_LV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FLASH_BMS_LV_RX::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.FLASH_BMS_LV_RX)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.FLASH_BMS_LV_RX)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.FLASH_BMS_LV_RX)
  return false;
#undef DO_
}

void FLASH_BMS_LV_RX::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.FLASH_BMS_LV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.FLASH_BMS_LV_RX)
}

::google::protobuf::uint8* FLASH_BMS_LV_RX::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.FLASH_BMS_LV_RX)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.FLASH_BMS_LV_RX)
  return target;
}

size_t FLASH_BMS_LV_RX::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.FLASH_BMS_LV_RX)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FLASH_BMS_LV_RX::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.FLASH_BMS_LV_RX)
  GOOGLE_DCHECK_NE(&from, this);
  const FLASH_BMS_LV_RX* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FLASH_BMS_LV_RX>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.FLASH_BMS_LV_RX)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.FLASH_BMS_LV_RX)
    MergeFrom(*source);
  }
}

void FLASH_BMS_LV_RX::MergeFrom(const FLASH_BMS_LV_RX& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.FLASH_BMS_LV_RX)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void FLASH_BMS_LV_RX::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.FLASH_BMS_LV_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FLASH_BMS_LV_RX::CopyFrom(const FLASH_BMS_LV_RX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.FLASH_BMS_LV_RX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FLASH_BMS_LV_RX::IsInitialized() const {
  return true;
}

void FLASH_BMS_LV_RX::Swap(FLASH_BMS_LV_RX* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FLASH_BMS_LV_RX::InternalSwap(FLASH_BMS_LV_RX* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FLASH_BMS_LV_RX::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_NLG5_CTL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_NLG5_CTL::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_NLG5_CTL::BRUSA_NLG5_CTL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_NLG5_CTL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_NLG5_CTL)
}
BRUSA_NLG5_CTL::BRUSA_NLG5_CTL(const BRUSA_NLG5_CTL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_NLG5_CTL)
}

void BRUSA_NLG5_CTL::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_NLG5_CTL::~BRUSA_NLG5_CTL() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_NLG5_CTL)
  SharedDtor();
}

void BRUSA_NLG5_CTL::SharedDtor() {
}

void BRUSA_NLG5_CTL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_NLG5_CTL::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_NLG5_CTL& BRUSA_NLG5_CTL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_NLG5_CTL.base);
  return *internal_default_instance();
}


void BRUSA_NLG5_CTL::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_NLG5_CTL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_NLG5_CTL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_NLG5_CTL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_NLG5_CTL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_NLG5_CTL)
  return false;
#undef DO_
}

void BRUSA_NLG5_CTL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_NLG5_CTL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_NLG5_CTL)
}

::google::protobuf::uint8* BRUSA_NLG5_CTL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_NLG5_CTL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_NLG5_CTL)
  return target;
}

size_t BRUSA_NLG5_CTL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_NLG5_CTL)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_NLG5_CTL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_NLG5_CTL)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_NLG5_CTL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_NLG5_CTL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_NLG5_CTL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_NLG5_CTL)
    MergeFrom(*source);
  }
}

void BRUSA_NLG5_CTL::MergeFrom(const BRUSA_NLG5_CTL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_NLG5_CTL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_NLG5_CTL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_NLG5_CTL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_NLG5_CTL::CopyFrom(const BRUSA_NLG5_CTL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_NLG5_CTL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_NLG5_CTL::IsInitialized() const {
  return true;
}

void BRUSA_NLG5_CTL::Swap(BRUSA_NLG5_CTL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_NLG5_CTL::InternalSwap(BRUSA_NLG5_CTL* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_NLG5_CTL::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_ST::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_ST::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_ST::BRUSA_ST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_ST.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_ST)
}
BRUSA_ST::BRUSA_ST(const BRUSA_ST& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_ST)
}

void BRUSA_ST::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_ST::~BRUSA_ST() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_ST)
  SharedDtor();
}

void BRUSA_ST::SharedDtor() {
}

void BRUSA_ST::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_ST::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_ST& BRUSA_ST::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_ST.base);
  return *internal_default_instance();
}


void BRUSA_ST::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_ST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_ST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_ST)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_ST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_ST)
  return false;
#undef DO_
}

void BRUSA_ST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_ST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_ST)
}

::google::protobuf::uint8* BRUSA_ST::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_ST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_ST)
  return target;
}

size_t BRUSA_ST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_ST)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_ST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_ST)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_ST* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_ST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_ST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_ST)
    MergeFrom(*source);
  }
}

void BRUSA_ST::MergeFrom(const BRUSA_ST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_ST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_ST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_ST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_ST::CopyFrom(const BRUSA_ST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_ST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_ST::IsInitialized() const {
  return true;
}

void BRUSA_ST::Swap(BRUSA_ST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_ST::InternalSwap(BRUSA_ST* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_ST::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_ACT_I::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_ACT_I::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_ACT_I::BRUSA_ACT_I()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_ACT_I.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_ACT_I)
}
BRUSA_ACT_I::BRUSA_ACT_I(const BRUSA_ACT_I& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_ACT_I)
}

void BRUSA_ACT_I::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_ACT_I::~BRUSA_ACT_I() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_ACT_I)
  SharedDtor();
}

void BRUSA_ACT_I::SharedDtor() {
}

void BRUSA_ACT_I::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_ACT_I::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_ACT_I& BRUSA_ACT_I::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_ACT_I.base);
  return *internal_default_instance();
}


void BRUSA_ACT_I::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_ACT_I)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_ACT_I::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_ACT_I)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_ACT_I)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_ACT_I)
  return false;
#undef DO_
}

void BRUSA_ACT_I::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_ACT_I)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_ACT_I)
}

::google::protobuf::uint8* BRUSA_ACT_I::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_ACT_I)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_ACT_I)
  return target;
}

size_t BRUSA_ACT_I::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_ACT_I)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_ACT_I::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_ACT_I)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_ACT_I* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_ACT_I>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_ACT_I)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_ACT_I)
    MergeFrom(*source);
  }
}

void BRUSA_ACT_I::MergeFrom(const BRUSA_ACT_I& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_ACT_I)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_ACT_I::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_ACT_I)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_ACT_I::CopyFrom(const BRUSA_ACT_I& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_ACT_I)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_ACT_I::IsInitialized() const {
  return true;
}

void BRUSA_ACT_I::Swap(BRUSA_ACT_I* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_ACT_I::InternalSwap(BRUSA_ACT_I* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_ACT_I::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_ACT_II::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_ACT_II::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_ACT_II::BRUSA_ACT_II()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_ACT_II.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_ACT_II)
}
BRUSA_ACT_II::BRUSA_ACT_II(const BRUSA_ACT_II& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_ACT_II)
}

void BRUSA_ACT_II::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_ACT_II::~BRUSA_ACT_II() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_ACT_II)
  SharedDtor();
}

void BRUSA_ACT_II::SharedDtor() {
}

void BRUSA_ACT_II::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_ACT_II::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_ACT_II& BRUSA_ACT_II::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_ACT_II.base);
  return *internal_default_instance();
}


void BRUSA_ACT_II::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_ACT_II)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_ACT_II::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_ACT_II)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_ACT_II)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_ACT_II)
  return false;
#undef DO_
}

void BRUSA_ACT_II::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_ACT_II)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_ACT_II)
}

::google::protobuf::uint8* BRUSA_ACT_II::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_ACT_II)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_ACT_II)
  return target;
}

size_t BRUSA_ACT_II::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_ACT_II)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_ACT_II::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_ACT_II)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_ACT_II* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_ACT_II>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_ACT_II)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_ACT_II)
    MergeFrom(*source);
  }
}

void BRUSA_ACT_II::MergeFrom(const BRUSA_ACT_II& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_ACT_II)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_ACT_II::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_ACT_II)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_ACT_II::CopyFrom(const BRUSA_ACT_II& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_ACT_II)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_ACT_II::IsInitialized() const {
  return true;
}

void BRUSA_ACT_II::Swap(BRUSA_ACT_II* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_ACT_II::InternalSwap(BRUSA_ACT_II* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_ACT_II::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_TEMP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_TEMP::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_TEMP::BRUSA_TEMP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_TEMP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_TEMP)
}
BRUSA_TEMP::BRUSA_TEMP(const BRUSA_TEMP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_TEMP)
}

void BRUSA_TEMP::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_TEMP::~BRUSA_TEMP() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_TEMP)
  SharedDtor();
}

void BRUSA_TEMP::SharedDtor() {
}

void BRUSA_TEMP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_TEMP::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_TEMP& BRUSA_TEMP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_TEMP.base);
  return *internal_default_instance();
}


void BRUSA_TEMP::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_TEMP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_TEMP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_TEMP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_TEMP)
  return false;
#undef DO_
}

void BRUSA_TEMP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_TEMP)
}

::google::protobuf::uint8* BRUSA_TEMP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_TEMP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_TEMP)
  return target;
}

size_t BRUSA_TEMP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_TEMP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_TEMP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_TEMP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_TEMP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_TEMP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_TEMP)
    MergeFrom(*source);
  }
}

void BRUSA_TEMP::MergeFrom(const BRUSA_TEMP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_TEMP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_TEMP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_TEMP::CopyFrom(const BRUSA_TEMP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_TEMP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_TEMP::IsInitialized() const {
  return true;
}

void BRUSA_TEMP::Swap(BRUSA_TEMP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_TEMP::InternalSwap(BRUSA_TEMP* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_TEMP::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BRUSA_ERR::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BRUSA_ERR::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BRUSA_ERR::BRUSA_ERR()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BRUSA_ERR.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BRUSA_ERR)
}
BRUSA_ERR::BRUSA_ERR(const BRUSA_ERR& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BRUSA_ERR)
}

void BRUSA_ERR::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BRUSA_ERR::~BRUSA_ERR() {
  // @@protoc_insertion_point(destructor:primary.BRUSA_ERR)
  SharedDtor();
}

void BRUSA_ERR::SharedDtor() {
}

void BRUSA_ERR::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BRUSA_ERR::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BRUSA_ERR& BRUSA_ERR::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BRUSA_ERR.base);
  return *internal_default_instance();
}


void BRUSA_ERR::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BRUSA_ERR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BRUSA_ERR::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BRUSA_ERR)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BRUSA_ERR)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BRUSA_ERR)
  return false;
#undef DO_
}

void BRUSA_ERR::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BRUSA_ERR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BRUSA_ERR)
}

::google::protobuf::uint8* BRUSA_ERR::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BRUSA_ERR)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BRUSA_ERR)
  return target;
}

size_t BRUSA_ERR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BRUSA_ERR)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BRUSA_ERR::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BRUSA_ERR)
  GOOGLE_DCHECK_NE(&from, this);
  const BRUSA_ERR* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BRUSA_ERR>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BRUSA_ERR)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BRUSA_ERR)
    MergeFrom(*source);
  }
}

void BRUSA_ERR::MergeFrom(const BRUSA_ERR& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BRUSA_ERR)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BRUSA_ERR::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BRUSA_ERR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BRUSA_ERR::CopyFrom(const BRUSA_ERR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BRUSA_ERR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BRUSA_ERR::IsInitialized() const {
  return true;
}

void BRUSA_ERR::Swap(BRUSA_ERR* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BRUSA_ERR::InternalSwap(BRUSA_ERR* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BRUSA_ERR::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BMS_HV_CHIMERA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BMS_HV_CHIMERA::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BMS_HV_CHIMERA::BMS_HV_CHIMERA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_BMS_HV_CHIMERA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.BMS_HV_CHIMERA)
}
BMS_HV_CHIMERA::BMS_HV_CHIMERA(const BMS_HV_CHIMERA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.BMS_HV_CHIMERA)
}

void BMS_HV_CHIMERA::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

BMS_HV_CHIMERA::~BMS_HV_CHIMERA() {
  // @@protoc_insertion_point(destructor:primary.BMS_HV_CHIMERA)
  SharedDtor();
}

void BMS_HV_CHIMERA::SharedDtor() {
}

void BMS_HV_CHIMERA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BMS_HV_CHIMERA::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BMS_HV_CHIMERA& BMS_HV_CHIMERA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_BMS_HV_CHIMERA.base);
  return *internal_default_instance();
}


void BMS_HV_CHIMERA::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.BMS_HV_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BMS_HV_CHIMERA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.BMS_HV_CHIMERA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.BMS_HV_CHIMERA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.BMS_HV_CHIMERA)
  return false;
#undef DO_
}

void BMS_HV_CHIMERA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.BMS_HV_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.BMS_HV_CHIMERA)
}

::google::protobuf::uint8* BMS_HV_CHIMERA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.BMS_HV_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.BMS_HV_CHIMERA)
  return target;
}

size_t BMS_HV_CHIMERA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.BMS_HV_CHIMERA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BMS_HV_CHIMERA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.BMS_HV_CHIMERA)
  GOOGLE_DCHECK_NE(&from, this);
  const BMS_HV_CHIMERA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BMS_HV_CHIMERA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.BMS_HV_CHIMERA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.BMS_HV_CHIMERA)
    MergeFrom(*source);
  }
}

void BMS_HV_CHIMERA::MergeFrom(const BMS_HV_CHIMERA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.BMS_HV_CHIMERA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void BMS_HV_CHIMERA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.BMS_HV_CHIMERA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BMS_HV_CHIMERA::CopyFrom(const BMS_HV_CHIMERA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.BMS_HV_CHIMERA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BMS_HV_CHIMERA::IsInitialized() const {
  return true;
}

void BMS_HV_CHIMERA::Swap(BMS_HV_CHIMERA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BMS_HV_CHIMERA::InternalSwap(BMS_HV_CHIMERA* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BMS_HV_CHIMERA::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ECU_CHIMERA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ECU_CHIMERA::kInnerTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ECU_CHIMERA::ECU_CHIMERA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_ECU_CHIMERA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.ECU_CHIMERA)
}
ECU_CHIMERA::ECU_CHIMERA(const ECU_CHIMERA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _inner_timestamp_ = from._inner_timestamp_;
  // @@protoc_insertion_point(copy_constructor:primary.ECU_CHIMERA)
}

void ECU_CHIMERA::SharedCtor() {
  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
}

ECU_CHIMERA::~ECU_CHIMERA() {
  // @@protoc_insertion_point(destructor:primary.ECU_CHIMERA)
  SharedDtor();
}

void ECU_CHIMERA::SharedDtor() {
}

void ECU_CHIMERA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ECU_CHIMERA::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ECU_CHIMERA& ECU_CHIMERA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_ECU_CHIMERA.base);
  return *internal_default_instance();
}


void ECU_CHIMERA::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.ECU_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _inner_timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ECU_CHIMERA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.ECU_CHIMERA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 _inner_timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_inner_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.ECU_CHIMERA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.ECU_CHIMERA)
  return false;
#undef DO_
}

void ECU_CHIMERA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.ECU_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->_inner_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.ECU_CHIMERA)
}

::google::protobuf::uint8* ECU_CHIMERA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.ECU_CHIMERA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->_inner_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.ECU_CHIMERA)
  return target;
}

size_t ECU_CHIMERA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.ECU_CHIMERA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 _inner_timestamp = 1;
  if (this->_inner_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_inner_timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ECU_CHIMERA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.ECU_CHIMERA)
  GOOGLE_DCHECK_NE(&from, this);
  const ECU_CHIMERA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ECU_CHIMERA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.ECU_CHIMERA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.ECU_CHIMERA)
    MergeFrom(*source);
  }
}

void ECU_CHIMERA::MergeFrom(const ECU_CHIMERA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.ECU_CHIMERA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._inner_timestamp() != 0) {
    set__inner_timestamp(from._inner_timestamp());
  }
}

void ECU_CHIMERA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.ECU_CHIMERA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ECU_CHIMERA::CopyFrom(const ECU_CHIMERA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.ECU_CHIMERA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ECU_CHIMERA::IsInitialized() const {
  return true;
}

void ECU_CHIMERA::Swap(ECU_CHIMERA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ECU_CHIMERA::InternalSwap(ECU_CHIMERA* other) {
  using std::swap;
  swap(_inner_timestamp_, other->_inner_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ECU_CHIMERA::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pack::kBMSHVJMPTOBLTFieldNumber;
const int Pack::kBMSLVJMPTOBLTFieldNumber;
const int Pack::kSTEERVERSIONFieldNumber;
const int Pack::kDASVERSIONFieldNumber;
const int Pack::kHVVERSIONFieldNumber;
const int Pack::kLVVERSIONFieldNumber;
const int Pack::kTLMVERSIONFieldNumber;
const int Pack::kTIMESTAMPFieldNumber;
const int Pack::kSETTLMSTATUSFieldNumber;
const int Pack::kTLMSTATUSFieldNumber;
const int Pack::kSTEERSYSTEMSTATUSFieldNumber;
const int Pack::kHVVOLTAGEFieldNumber;
const int Pack::kHVCURRENTFieldNumber;
const int Pack::kHVTEMPFieldNumber;
const int Pack::kHVERRORSFieldNumber;
const int Pack::kHVCANFORWARDFieldNumber;
const int Pack::kHVFANSOVERRIDEFieldNumber;
const int Pack::kHVCANFORWARDSTATUSFieldNumber;
const int Pack::kHVFANSOVERRIDESTATUSFieldNumber;
const int Pack::kHVFEEDBACKSSTATUSFieldNumber;
const int Pack::kHVIMDSTATUSFieldNumber;
const int Pack::kTSSTATUSFieldNumber;
const int Pack::kSETTSSTATUSDASFieldNumber;
const int Pack::kSETTSSTATUSHANDCARTFieldNumber;
const int Pack::kSTEERSTATUSFieldNumber;
const int Pack::kSETCARSTATUSFieldNumber;
const int Pack::kSETPEDALSRANGEFieldNumber;
const int Pack::kSETSTEERINGANGLERANGEFieldNumber;
const int Pack::kCARSTATUSFieldNumber;
const int Pack::kDASERRORSFieldNumber;
const int Pack::kLVCURRENTFieldNumber;
const int Pack::kLVVOLTAGEFieldNumber;
const int Pack::kLVTOTALVOLTAGEFieldNumber;
const int Pack::kLVTEMPERATUREFieldNumber;
const int Pack::kCOOLINGSTATUSFieldNumber;
const int Pack::kSETRADIATORSPEEDFieldNumber;
const int Pack::kSETPUMPSSPEEDFieldNumber;
const int Pack::kSETINVERTERCONNECTIONSTATUSFieldNumber;
const int Pack::kINVERTERCONNECTIONSTATUSFieldNumber;
const int Pack::kLVERRORSFieldNumber;
const int Pack::kSHUTDOWNSTATUSFieldNumber;
const int Pack::kMARKERFieldNumber;
const int Pack::kHVCELLSVOLTAGEFieldNumber;
const int Pack::kHVCELLSTEMPFieldNumber;
const int Pack::kHVCELLBALANCINGSTATUSFieldNumber;
const int Pack::kSETCELLBALANCINGSTATUSFieldNumber;
const int Pack::kHANDCARTSTATUSFieldNumber;
const int Pack::kSPEEDFieldNumber;
const int Pack::kINVLREQUESTFieldNumber;
const int Pack::kINVRREQUESTFieldNumber;
const int Pack::kINVLRESPONSEFieldNumber;
const int Pack::kINVRRESPONSEFieldNumber;
const int Pack::kFLASHCELLBOARD0TXFieldNumber;
const int Pack::kFLASHCELLBOARD0RXFieldNumber;
const int Pack::kFLASHCELLBOARD1TXFieldNumber;
const int Pack::kFLASHCELLBOARD1RXFieldNumber;
const int Pack::kFLASHCELLBOARD2TXFieldNumber;
const int Pack::kFLASHCELLBOARD2RXFieldNumber;
const int Pack::kFLASHCELLBOARD3TXFieldNumber;
const int Pack::kFLASHCELLBOARD3RXFieldNumber;
const int Pack::kFLASHCELLBOARD4TXFieldNumber;
const int Pack::kFLASHCELLBOARD4RXFieldNumber;
const int Pack::kFLASHCELLBOARD5TXFieldNumber;
const int Pack::kFLASHCELLBOARD5RXFieldNumber;
const int Pack::kFLASHBMSHVTXFieldNumber;
const int Pack::kFLASHBMSHVRXFieldNumber;
const int Pack::kFLASHBMSLVTXFieldNumber;
const int Pack::kFLASHBMSLVRXFieldNumber;
const int Pack::kBRUSANLG5CTLFieldNumber;
const int Pack::kBRUSASTFieldNumber;
const int Pack::kBRUSAACTIFieldNumber;
const int Pack::kBRUSAACTIIFieldNumber;
const int Pack::kBRUSATEMPFieldNumber;
const int Pack::kBRUSAERRFieldNumber;
const int Pack::kBMSHVCHIMERAFieldNumber;
const int Pack::kECUCHIMERAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pack::Pack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_primary_2eproto::scc_info_Pack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:primary.Pack)
}
Pack::Pack(const Pack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bms_hv_jmp_to_blt_(from.bms_hv_jmp_to_blt_),
      bms_lv_jmp_to_blt_(from.bms_lv_jmp_to_blt_),
      steer_version_(from.steer_version_),
      das_version_(from.das_version_),
      hv_version_(from.hv_version_),
      lv_version_(from.lv_version_),
      tlm_version_(from.tlm_version_),
      timestamp_(from.timestamp_),
      set_tlm_status_(from.set_tlm_status_),
      tlm_status_(from.tlm_status_),
      steer_system_status_(from.steer_system_status_),
      hv_voltage_(from.hv_voltage_),
      hv_current_(from.hv_current_),
      hv_temp_(from.hv_temp_),
      hv_errors_(from.hv_errors_),
      hv_can_forward_(from.hv_can_forward_),
      hv_fans_override_(from.hv_fans_override_),
      hv_can_forward_status_(from.hv_can_forward_status_),
      hv_fans_override_status_(from.hv_fans_override_status_),
      hv_feedbacks_status_(from.hv_feedbacks_status_),
      hv_imd_status_(from.hv_imd_status_),
      ts_status_(from.ts_status_),
      set_ts_status_das_(from.set_ts_status_das_),
      set_ts_status_handcart_(from.set_ts_status_handcart_),
      steer_status_(from.steer_status_),
      set_car_status_(from.set_car_status_),
      set_pedals_range_(from.set_pedals_range_),
      set_steering_angle_range_(from.set_steering_angle_range_),
      car_status_(from.car_status_),
      das_errors_(from.das_errors_),
      lv_current_(from.lv_current_),
      lv_voltage_(from.lv_voltage_),
      lv_total_voltage_(from.lv_total_voltage_),
      lv_temperature_(from.lv_temperature_),
      cooling_status_(from.cooling_status_),
      set_radiator_speed_(from.set_radiator_speed_),
      set_pumps_speed_(from.set_pumps_speed_),
      set_inverter_connection_status_(from.set_inverter_connection_status_),
      inverter_connection_status_(from.inverter_connection_status_),
      lv_errors_(from.lv_errors_),
      shutdown_status_(from.shutdown_status_),
      marker_(from.marker_),
      hv_cells_voltage_(from.hv_cells_voltage_),
      hv_cells_temp_(from.hv_cells_temp_),
      hv_cell_balancing_status_(from.hv_cell_balancing_status_),
      set_cell_balancing_status_(from.set_cell_balancing_status_),
      handcart_status_(from.handcart_status_),
      speed_(from.speed_),
      inv_l_request_(from.inv_l_request_),
      inv_r_request_(from.inv_r_request_),
      inv_l_response_(from.inv_l_response_),
      inv_r_response_(from.inv_r_response_),
      flash_cellboard_0_tx_(from.flash_cellboard_0_tx_),
      flash_cellboard_0_rx_(from.flash_cellboard_0_rx_),
      flash_cellboard_1_tx_(from.flash_cellboard_1_tx_),
      flash_cellboard_1_rx_(from.flash_cellboard_1_rx_),
      flash_cellboard_2_tx_(from.flash_cellboard_2_tx_),
      flash_cellboard_2_rx_(from.flash_cellboard_2_rx_),
      flash_cellboard_3_tx_(from.flash_cellboard_3_tx_),
      flash_cellboard_3_rx_(from.flash_cellboard_3_rx_),
      flash_cellboard_4_tx_(from.flash_cellboard_4_tx_),
      flash_cellboard_4_rx_(from.flash_cellboard_4_rx_),
      flash_cellboard_5_tx_(from.flash_cellboard_5_tx_),
      flash_cellboard_5_rx_(from.flash_cellboard_5_rx_),
      flash_bms_hv_tx_(from.flash_bms_hv_tx_),
      flash_bms_hv_rx_(from.flash_bms_hv_rx_),
      flash_bms_lv_tx_(from.flash_bms_lv_tx_),
      flash_bms_lv_rx_(from.flash_bms_lv_rx_),
      brusa_nlg5_ctl_(from.brusa_nlg5_ctl_),
      brusa_st_(from.brusa_st_),
      brusa_act_i_(from.brusa_act_i_),
      brusa_act_ii_(from.brusa_act_ii_),
      brusa_temp_(from.brusa_temp_),
      brusa_err_(from.brusa_err_),
      bms_hv_chimera_(from.bms_hv_chimera_),
      ecu_chimera_(from.ecu_chimera_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:primary.Pack)
}

void Pack::SharedCtor() {
}

Pack::~Pack() {
  // @@protoc_insertion_point(destructor:primary.Pack)
  SharedDtor();
}

void Pack::SharedDtor() {
}

void Pack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pack::descriptor() {
  ::protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pack& Pack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_primary_2eproto::scc_info_Pack.base);
  return *internal_default_instance();
}


void Pack::Clear() {
// @@protoc_insertion_point(message_clear_start:primary.Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bms_hv_jmp_to_blt_.Clear();
  bms_lv_jmp_to_blt_.Clear();
  steer_version_.Clear();
  das_version_.Clear();
  hv_version_.Clear();
  lv_version_.Clear();
  tlm_version_.Clear();
  timestamp_.Clear();
  set_tlm_status_.Clear();
  tlm_status_.Clear();
  steer_system_status_.Clear();
  hv_voltage_.Clear();
  hv_current_.Clear();
  hv_temp_.Clear();
  hv_errors_.Clear();
  hv_can_forward_.Clear();
  hv_fans_override_.Clear();
  hv_can_forward_status_.Clear();
  hv_fans_override_status_.Clear();
  hv_feedbacks_status_.Clear();
  hv_imd_status_.Clear();
  ts_status_.Clear();
  set_ts_status_das_.Clear();
  set_ts_status_handcart_.Clear();
  steer_status_.Clear();
  set_car_status_.Clear();
  set_pedals_range_.Clear();
  set_steering_angle_range_.Clear();
  car_status_.Clear();
  das_errors_.Clear();
  lv_current_.Clear();
  lv_voltage_.Clear();
  lv_total_voltage_.Clear();
  lv_temperature_.Clear();
  cooling_status_.Clear();
  set_radiator_speed_.Clear();
  set_pumps_speed_.Clear();
  set_inverter_connection_status_.Clear();
  inverter_connection_status_.Clear();
  lv_errors_.Clear();
  shutdown_status_.Clear();
  marker_.Clear();
  hv_cells_voltage_.Clear();
  hv_cells_temp_.Clear();
  hv_cell_balancing_status_.Clear();
  set_cell_balancing_status_.Clear();
  handcart_status_.Clear();
  speed_.Clear();
  inv_l_request_.Clear();
  inv_r_request_.Clear();
  inv_l_response_.Clear();
  inv_r_response_.Clear();
  flash_cellboard_0_tx_.Clear();
  flash_cellboard_0_rx_.Clear();
  flash_cellboard_1_tx_.Clear();
  flash_cellboard_1_rx_.Clear();
  flash_cellboard_2_tx_.Clear();
  flash_cellboard_2_rx_.Clear();
  flash_cellboard_3_tx_.Clear();
  flash_cellboard_3_rx_.Clear();
  flash_cellboard_4_tx_.Clear();
  flash_cellboard_4_rx_.Clear();
  flash_cellboard_5_tx_.Clear();
  flash_cellboard_5_rx_.Clear();
  flash_bms_hv_tx_.Clear();
  flash_bms_hv_rx_.Clear();
  flash_bms_lv_tx_.Clear();
  flash_bms_lv_rx_.Clear();
  brusa_nlg5_ctl_.Clear();
  brusa_st_.Clear();
  brusa_act_i_.Clear();
  brusa_act_ii_.Clear();
  brusa_temp_.Clear();
  brusa_err_.Clear();
  bms_hv_chimera_.Clear();
  ecu_chimera_.Clear();
  _internal_metadata_.Clear();
}

bool Pack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:primary.Pack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bms_hv_jmp_to_blt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bms_lv_jmp_to_blt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.STEER_VERSION STEER_VERSION = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_steer_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.DAS_VERSION DAS_VERSION = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_das_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_VERSION HV_VERSION = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_VERSION LV_VERSION = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.TLM_VERSION TLM_VERSION = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tlm_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.TIMESTAMP TIMESTAMP = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_tlm_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.TLM_STATUS TLM_STATUS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tlm_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_steer_system_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_VOLTAGE HV_VOLTAGE = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CURRENT HV_CURRENT = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_TEMP HV_TEMP = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_temp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_ERRORS HV_ERRORS = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_can_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_fans_override()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_can_forward_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_fans_override_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_feedbacks_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_imd_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.TS_STATUS TS_STATUS = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ts_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_ts_status_das()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_ts_status_handcart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.STEER_STATUS STEER_STATUS = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_steer_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_car_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_pedals_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_steering_angle_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.CAR_STATUS CAR_STATUS = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_car_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.DAS_ERRORS DAS_ERRORS = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_das_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_CURRENT LV_CURRENT = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_VOLTAGE LV_VOLTAGE = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_total_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_temperature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.COOLING_STATUS COOLING_STATUS = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cooling_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_radiator_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_pumps_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_inverter_connection_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inverter_connection_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.LV_ERRORS LV_ERRORS = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lv_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shutdown_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.MARKER MARKER = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_marker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_cells_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_cells_temp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hv_cell_balancing_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_set_cell_balancing_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.HANDCART_STATUS HANDCART_STATUS = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_handcart_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.SPEED SPEED = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.INV_L_REQUEST INV_L_REQUEST = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inv_l_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.INV_R_REQUEST INV_R_REQUEST = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inv_r_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inv_l_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inv_r_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_0_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_0_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_1_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 56;
      case 56: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_1_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_2_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 58;
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_2_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_3_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_3_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_4_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_4_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 63;
      case 63: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_5_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 64;
      case 64: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_cellboard_5_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 65;
      case 65: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_bms_hv_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 66;
      case 66: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_bms_hv_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 67;
      case 67: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_bms_lv_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 68;
      case 68: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_flash_bms_lv_rx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 69;
      case 69: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_nlg5_ctl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_ST BRUSA_ST = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_act_i()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_act_ii()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_TEMP BRUSA_TEMP = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_temp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BRUSA_ERR BRUSA_ERR = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_brusa_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.BMS_HV_CHIMERA BMS_HV_CHIMERA = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bms_hv_chimera()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .primary.ECU_CHIMERA ECU_CHIMERA = 76;
      case 76: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ecu_chimera()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:primary.Pack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:primary.Pack)
  return false;
#undef DO_
}

void Pack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:primary.Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_hv_jmp_to_blt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bms_hv_jmp_to_blt(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_lv_jmp_to_blt_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->bms_lv_jmp_to_blt(static_cast<int>(i)),
      output);
  }

  // repeated .primary.STEER_VERSION STEER_VERSION = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_version_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->steer_version(static_cast<int>(i)),
      output);
  }

  // repeated .primary.DAS_VERSION DAS_VERSION = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->das_version_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->das_version(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_VERSION HV_VERSION = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_version_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->hv_version(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_VERSION LV_VERSION = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_version_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->lv_version(static_cast<int>(i)),
      output);
  }

  // repeated .primary.TLM_VERSION TLM_VERSION = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tlm_version_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->tlm_version(static_cast<int>(i)),
      output);
  }

  // repeated .primary.TIMESTAMP TIMESTAMP = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->timestamp(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_tlm_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->set_tlm_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.TLM_STATUS TLM_STATUS = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tlm_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->tlm_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_system_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->steer_system_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_VOLTAGE HV_VOLTAGE = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_voltage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->hv_voltage(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CURRENT HV_CURRENT = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_current_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->hv_current(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_TEMP HV_TEMP = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_temp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->hv_temp(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_ERRORS HV_ERRORS = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->hv_errors(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_can_forward_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->hv_can_forward(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_fans_override_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->hv_fans_override(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_can_forward_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->hv_can_forward_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_fans_override_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->hv_fans_override_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_feedbacks_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->hv_feedbacks_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_imd_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->hv_imd_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.TS_STATUS TS_STATUS = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->ts_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_ts_status_das_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->set_ts_status_das(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_ts_status_handcart_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->set_ts_status_handcart(static_cast<int>(i)),
      output);
  }

  // repeated .primary.STEER_STATUS STEER_STATUS = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->steer_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_car_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26,
      this->set_car_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_pedals_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27,
      this->set_pedals_range(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_steering_angle_range_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28,
      this->set_steering_angle_range(static_cast<int>(i)),
      output);
  }

  // repeated .primary.CAR_STATUS CAR_STATUS = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->car_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29,
      this->car_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.DAS_ERRORS DAS_ERRORS = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->das_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30,
      this->das_errors(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_CURRENT LV_CURRENT = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_current_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31,
      this->lv_current(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_VOLTAGE LV_VOLTAGE = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_voltage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32,
      this->lv_voltage(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_total_voltage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33,
      this->lv_total_voltage(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_temperature_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34,
      this->lv_temperature(static_cast<int>(i)),
      output);
  }

  // repeated .primary.COOLING_STATUS COOLING_STATUS = 35;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cooling_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35,
      this->cooling_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_radiator_speed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36,
      this->set_radiator_speed(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_pumps_speed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37,
      this->set_pumps_speed(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_inverter_connection_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38,
      this->set_inverter_connection_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 39;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inverter_connection_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39,
      this->inverter_connection_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.LV_ERRORS LV_ERRORS = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40,
      this->lv_errors(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 41;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shutdown_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41,
      this->shutdown_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.MARKER MARKER = 42;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->marker_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42,
      this->marker(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 43;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cells_voltage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43,
      this->hv_cells_voltage(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 44;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cells_temp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44,
      this->hv_cells_temp(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 45;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cell_balancing_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45,
      this->hv_cell_balancing_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 46;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_cell_balancing_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46,
      this->set_cell_balancing_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.HANDCART_STATUS HANDCART_STATUS = 47;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->handcart_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47,
      this->handcart_status(static_cast<int>(i)),
      output);
  }

  // repeated .primary.SPEED SPEED = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48,
      this->speed(static_cast<int>(i)),
      output);
  }

  // repeated .primary.INV_L_REQUEST INV_L_REQUEST = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_l_request_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49,
      this->inv_l_request(static_cast<int>(i)),
      output);
  }

  // repeated .primary.INV_R_REQUEST INV_R_REQUEST = 50;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_r_request_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50,
      this->inv_r_request(static_cast<int>(i)),
      output);
  }

  // repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_l_response_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51,
      this->inv_l_response(static_cast<int>(i)),
      output);
  }

  // repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_r_response_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52,
      this->inv_r_response(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 53;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_0_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53,
      this->flash_cellboard_0_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_0_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54,
      this->flash_cellboard_0_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 55;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_1_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55,
      this->flash_cellboard_1_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 56;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_1_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56,
      this->flash_cellboard_1_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_2_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57,
      this->flash_cellboard_2_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 58;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_2_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58,
      this->flash_cellboard_2_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 59;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_3_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59,
      this->flash_cellboard_3_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_3_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60,
      this->flash_cellboard_3_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 61;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_4_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61,
      this->flash_cellboard_4_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 62;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_4_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62,
      this->flash_cellboard_4_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 63;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_5_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63,
      this->flash_cellboard_5_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 64;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_5_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      64,
      this->flash_cellboard_5_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 65;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_hv_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65,
      this->flash_bms_hv_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 66;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_hv_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66,
      this->flash_bms_hv_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 67;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_lv_tx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      67,
      this->flash_bms_lv_tx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 68;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_lv_rx_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68,
      this->flash_bms_lv_rx(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 69;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_nlg5_ctl_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69,
      this->brusa_nlg5_ctl(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_ST BRUSA_ST = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_st_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70,
      this->brusa_st(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 71;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_act_i_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71,
      this->brusa_act_i(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 72;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_act_ii_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72,
      this->brusa_act_ii(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_TEMP BRUSA_TEMP = 73;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_temp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73,
      this->brusa_temp(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BRUSA_ERR BRUSA_ERR = 74;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_err_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74,
      this->brusa_err(static_cast<int>(i)),
      output);
  }

  // repeated .primary.BMS_HV_CHIMERA BMS_HV_CHIMERA = 75;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_hv_chimera_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      75,
      this->bms_hv_chimera(static_cast<int>(i)),
      output);
  }

  // repeated .primary.ECU_CHIMERA ECU_CHIMERA = 76;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ecu_chimera_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      76,
      this->ecu_chimera(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:primary.Pack)
}

::google::protobuf::uint8* Pack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:primary.Pack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_hv_jmp_to_blt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bms_hv_jmp_to_blt(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_lv_jmp_to_blt_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->bms_lv_jmp_to_blt(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.STEER_VERSION STEER_VERSION = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_version_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->steer_version(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.DAS_VERSION DAS_VERSION = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->das_version_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->das_version(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_VERSION HV_VERSION = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_version_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->hv_version(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_VERSION LV_VERSION = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_version_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->lv_version(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.TLM_VERSION TLM_VERSION = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tlm_version_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tlm_version(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.TIMESTAMP TIMESTAMP = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timestamp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->timestamp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_tlm_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->set_tlm_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.TLM_STATUS TLM_STATUS = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tlm_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tlm_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_system_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->steer_system_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_VOLTAGE HV_VOLTAGE = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_voltage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->hv_voltage(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CURRENT HV_CURRENT = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_current_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->hv_current(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_TEMP HV_TEMP = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_temp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->hv_temp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_ERRORS HV_ERRORS = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->hv_errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_can_forward_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->hv_can_forward(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_fans_override_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->hv_fans_override(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_can_forward_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->hv_can_forward_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_fans_override_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->hv_fans_override_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_feedbacks_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->hv_feedbacks_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_imd_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->hv_imd_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.TS_STATUS TS_STATUS = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ts_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->ts_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_ts_status_das_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->set_ts_status_das(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_ts_status_handcart_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->set_ts_status_handcart(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.STEER_STATUS STEER_STATUS = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steer_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->steer_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_car_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->set_car_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_pedals_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->set_pedals_range(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_steering_angle_range_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->set_steering_angle_range(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.CAR_STATUS CAR_STATUS = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->car_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->car_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.DAS_ERRORS DAS_ERRORS = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->das_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->das_errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_CURRENT LV_CURRENT = 31;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_current_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->lv_current(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_VOLTAGE LV_VOLTAGE = 32;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_voltage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->lv_voltage(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 33;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_total_voltage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->lv_total_voltage(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 34;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_temperature_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->lv_temperature(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.COOLING_STATUS COOLING_STATUS = 35;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cooling_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, this->cooling_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_radiator_speed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36, this->set_radiator_speed(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_pumps_speed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->set_pumps_speed(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_inverter_connection_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->set_inverter_connection_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 39;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inverter_connection_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39, this->inverter_connection_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.LV_ERRORS LV_ERRORS = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lv_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->lv_errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 41;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shutdown_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, this->shutdown_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.MARKER MARKER = 42;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->marker_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, this->marker(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 43;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cells_voltage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, this->hv_cells_voltage(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 44;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cells_temp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, this->hv_cells_temp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 45;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hv_cell_balancing_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, this->hv_cell_balancing_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 46;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->set_cell_balancing_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46, this->set_cell_balancing_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.HANDCART_STATUS HANDCART_STATUS = 47;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->handcart_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47, this->handcart_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.SPEED SPEED = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48, this->speed(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.INV_L_REQUEST INV_L_REQUEST = 49;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_l_request_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49, this->inv_l_request(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.INV_R_REQUEST INV_R_REQUEST = 50;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_r_request_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->inv_r_request(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_l_response_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->inv_l_response(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 52;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inv_r_response_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->inv_r_response(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 53;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_0_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->flash_cellboard_0_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_0_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54, this->flash_cellboard_0_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 55;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_1_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->flash_cellboard_1_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 56;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_1_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        56, this->flash_cellboard_1_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_2_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57, this->flash_cellboard_2_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 58;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_2_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        58, this->flash_cellboard_2_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 59;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_3_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        59, this->flash_cellboard_3_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_3_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->flash_cellboard_3_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 61;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_4_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        61, this->flash_cellboard_4_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 62;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_4_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62, this->flash_cellboard_4_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 63;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_5_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63, this->flash_cellboard_5_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 64;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_cellboard_5_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        64, this->flash_cellboard_5_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 65;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_hv_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65, this->flash_bms_hv_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 66;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_hv_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        66, this->flash_bms_hv_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 67;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_lv_tx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        67, this->flash_bms_lv_tx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 68;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->flash_bms_lv_rx_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68, this->flash_bms_lv_rx(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 69;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_nlg5_ctl_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        69, this->brusa_nlg5_ctl(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_ST BRUSA_ST = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_st_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->brusa_st(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 71;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_act_i_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71, this->brusa_act_i(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 72;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_act_ii_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72, this->brusa_act_ii(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_TEMP BRUSA_TEMP = 73;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_temp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73, this->brusa_temp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BRUSA_ERR BRUSA_ERR = 74;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->brusa_err_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74, this->brusa_err(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.BMS_HV_CHIMERA BMS_HV_CHIMERA = 75;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bms_hv_chimera_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        75, this->bms_hv_chimera(static_cast<int>(i)), deterministic, target);
  }

  // repeated .primary.ECU_CHIMERA ECU_CHIMERA = 76;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ecu_chimera_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        76, this->ecu_chimera(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:primary.Pack)
  return target;
}

size_t Pack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:primary.Pack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .primary.BMS_HV_JMP_TO_BLT BMS_HV_JMP_TO_BLT = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bms_hv_jmp_to_blt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bms_hv_jmp_to_blt(static_cast<int>(i)));
    }
  }

  // repeated .primary.BMS_LV_JMP_TO_BLT BMS_LV_JMP_TO_BLT = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->bms_lv_jmp_to_blt_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bms_lv_jmp_to_blt(static_cast<int>(i)));
    }
  }

  // repeated .primary.STEER_VERSION STEER_VERSION = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steer_version_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->steer_version(static_cast<int>(i)));
    }
  }

  // repeated .primary.DAS_VERSION DAS_VERSION = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->das_version_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->das_version(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_VERSION HV_VERSION = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_version_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_version(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_VERSION LV_VERSION = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_version_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_version(static_cast<int>(i)));
    }
  }

  // repeated .primary.TLM_VERSION TLM_VERSION = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tlm_version_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tlm_version(static_cast<int>(i)));
    }
  }

  // repeated .primary.TIMESTAMP TIMESTAMP = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->timestamp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timestamp(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_TLM_STATUS SET_TLM_STATUS = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->set_tlm_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_tlm_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.TLM_STATUS TLM_STATUS = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tlm_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tlm_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.STEER_SYSTEM_STATUS STEER_SYSTEM_STATUS = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->steer_system_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->steer_system_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_VOLTAGE HV_VOLTAGE = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_voltage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_voltage(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CURRENT HV_CURRENT = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_current_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_current(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_TEMP HV_TEMP = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_temp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_temp(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_ERRORS HV_ERRORS = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_errors(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CAN_FORWARD HV_CAN_FORWARD = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_can_forward_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_can_forward(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_FANS_OVERRIDE HV_FANS_OVERRIDE = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_fans_override_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_fans_override(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CAN_FORWARD_STATUS HV_CAN_FORWARD_STATUS = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_can_forward_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_can_forward_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_FANS_OVERRIDE_STATUS HV_FANS_OVERRIDE_STATUS = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_fans_override_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_fans_override_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_FEEDBACKS_STATUS HV_FEEDBACKS_STATUS = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_feedbacks_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_feedbacks_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_IMD_STATUS HV_IMD_STATUS = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_imd_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_imd_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.TS_STATUS TS_STATUS = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->ts_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ts_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_TS_STATUS_DAS SET_TS_STATUS_DAS = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->set_ts_status_das_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_ts_status_das(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_TS_STATUS_HANDCART SET_TS_STATUS_HANDCART = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->set_ts_status_handcart_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_ts_status_handcart(static_cast<int>(i)));
    }
  }

  // repeated .primary.STEER_STATUS STEER_STATUS = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->steer_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->steer_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_CAR_STATUS SET_CAR_STATUS = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->set_car_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_car_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_PEDALS_RANGE SET_PEDALS_RANGE = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->set_pedals_range_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_pedals_range(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_STEERING_ANGLE_RANGE SET_STEERING_ANGLE_RANGE = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->set_steering_angle_range_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_steering_angle_range(static_cast<int>(i)));
    }
  }

  // repeated .primary.CAR_STATUS CAR_STATUS = 29;
  {
    unsigned int count = static_cast<unsigned int>(this->car_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->car_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.DAS_ERRORS DAS_ERRORS = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->das_errors_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->das_errors(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_CURRENT LV_CURRENT = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_current_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_current(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_VOLTAGE LV_VOLTAGE = 32;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_voltage_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_voltage(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_TOTAL_VOLTAGE LV_TOTAL_VOLTAGE = 33;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_total_voltage_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_total_voltage(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_TEMPERATURE LV_TEMPERATURE = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_temperature_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_temperature(static_cast<int>(i)));
    }
  }

  // repeated .primary.COOLING_STATUS COOLING_STATUS = 35;
  {
    unsigned int count = static_cast<unsigned int>(this->cooling_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cooling_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_RADIATOR_SPEED SET_RADIATOR_SPEED = 36;
  {
    unsigned int count = static_cast<unsigned int>(this->set_radiator_speed_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_radiator_speed(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_PUMPS_SPEED SET_PUMPS_SPEED = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->set_pumps_speed_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_pumps_speed(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_INVERTER_CONNECTION_STATUS SET_INVERTER_CONNECTION_STATUS = 38;
  {
    unsigned int count = static_cast<unsigned int>(this->set_inverter_connection_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_inverter_connection_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.INVERTER_CONNECTION_STATUS INVERTER_CONNECTION_STATUS = 39;
  {
    unsigned int count = static_cast<unsigned int>(this->inverter_connection_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inverter_connection_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.LV_ERRORS LV_ERRORS = 40;
  {
    unsigned int count = static_cast<unsigned int>(this->lv_errors_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lv_errors(static_cast<int>(i)));
    }
  }

  // repeated .primary.SHUTDOWN_STATUS SHUTDOWN_STATUS = 41;
  {
    unsigned int count = static_cast<unsigned int>(this->shutdown_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shutdown_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.MARKER MARKER = 42;
  {
    unsigned int count = static_cast<unsigned int>(this->marker_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->marker(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CELLS_VOLTAGE HV_CELLS_VOLTAGE = 43;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_cells_voltage_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_cells_voltage(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CELLS_TEMP HV_CELLS_TEMP = 44;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_cells_temp_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_cells_temp(static_cast<int>(i)));
    }
  }

  // repeated .primary.HV_CELL_BALANCING_STATUS HV_CELL_BALANCING_STATUS = 45;
  {
    unsigned int count = static_cast<unsigned int>(this->hv_cell_balancing_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hv_cell_balancing_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SET_CELL_BALANCING_STATUS SET_CELL_BALANCING_STATUS = 46;
  {
    unsigned int count = static_cast<unsigned int>(this->set_cell_balancing_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->set_cell_balancing_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.HANDCART_STATUS HANDCART_STATUS = 47;
  {
    unsigned int count = static_cast<unsigned int>(this->handcart_status_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->handcart_status(static_cast<int>(i)));
    }
  }

  // repeated .primary.SPEED SPEED = 48;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed(static_cast<int>(i)));
    }
  }

  // repeated .primary.INV_L_REQUEST INV_L_REQUEST = 49;
  {
    unsigned int count = static_cast<unsigned int>(this->inv_l_request_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inv_l_request(static_cast<int>(i)));
    }
  }

  // repeated .primary.INV_R_REQUEST INV_R_REQUEST = 50;
  {
    unsigned int count = static_cast<unsigned int>(this->inv_r_request_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inv_r_request(static_cast<int>(i)));
    }
  }

  // repeated .primary.INV_L_RESPONSE INV_L_RESPONSE = 51;
  {
    unsigned int count = static_cast<unsigned int>(this->inv_l_response_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inv_l_response(static_cast<int>(i)));
    }
  }

  // repeated .primary.INV_R_RESPONSE INV_R_RESPONSE = 52;
  {
    unsigned int count = static_cast<unsigned int>(this->inv_r_response_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inv_r_response(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_0_TX FLASH_CELLBOARD_0_TX = 53;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_0_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_0_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_0_RX FLASH_CELLBOARD_0_RX = 54;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_0_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_0_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_1_TX FLASH_CELLBOARD_1_TX = 55;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_1_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_1_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_1_RX FLASH_CELLBOARD_1_RX = 56;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_1_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_1_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_2_TX FLASH_CELLBOARD_2_TX = 57;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_2_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_2_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_2_RX FLASH_CELLBOARD_2_RX = 58;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_2_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_2_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_3_TX FLASH_CELLBOARD_3_TX = 59;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_3_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_3_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_3_RX FLASH_CELLBOARD_3_RX = 60;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_3_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_3_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_4_TX FLASH_CELLBOARD_4_TX = 61;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_4_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_4_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_4_RX FLASH_CELLBOARD_4_RX = 62;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_4_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_4_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_5_TX FLASH_CELLBOARD_5_TX = 63;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_5_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_5_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_CELLBOARD_5_RX FLASH_CELLBOARD_5_RX = 64;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_cellboard_5_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_cellboard_5_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_BMS_HV_TX FLASH_BMS_HV_TX = 65;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_bms_hv_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_bms_hv_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_BMS_HV_RX FLASH_BMS_HV_RX = 66;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_bms_hv_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_bms_hv_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_BMS_LV_TX FLASH_BMS_LV_TX = 67;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_bms_lv_tx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_bms_lv_tx(static_cast<int>(i)));
    }
  }

  // repeated .primary.FLASH_BMS_LV_RX FLASH_BMS_LV_RX = 68;
  {
    unsigned int count = static_cast<unsigned int>(this->flash_bms_lv_rx_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->flash_bms_lv_rx(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_NLG5_CTL BRUSA_NLG5_CTL = 69;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_nlg5_ctl_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_nlg5_ctl(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_ST BRUSA_ST = 70;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_st_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_st(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_ACT_I BRUSA_ACT_I = 71;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_act_i_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_act_i(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_ACT_II BRUSA_ACT_II = 72;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_act_ii_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_act_ii(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_TEMP BRUSA_TEMP = 73;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_temp_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_temp(static_cast<int>(i)));
    }
  }

  // repeated .primary.BRUSA_ERR BRUSA_ERR = 74;
  {
    unsigned int count = static_cast<unsigned int>(this->brusa_err_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->brusa_err(static_cast<int>(i)));
    }
  }

  // repeated .primary.BMS_HV_CHIMERA BMS_HV_CHIMERA = 75;
  {
    unsigned int count = static_cast<unsigned int>(this->bms_hv_chimera_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bms_hv_chimera(static_cast<int>(i)));
    }
  }

  // repeated .primary.ECU_CHIMERA ECU_CHIMERA = 76;
  {
    unsigned int count = static_cast<unsigned int>(this->ecu_chimera_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ecu_chimera(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:primary.Pack)
  GOOGLE_DCHECK_NE(&from, this);
  const Pack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:primary.Pack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:primary.Pack)
    MergeFrom(*source);
  }
}

void Pack::MergeFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:primary.Pack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bms_hv_jmp_to_blt_.MergeFrom(from.bms_hv_jmp_to_blt_);
  bms_lv_jmp_to_blt_.MergeFrom(from.bms_lv_jmp_to_blt_);
  steer_version_.MergeFrom(from.steer_version_);
  das_version_.MergeFrom(from.das_version_);
  hv_version_.MergeFrom(from.hv_version_);
  lv_version_.MergeFrom(from.lv_version_);
  tlm_version_.MergeFrom(from.tlm_version_);
  timestamp_.MergeFrom(from.timestamp_);
  set_tlm_status_.MergeFrom(from.set_tlm_status_);
  tlm_status_.MergeFrom(from.tlm_status_);
  steer_system_status_.MergeFrom(from.steer_system_status_);
  hv_voltage_.MergeFrom(from.hv_voltage_);
  hv_current_.MergeFrom(from.hv_current_);
  hv_temp_.MergeFrom(from.hv_temp_);
  hv_errors_.MergeFrom(from.hv_errors_);
  hv_can_forward_.MergeFrom(from.hv_can_forward_);
  hv_fans_override_.MergeFrom(from.hv_fans_override_);
  hv_can_forward_status_.MergeFrom(from.hv_can_forward_status_);
  hv_fans_override_status_.MergeFrom(from.hv_fans_override_status_);
  hv_feedbacks_status_.MergeFrom(from.hv_feedbacks_status_);
  hv_imd_status_.MergeFrom(from.hv_imd_status_);
  ts_status_.MergeFrom(from.ts_status_);
  set_ts_status_das_.MergeFrom(from.set_ts_status_das_);
  set_ts_status_handcart_.MergeFrom(from.set_ts_status_handcart_);
  steer_status_.MergeFrom(from.steer_status_);
  set_car_status_.MergeFrom(from.set_car_status_);
  set_pedals_range_.MergeFrom(from.set_pedals_range_);
  set_steering_angle_range_.MergeFrom(from.set_steering_angle_range_);
  car_status_.MergeFrom(from.car_status_);
  das_errors_.MergeFrom(from.das_errors_);
  lv_current_.MergeFrom(from.lv_current_);
  lv_voltage_.MergeFrom(from.lv_voltage_);
  lv_total_voltage_.MergeFrom(from.lv_total_voltage_);
  lv_temperature_.MergeFrom(from.lv_temperature_);
  cooling_status_.MergeFrom(from.cooling_status_);
  set_radiator_speed_.MergeFrom(from.set_radiator_speed_);
  set_pumps_speed_.MergeFrom(from.set_pumps_speed_);
  set_inverter_connection_status_.MergeFrom(from.set_inverter_connection_status_);
  inverter_connection_status_.MergeFrom(from.inverter_connection_status_);
  lv_errors_.MergeFrom(from.lv_errors_);
  shutdown_status_.MergeFrom(from.shutdown_status_);
  marker_.MergeFrom(from.marker_);
  hv_cells_voltage_.MergeFrom(from.hv_cells_voltage_);
  hv_cells_temp_.MergeFrom(from.hv_cells_temp_);
  hv_cell_balancing_status_.MergeFrom(from.hv_cell_balancing_status_);
  set_cell_balancing_status_.MergeFrom(from.set_cell_balancing_status_);
  handcart_status_.MergeFrom(from.handcart_status_);
  speed_.MergeFrom(from.speed_);
  inv_l_request_.MergeFrom(from.inv_l_request_);
  inv_r_request_.MergeFrom(from.inv_r_request_);
  inv_l_response_.MergeFrom(from.inv_l_response_);
  inv_r_response_.MergeFrom(from.inv_r_response_);
  flash_cellboard_0_tx_.MergeFrom(from.flash_cellboard_0_tx_);
  flash_cellboard_0_rx_.MergeFrom(from.flash_cellboard_0_rx_);
  flash_cellboard_1_tx_.MergeFrom(from.flash_cellboard_1_tx_);
  flash_cellboard_1_rx_.MergeFrom(from.flash_cellboard_1_rx_);
  flash_cellboard_2_tx_.MergeFrom(from.flash_cellboard_2_tx_);
  flash_cellboard_2_rx_.MergeFrom(from.flash_cellboard_2_rx_);
  flash_cellboard_3_tx_.MergeFrom(from.flash_cellboard_3_tx_);
  flash_cellboard_3_rx_.MergeFrom(from.flash_cellboard_3_rx_);
  flash_cellboard_4_tx_.MergeFrom(from.flash_cellboard_4_tx_);
  flash_cellboard_4_rx_.MergeFrom(from.flash_cellboard_4_rx_);
  flash_cellboard_5_tx_.MergeFrom(from.flash_cellboard_5_tx_);
  flash_cellboard_5_rx_.MergeFrom(from.flash_cellboard_5_rx_);
  flash_bms_hv_tx_.MergeFrom(from.flash_bms_hv_tx_);
  flash_bms_hv_rx_.MergeFrom(from.flash_bms_hv_rx_);
  flash_bms_lv_tx_.MergeFrom(from.flash_bms_lv_tx_);
  flash_bms_lv_rx_.MergeFrom(from.flash_bms_lv_rx_);
  brusa_nlg5_ctl_.MergeFrom(from.brusa_nlg5_ctl_);
  brusa_st_.MergeFrom(from.brusa_st_);
  brusa_act_i_.MergeFrom(from.brusa_act_i_);
  brusa_act_ii_.MergeFrom(from.brusa_act_ii_);
  brusa_temp_.MergeFrom(from.brusa_temp_);
  brusa_err_.MergeFrom(from.brusa_err_);
  bms_hv_chimera_.MergeFrom(from.bms_hv_chimera_);
  ecu_chimera_.MergeFrom(from.ecu_chimera_);
}

void Pack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:primary.Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pack::CopyFrom(const Pack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:primary.Pack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pack::IsInitialized() const {
  return true;
}

void Pack::Swap(Pack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pack::InternalSwap(Pack* other) {
  using std::swap;
  CastToBase(&bms_hv_jmp_to_blt_)->InternalSwap(CastToBase(&other->bms_hv_jmp_to_blt_));
  CastToBase(&bms_lv_jmp_to_blt_)->InternalSwap(CastToBase(&other->bms_lv_jmp_to_blt_));
  CastToBase(&steer_version_)->InternalSwap(CastToBase(&other->steer_version_));
  CastToBase(&das_version_)->InternalSwap(CastToBase(&other->das_version_));
  CastToBase(&hv_version_)->InternalSwap(CastToBase(&other->hv_version_));
  CastToBase(&lv_version_)->InternalSwap(CastToBase(&other->lv_version_));
  CastToBase(&tlm_version_)->InternalSwap(CastToBase(&other->tlm_version_));
  CastToBase(&timestamp_)->InternalSwap(CastToBase(&other->timestamp_));
  CastToBase(&set_tlm_status_)->InternalSwap(CastToBase(&other->set_tlm_status_));
  CastToBase(&tlm_status_)->InternalSwap(CastToBase(&other->tlm_status_));
  CastToBase(&steer_system_status_)->InternalSwap(CastToBase(&other->steer_system_status_));
  CastToBase(&hv_voltage_)->InternalSwap(CastToBase(&other->hv_voltage_));
  CastToBase(&hv_current_)->InternalSwap(CastToBase(&other->hv_current_));
  CastToBase(&hv_temp_)->InternalSwap(CastToBase(&other->hv_temp_));
  CastToBase(&hv_errors_)->InternalSwap(CastToBase(&other->hv_errors_));
  CastToBase(&hv_can_forward_)->InternalSwap(CastToBase(&other->hv_can_forward_));
  CastToBase(&hv_fans_override_)->InternalSwap(CastToBase(&other->hv_fans_override_));
  CastToBase(&hv_can_forward_status_)->InternalSwap(CastToBase(&other->hv_can_forward_status_));
  CastToBase(&hv_fans_override_status_)->InternalSwap(CastToBase(&other->hv_fans_override_status_));
  CastToBase(&hv_feedbacks_status_)->InternalSwap(CastToBase(&other->hv_feedbacks_status_));
  CastToBase(&hv_imd_status_)->InternalSwap(CastToBase(&other->hv_imd_status_));
  CastToBase(&ts_status_)->InternalSwap(CastToBase(&other->ts_status_));
  CastToBase(&set_ts_status_das_)->InternalSwap(CastToBase(&other->set_ts_status_das_));
  CastToBase(&set_ts_status_handcart_)->InternalSwap(CastToBase(&other->set_ts_status_handcart_));
  CastToBase(&steer_status_)->InternalSwap(CastToBase(&other->steer_status_));
  CastToBase(&set_car_status_)->InternalSwap(CastToBase(&other->set_car_status_));
  CastToBase(&set_pedals_range_)->InternalSwap(CastToBase(&other->set_pedals_range_));
  CastToBase(&set_steering_angle_range_)->InternalSwap(CastToBase(&other->set_steering_angle_range_));
  CastToBase(&car_status_)->InternalSwap(CastToBase(&other->car_status_));
  CastToBase(&das_errors_)->InternalSwap(CastToBase(&other->das_errors_));
  CastToBase(&lv_current_)->InternalSwap(CastToBase(&other->lv_current_));
  CastToBase(&lv_voltage_)->InternalSwap(CastToBase(&other->lv_voltage_));
  CastToBase(&lv_total_voltage_)->InternalSwap(CastToBase(&other->lv_total_voltage_));
  CastToBase(&lv_temperature_)->InternalSwap(CastToBase(&other->lv_temperature_));
  CastToBase(&cooling_status_)->InternalSwap(CastToBase(&other->cooling_status_));
  CastToBase(&set_radiator_speed_)->InternalSwap(CastToBase(&other->set_radiator_speed_));
  CastToBase(&set_pumps_speed_)->InternalSwap(CastToBase(&other->set_pumps_speed_));
  CastToBase(&set_inverter_connection_status_)->InternalSwap(CastToBase(&other->set_inverter_connection_status_));
  CastToBase(&inverter_connection_status_)->InternalSwap(CastToBase(&other->inverter_connection_status_));
  CastToBase(&lv_errors_)->InternalSwap(CastToBase(&other->lv_errors_));
  CastToBase(&shutdown_status_)->InternalSwap(CastToBase(&other->shutdown_status_));
  CastToBase(&marker_)->InternalSwap(CastToBase(&other->marker_));
  CastToBase(&hv_cells_voltage_)->InternalSwap(CastToBase(&other->hv_cells_voltage_));
  CastToBase(&hv_cells_temp_)->InternalSwap(CastToBase(&other->hv_cells_temp_));
  CastToBase(&hv_cell_balancing_status_)->InternalSwap(CastToBase(&other->hv_cell_balancing_status_));
  CastToBase(&set_cell_balancing_status_)->InternalSwap(CastToBase(&other->set_cell_balancing_status_));
  CastToBase(&handcart_status_)->InternalSwap(CastToBase(&other->handcart_status_));
  CastToBase(&speed_)->InternalSwap(CastToBase(&other->speed_));
  CastToBase(&inv_l_request_)->InternalSwap(CastToBase(&other->inv_l_request_));
  CastToBase(&inv_r_request_)->InternalSwap(CastToBase(&other->inv_r_request_));
  CastToBase(&inv_l_response_)->InternalSwap(CastToBase(&other->inv_l_response_));
  CastToBase(&inv_r_response_)->InternalSwap(CastToBase(&other->inv_r_response_));
  CastToBase(&flash_cellboard_0_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_0_tx_));
  CastToBase(&flash_cellboard_0_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_0_rx_));
  CastToBase(&flash_cellboard_1_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_1_tx_));
  CastToBase(&flash_cellboard_1_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_1_rx_));
  CastToBase(&flash_cellboard_2_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_2_tx_));
  CastToBase(&flash_cellboard_2_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_2_rx_));
  CastToBase(&flash_cellboard_3_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_3_tx_));
  CastToBase(&flash_cellboard_3_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_3_rx_));
  CastToBase(&flash_cellboard_4_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_4_tx_));
  CastToBase(&flash_cellboard_4_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_4_rx_));
  CastToBase(&flash_cellboard_5_tx_)->InternalSwap(CastToBase(&other->flash_cellboard_5_tx_));
  CastToBase(&flash_cellboard_5_rx_)->InternalSwap(CastToBase(&other->flash_cellboard_5_rx_));
  CastToBase(&flash_bms_hv_tx_)->InternalSwap(CastToBase(&other->flash_bms_hv_tx_));
  CastToBase(&flash_bms_hv_rx_)->InternalSwap(CastToBase(&other->flash_bms_hv_rx_));
  CastToBase(&flash_bms_lv_tx_)->InternalSwap(CastToBase(&other->flash_bms_lv_tx_));
  CastToBase(&flash_bms_lv_rx_)->InternalSwap(CastToBase(&other->flash_bms_lv_rx_));
  CastToBase(&brusa_nlg5_ctl_)->InternalSwap(CastToBase(&other->brusa_nlg5_ctl_));
  CastToBase(&brusa_st_)->InternalSwap(CastToBase(&other->brusa_st_));
  CastToBase(&brusa_act_i_)->InternalSwap(CastToBase(&other->brusa_act_i_));
  CastToBase(&brusa_act_ii_)->InternalSwap(CastToBase(&other->brusa_act_ii_));
  CastToBase(&brusa_temp_)->InternalSwap(CastToBase(&other->brusa_temp_));
  CastToBase(&brusa_err_)->InternalSwap(CastToBase(&other->brusa_err_));
  CastToBase(&bms_hv_chimera_)->InternalSwap(CastToBase(&other->bms_hv_chimera_));
  CastToBase(&ecu_chimera_)->InternalSwap(CastToBase(&other->ecu_chimera_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pack::GetMetadata() const {
  protobuf_primary_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_primary_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace primary
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BMS_HV_JMP_TO_BLT* Arena::CreateMaybeMessage< ::primary::BMS_HV_JMP_TO_BLT >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BMS_HV_JMP_TO_BLT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BMS_LV_JMP_TO_BLT* Arena::CreateMaybeMessage< ::primary::BMS_LV_JMP_TO_BLT >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BMS_LV_JMP_TO_BLT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::STEER_VERSION* Arena::CreateMaybeMessage< ::primary::STEER_VERSION >(Arena* arena) {
  return Arena::CreateInternal< ::primary::STEER_VERSION >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::DAS_VERSION* Arena::CreateMaybeMessage< ::primary::DAS_VERSION >(Arena* arena) {
  return Arena::CreateInternal< ::primary::DAS_VERSION >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_VERSION* Arena::CreateMaybeMessage< ::primary::HV_VERSION >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_VERSION >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_VERSION* Arena::CreateMaybeMessage< ::primary::LV_VERSION >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_VERSION >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::TLM_VERSION* Arena::CreateMaybeMessage< ::primary::TLM_VERSION >(Arena* arena) {
  return Arena::CreateInternal< ::primary::TLM_VERSION >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::TIMESTAMP* Arena::CreateMaybeMessage< ::primary::TIMESTAMP >(Arena* arena) {
  return Arena::CreateInternal< ::primary::TIMESTAMP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_TLM_STATUS* Arena::CreateMaybeMessage< ::primary::SET_TLM_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_TLM_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::TLM_STATUS* Arena::CreateMaybeMessage< ::primary::TLM_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::TLM_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::STEER_SYSTEM_STATUS* Arena::CreateMaybeMessage< ::primary::STEER_SYSTEM_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::STEER_SYSTEM_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_VOLTAGE* Arena::CreateMaybeMessage< ::primary::HV_VOLTAGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_VOLTAGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CURRENT* Arena::CreateMaybeMessage< ::primary::HV_CURRENT >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CURRENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_TEMP* Arena::CreateMaybeMessage< ::primary::HV_TEMP >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_TEMP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_ERRORS* Arena::CreateMaybeMessage< ::primary::HV_ERRORS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_ERRORS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CAN_FORWARD* Arena::CreateMaybeMessage< ::primary::HV_CAN_FORWARD >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CAN_FORWARD >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_FANS_OVERRIDE* Arena::CreateMaybeMessage< ::primary::HV_FANS_OVERRIDE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_FANS_OVERRIDE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CAN_FORWARD_STATUS* Arena::CreateMaybeMessage< ::primary::HV_CAN_FORWARD_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CAN_FORWARD_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_FANS_OVERRIDE_STATUS* Arena::CreateMaybeMessage< ::primary::HV_FANS_OVERRIDE_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_FANS_OVERRIDE_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_FEEDBACKS_STATUS* Arena::CreateMaybeMessage< ::primary::HV_FEEDBACKS_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_FEEDBACKS_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_IMD_STATUS* Arena::CreateMaybeMessage< ::primary::HV_IMD_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_IMD_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::TS_STATUS* Arena::CreateMaybeMessage< ::primary::TS_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::TS_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_TS_STATUS_DAS* Arena::CreateMaybeMessage< ::primary::SET_TS_STATUS_DAS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_TS_STATUS_DAS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_TS_STATUS_HANDCART* Arena::CreateMaybeMessage< ::primary::SET_TS_STATUS_HANDCART >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_TS_STATUS_HANDCART >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::STEER_STATUS* Arena::CreateMaybeMessage< ::primary::STEER_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::STEER_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_CAR_STATUS* Arena::CreateMaybeMessage< ::primary::SET_CAR_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_CAR_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_PEDALS_RANGE* Arena::CreateMaybeMessage< ::primary::SET_PEDALS_RANGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_PEDALS_RANGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_STEERING_ANGLE_RANGE* Arena::CreateMaybeMessage< ::primary::SET_STEERING_ANGLE_RANGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_STEERING_ANGLE_RANGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::CAR_STATUS* Arena::CreateMaybeMessage< ::primary::CAR_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::CAR_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::DAS_ERRORS* Arena::CreateMaybeMessage< ::primary::DAS_ERRORS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::DAS_ERRORS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_CURRENT* Arena::CreateMaybeMessage< ::primary::LV_CURRENT >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_CURRENT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_VOLTAGE* Arena::CreateMaybeMessage< ::primary::LV_VOLTAGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_VOLTAGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_TOTAL_VOLTAGE* Arena::CreateMaybeMessage< ::primary::LV_TOTAL_VOLTAGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_TOTAL_VOLTAGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_TEMPERATURE* Arena::CreateMaybeMessage< ::primary::LV_TEMPERATURE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_TEMPERATURE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::COOLING_STATUS* Arena::CreateMaybeMessage< ::primary::COOLING_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::COOLING_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_RADIATOR_SPEED* Arena::CreateMaybeMessage< ::primary::SET_RADIATOR_SPEED >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_RADIATOR_SPEED >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_PUMPS_SPEED* Arena::CreateMaybeMessage< ::primary::SET_PUMPS_SPEED >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_PUMPS_SPEED >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_INVERTER_CONNECTION_STATUS* Arena::CreateMaybeMessage< ::primary::SET_INVERTER_CONNECTION_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_INVERTER_CONNECTION_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::INVERTER_CONNECTION_STATUS* Arena::CreateMaybeMessage< ::primary::INVERTER_CONNECTION_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::INVERTER_CONNECTION_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::LV_ERRORS* Arena::CreateMaybeMessage< ::primary::LV_ERRORS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::LV_ERRORS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SHUTDOWN_STATUS* Arena::CreateMaybeMessage< ::primary::SHUTDOWN_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SHUTDOWN_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::MARKER* Arena::CreateMaybeMessage< ::primary::MARKER >(Arena* arena) {
  return Arena::CreateInternal< ::primary::MARKER >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CELLS_VOLTAGE* Arena::CreateMaybeMessage< ::primary::HV_CELLS_VOLTAGE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CELLS_VOLTAGE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CELLS_TEMP* Arena::CreateMaybeMessage< ::primary::HV_CELLS_TEMP >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CELLS_TEMP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HV_CELL_BALANCING_STATUS* Arena::CreateMaybeMessage< ::primary::HV_CELL_BALANCING_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HV_CELL_BALANCING_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SET_CELL_BALANCING_STATUS* Arena::CreateMaybeMessage< ::primary::SET_CELL_BALANCING_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SET_CELL_BALANCING_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::HANDCART_STATUS* Arena::CreateMaybeMessage< ::primary::HANDCART_STATUS >(Arena* arena) {
  return Arena::CreateInternal< ::primary::HANDCART_STATUS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::SPEED* Arena::CreateMaybeMessage< ::primary::SPEED >(Arena* arena) {
  return Arena::CreateInternal< ::primary::SPEED >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::INV_L_REQUEST* Arena::CreateMaybeMessage< ::primary::INV_L_REQUEST >(Arena* arena) {
  return Arena::CreateInternal< ::primary::INV_L_REQUEST >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::INV_R_REQUEST* Arena::CreateMaybeMessage< ::primary::INV_R_REQUEST >(Arena* arena) {
  return Arena::CreateInternal< ::primary::INV_R_REQUEST >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::INV_L_RESPONSE* Arena::CreateMaybeMessage< ::primary::INV_L_RESPONSE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::INV_L_RESPONSE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::INV_R_RESPONSE* Arena::CreateMaybeMessage< ::primary::INV_R_RESPONSE >(Arena* arena) {
  return Arena::CreateInternal< ::primary::INV_R_RESPONSE >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_0_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_0_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_0_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_0_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_0_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_0_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_1_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_1_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_1_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_1_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_1_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_1_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_2_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_2_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_2_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_2_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_2_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_2_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_3_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_3_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_3_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_3_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_3_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_3_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_4_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_4_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_4_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_4_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_4_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_4_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_5_TX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_5_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_5_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_CELLBOARD_5_RX* Arena::CreateMaybeMessage< ::primary::FLASH_CELLBOARD_5_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_CELLBOARD_5_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_BMS_HV_TX* Arena::CreateMaybeMessage< ::primary::FLASH_BMS_HV_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_BMS_HV_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_BMS_HV_RX* Arena::CreateMaybeMessage< ::primary::FLASH_BMS_HV_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_BMS_HV_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_BMS_LV_TX* Arena::CreateMaybeMessage< ::primary::FLASH_BMS_LV_TX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_BMS_LV_TX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::FLASH_BMS_LV_RX* Arena::CreateMaybeMessage< ::primary::FLASH_BMS_LV_RX >(Arena* arena) {
  return Arena::CreateInternal< ::primary::FLASH_BMS_LV_RX >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_NLG5_CTL* Arena::CreateMaybeMessage< ::primary::BRUSA_NLG5_CTL >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_NLG5_CTL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_ST* Arena::CreateMaybeMessage< ::primary::BRUSA_ST >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_ST >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_ACT_I* Arena::CreateMaybeMessage< ::primary::BRUSA_ACT_I >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_ACT_I >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_ACT_II* Arena::CreateMaybeMessage< ::primary::BRUSA_ACT_II >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_ACT_II >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_TEMP* Arena::CreateMaybeMessage< ::primary::BRUSA_TEMP >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_TEMP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BRUSA_ERR* Arena::CreateMaybeMessage< ::primary::BRUSA_ERR >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BRUSA_ERR >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::BMS_HV_CHIMERA* Arena::CreateMaybeMessage< ::primary::BMS_HV_CHIMERA >(Arena* arena) {
  return Arena::CreateInternal< ::primary::BMS_HV_CHIMERA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::ECU_CHIMERA* Arena::CreateMaybeMessage< ::primary::ECU_CHIMERA >(Arena* arena) {
  return Arena::CreateInternal< ::primary::ECU_CHIMERA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::primary::Pack* Arena::CreateMaybeMessage< ::primary::Pack >(Arena* arena) {
  return Arena::CreateInternal< ::primary::Pack >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
